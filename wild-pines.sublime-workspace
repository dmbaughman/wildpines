{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mar",
				"margin-bottom"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pre-compiled/less/custom.less",
			"settings":
			{
				"buffer_size": 2255,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/base.html",
			"settings":
			{
				"buffer_size": 2989,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/home.html",
			"settings":
			{
				"buffer_size": 1762,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/default.html",
			"settings":
			{
				"buffer_size": 359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "content/about.mkd",
			"settings":
			{
				"buffer_size": 2884,
				"line_ending": "Unix"
			}
		},
		{
			"file": "content/forms.mkd",
			"settings":
			{
				"buffer_size": 1306,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/contact.html",
			"settings":
			{
				"buffer_size": 150,
				"line_ending": "Unix"
			}
		},
		{
			"file": "content/services.mkd",
			"settings":
			{
				"buffer_size": 991,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pre-compiled/less/responsive-custom.less",
			"settings":
			{
				"buffer_size": 303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "content/contact.mkd",
			"settings":
			{
				"buffer_size": 802,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pre-compiled/less/variables.less",
			"settings":
			{
				"buffer_size": 9423,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pre-compiled/js/scripts.js",
			"settings":
			{
				"buffer_size": 152,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 327.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"synta",
				"Set Syntax: Markdown"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"xsl",
				"Set Syntax: XSL"
			]
		],
		"width": 460.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/dmbaughman/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/dmbaughman/Sites/wildpines/pre-compiled/js/bootstrap.js",
		"/Users/dmbaughman/Sites/wildpines/content/about.mkd",
		"/Users/dmbaughman/Sites/wildpines/content/forms.mkd",
		"/Users/dmbaughman/Sites/wildpines/content/contact.mkd",
		"/Users/dmbaughman/Sites/wildpines/templates/default.html",
		"/Users/dmbaughman/Sites/wildpines/content/services.mkd",
		"/Users/dmbaughman/Sites/wildpines/templates/services.html",
		"/Users/dmbaughman/Sites/wildpines/pre-compiled/less/accordion.less",
		"/Users/dmbaughman/Sites/wildpines/pre-compiled/less/custom.less",
		"/Users/dmbaughman/Documents/googledev-www.xsl",
		"/Users/dmbaughman/Documents/googleweb4-www.xsl",
		"/Users/dmbaughman/Downloads/Generic.config",
		"/Users/dmbaughman/Documents/text-resume.txt",
		"/Users/dmbaughman/Desktop/queries-for-onebox.txt",
		"/Users/dmbaughman/Desktop/api-stuffs.txt",
		"/Users/dmbaughman/Desktop/preprod-normal-load.jmx",
		"/Volumes/sites/search/drop_box/Next-Gen-SharePoint/css/style.css",
		"/Users/dmbaughman/Documents/field-services-search.txt",
		"/Users/dmbaughman/Desktop/stable.xslt",
		"/Users/dmbaughman/Documents/www-front-end.xslt",
		"/Users/dmbaughman/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/dmbaughman/Downloads/boeing template/leftNav/index.html",
		"/Users/dmbaughman/filetypes.txt",
		"/Volumes/search/drop_box/Next-Gen-SharePoint/pages/services.aspx",
		"/Volumes/search/drop_box/Next-Gen-SharePoint/master/boeing-next-gen.master",
		"/Users/dmbaughman/Desktop/piwik-tracking-code.html",
		"/Users/dmbaughman/Desktop/bork.html",
		"/Users/dmbaughman/Sites/designicity/content/about.mkd",
		"/private/etc/hosts",
		"/private/etc/apache2/extra/httpd-vhosts.conf",
		"/private/etc/apache2/httpd.conf"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"h5",
			"h3",
			"hr",
			"{%-",
			"h3",
			"greendark",
			"burgundy",
			".search-box",
			"sharepointcompliance",
			"asp:label",
			"^.*\\squery=\"(.*)\".*",
			"query=",
			"^<topQuery",
			"map",
			"map ",
			"bldg ",
			"building ",
			"site ",
			"site",
			"\"",
			">\\d*",
			"</topquery>",
			"^.*query=",
			"query=\"(.*)\"",
			"integer",
			"\\+(.*)\\+",
			"\\\\\\\\",
			"\\+([a-z][A-Z]*)\\+",
			"(\\+[a-z][A-Z]*\\+)",
			"\\+([a-z][A-Z]*)\\+",
			"\\+([a-z][A-Z]*\\+",
			"refiner",
			"background: #f5f5f5",
			"srch-result",
			"srch-b",
			".srch-result:hover",
			"duplicates",
			"srch-result ",
			"duplicates",
			"srch-icon",
			"duplicates-link",
			"body {",
			"<html>",
			"<body",
			"body",
			"show_sidebar",
			"top-navigation",
			"result page",
			"btng",
			"<!-- *** START OF STYLESHEET *** -->\n\n<!-- **********************************************************************\n XSL to format the search output for Google Search Appliance\n     ********************************************************************** -->\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"2.0\">\n\n<!-- **********************************************************************\n include customer-onebox.xsl, which is auto-generated from the customer's\n set of OneBox Module definitions, and in turn invokes either the default\n OneBox template, or the customer's:\n********************************************************************** -->\n<xsl:include href=\"customer-onebox.xsl\"/>\n\n<xsl:output method=\"html\"/>\n\n<!-- **********************************************************************\n Logo setup (can be customized)\n     - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE\n     - logo url\n     - logo size: '' for default image size\n     ********************************************************************** -->\n<xsl:variable name=\"show_logo\">1</xsl:variable>\n<xsl:variable name=\"logo_url\">http://www.boeing.com/images/logo.jpg</xsl:variable>\n<xsl:variable name=\"logo_width\">186</xsl:variable>\n<xsl:variable name=\"logo_height\">81</xsl:variable>\n\n<!-- **********************************************************************\n Global Style variables (can be customized): '' for using browser's default\n     ********************************************************************** -->\n\n<xsl:variable name=\"global_font\">\"Helvetica Neue\",Helvetica,arial,sans-serif</xsl:variable>\n<xsl:variable name=\"global_font_size\"></xsl:variable>\n<xsl:variable name=\"global_bg_color\">#ffffff</xsl:variable>\n<xsl:variable name=\"global_text_color\">#333</xsl:variable>\n<xsl:variable name=\"global_link_color\">#0039a6</xsl:variable>\n<xsl:variable name=\"global_vlink_color\">#551a8b</xsl:variable>\n<xsl:variable name=\"global_alink_color\">#ff0000</xsl:variable>\n\n\n<!-- **********************************************************************\n Result page components (can be customized)\n     - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE\n     - text and style\n     ********************************************************************** -->\n\n<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->\n<xsl:variable name=\"choose_result_page_header\">both</xsl:variable>\n\n<!-- *** customize provided result page header *** -->\n<xsl:variable name=\"show_swr_link\">1</xsl:variable>\n<xsl:variable name=\"swr_search_anchor_text\">Search Within Results</xsl:variable>\n<xsl:variable name=\"show_result_page_adv_link\">1</xsl:variable>\n<xsl:variable name=\"adv_search_anchor_text\">Advanced Search</xsl:variable>\n<xsl:variable name=\"show_result_page_help_link\">1</xsl:variable>\n<xsl:variable name=\"search_help_anchor_text\">Search Tips</xsl:variable>\n\n<!-- *** search boxes *** -->\n<xsl:variable name=\"show_top_search_box\">1</xsl:variable>\n<xsl:variable name=\"show_bottom_search_box\">1</xsl:variable>\n<xsl:variable name=\"search_box_size\">32</xsl:variable>\n\n<!-- *** choose search button type: 'text' or 'image' *** -->\n<xsl:variable name=\"choose_search_button\">image</xsl:variable>\n<xsl:variable name=\"search_button_text\"></xsl:variable>\n<xsl:variable name=\"search_button_image_url\">http://www.boeing.com/images/searchbutton_sm.gif</xsl:variable>\n<xsl:variable name=\"search_collections_xslt\"></xsl:variable>\n\n<!-- *** search info bars *** -->\n<xsl:variable name=\"show_search_info\">1</xsl:variable>\n\n<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->\n<xsl:variable name=\"choose_sep_bar\">ltblue</xsl:variable>\n<xsl:variable name=\"sep_bar_std_text\">Search</xsl:variable>\n<xsl:variable name=\"sep_bar_adv_text\">Advanced Search</xsl:variable>\n<xsl:variable name=\"sep_bar_error_text\">Error</xsl:variable>\n\n<!-- *** navigation bars: '', 'google', 'link', or 'simple'*** -->\n<xsl:variable name=\"show_top_navigation\">1</xsl:variable>\n<xsl:variable name=\"choose_bottom_navigation\">link</xsl:variable>\n<xsl:variable name=\"my_nav_align\">right</xsl:variable>\n<xsl:variable name=\"my_nav_size\">-1</xsl:variable>\n<xsl:variable name=\"my_nav_color\">#6f6f6f</xsl:variable>\n\n<!-- *** sort by date/relevance *** -->\n<xsl:variable name=\"show_sort_by\">1</xsl:variable>\n\n<!-- *** spelling suggestions *** -->\n<xsl:variable name=\"show_spelling\">1</xsl:variable>\n<xsl:variable name=\"spelling_text\">Did you mean:</xsl:variable>\n<xsl:variable name=\"spelling_text_color\">#cc0000</xsl:variable>\n\n<!-- *** synonyms suggestions *** -->\n<xsl:variable name=\"show_synonyms\">1</xsl:variable>\n<xsl:variable name=\"synonyms_text\">You could also try:</xsl:variable>\n<xsl:variable name=\"synonyms_text_color\">#cc0000</xsl:variable>\n\n<!-- *** keymatch suggestions *** -->\n<xsl:variable name=\"show_keymatch\">1</xsl:variable>\n<xsl:variable name=\"keymatch_text\">KeyMatch</xsl:variable>\n<xsl:variable name=\"keymatch_text_color\">#2255aa</xsl:variable>\n<xsl:variable name=\"keymatch_bg_color\">#e8e8ff</xsl:variable>\n\n<!-- *** Google Desktop integration *** -->\n<xsl:variable name=\"egds_show_search_tabs\">0</xsl:variable>\n<xsl:variable name=\"egds_appliance_tab_label\">Appliance</xsl:variable>\n<xsl:variable name=\"egds_show_desktop_results\">1</xsl:variable>\n\n<!-- *** onebox information *** -->\n<xsl:variable name=\"show_onebox\">1</xsl:variable>\n<xsl:variable name=\"uar_provider\"> GSA User-Added Results </xsl:variable>\n\n<!-- *** analytics information *** -->\n<xsl:variable name=\"analytics_account\"></xsl:variable>\n\n<!-- *** ASR enabling *** -->\n<xsl:variable name=\"show_asr\">0</xsl:variable>\n\n<!-- *** Dynamic Navigation *** -->\n<xsl:variable name=\"show_dynamic_navigation\">0</xsl:variable>\n<xsl:variable name=\"dyn_nav_max_rows\">6</xsl:variable>\n<xsl:variable name=\"render_dynamic_navigation\"><xsl:if\n  test=\"$show_dynamic_navigation != '0' and count(/GSP/RES/PARM) > 0\">1</xsl:if>\n</xsl:variable>\n\n<!-- *** Show Google Apps results on right side as a sidebar element *** -->\n<xsl:variable name=\"show_apps_segmented_ui\">0</xsl:variable>\n\n<!-- *** Google Site Search results *** -->\n<xsl:variable name=\"show_gss_results\">0</xsl:variable>\n<xsl:variable name=\"gss_search_engine_id\"></xsl:variable>\n\n<!-- *** Twitter Search results *** -->\n<xsl:variable name=\"show_twitter_results\">0</xsl:variable>\n<xsl:variable name=\"twitter_search_operators\"></xsl:variable>\n\n<!-- *** People Search results *** -->\n<xsl:variable name=\"show_people_search\">0</xsl:variable>\n\n<!-- *** Sidebar for holding elements that can load data asynchronously *** -->\n<xsl:variable name=\"show_sidebar\">\n  <xsl:choose>\n    <xsl:when test=\"($show_apps_segmented_ui = '1' or $show_gss_results = '1' or\n                     $show_twitter_results = '1' or $show_people_search = '1') and\n                     $show_dynamic_navigation != '1' and /GSP/Q != '' and\n                     ($show_res_clusters = '0' or $res_cluster_position != 'right')\">\n      <xsl:value-of select=\"'1'\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"'0'\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- **********************************************************************\n Result elements (can be customized)\n     - whether to show an element ('1' for yes, '0' for no)\n     - font/size/color ('' for using style of the context)\n     ********************************************************************** -->\n\n<!-- *** result title and snippet *** -->\n<xsl:variable name=\"show_res_title\">1</xsl:variable>\n<xsl:variable name=\"res_title_length\">70</xsl:variable>\n<xsl:variable name=\"res_title_length_default\">70</xsl:variable>\n<xsl:variable name=\"res_title_color\">#0039a6</xsl:variable>\n<xsl:variable name=\"res_title_size\"></xsl:variable>\n<xsl:variable name=\"show_res_snippet\">1</xsl:variable>\n<xsl:variable name=\"res_snippet_size\">80%</xsl:variable>\n\n<!-- *** keyword match (in title or snippet) *** -->\n<xsl:variable name=\"res_keyword_color\"></xsl:variable>\n<xsl:variable name=\"res_keyword_size\"></xsl:variable>\n<xsl:variable name=\"res_keyword_format\">b</xsl:variable> <!-- 'b' for bold -->\n\n<!-- *** link URL *** -->\n<xsl:variable name=\"show_res_url\">1</xsl:variable>\n<xsl:variable name=\"res_url_color\">#008000</xsl:variable>\n<xsl:variable name=\"res_url_size\">-1</xsl:variable>\n<xsl:variable name=\"truncate_result_urls\">1</xsl:variable>\n<xsl:variable name=\"truncate_result_url_length\">100</xsl:variable>\n\n<!-- *** misc elements *** -->\n<xsl:variable name=\"show_meta_tags\">0</xsl:variable>\n<xsl:variable name=\"show_res_size\">1</xsl:variable>\n<xsl:variable name=\"show_res_date\">1</xsl:variable>\n<xsl:variable name=\"show_res_cache\">1</xsl:variable>\n\n<!-- *** used in result cache link, similar pages link, and description *** -->\n<xsl:variable name=\"faint_color\">#7777cc</xsl:variable>\n\n<!-- *** show secure results radio button *** -->\n<xsl:variable name=\"show_secure_radio\">0</xsl:variable>\n\n<!-- *** show suggestions (remote aut-completions) *** -->\n<xsl:variable name=\"show_suggest\">0</xsl:variable>\n\n<!-- **********************************************************************\n Other variables (can be customized)\n     ********************************************************************** -->\n\n<!-- *** page title *** -->\n<xsl:variable name=\"front_page_title\">Boeing Search</xsl:variable>\n<xsl:variable name=\"result_page_title\">Boeing Search Results</xsl:variable>\n<xsl:variable name=\"adv_page_title\">Boeing Advanced Search</xsl:variable>\n<xsl:variable name=\"error_page_title\">Error</xsl:variable>\n<xsl:variable name=\"swr_page_title\">Search Within Results</xsl:variable>\n\n<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->\n<xsl:variable name=\"choose_adv_search_page_header\">both</xsl:variable>\n\n<!-- *** cached page header text *** -->\n<xsl:variable name=\"cached_page_header_text\">This is the cached copy of</xsl:variable>\n\n<!-- *** error message text *** -->\n<xsl:variable name=\"server_error_msg_text\">A server error has occurred.</xsl:variable>\n<xsl:variable name=\"server_error_des_text\">Check server response code in details.</xsl:variable>\n<xsl:variable name=\"xml_error_msg_text\">Unknown XML result type.</xsl:variable>\n<xsl:variable name=\"xml_error_des_text\">View page source to see the offending XML.</xsl:variable>\n\n<!-- *** advanced search page panel background color *** -->\n<xsl:variable name=\"adv_search_panel_bgcolor\">#cbdced</xsl:variable>\n\n<!-- *** dynamic result cluster options *** -->\n<xsl:variable name=\"show_res_clusters\">0</xsl:variable>\n<xsl:variable name=\"res_cluster_position\">right</xsl:variable>\n\n<!-- *** alerts2 options *** -->\n<xsl:variable name=\"show_alerts2\">0</xsl:variable>\n\n<!-- **********************************************************************\n My global page header/footer (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"my_page_header\">\n  <!-- *** replace the following with your own xhtml code or replace the text\n   between the xsl:text tags with html escaped html code *** -->\n  <xsl:text disable-output-escaping=\"yes\"> &lt;!-- Please enter html code below. --&gt;</xsl:text>\n</xsl:template>\n\n<xsl:template name=\"my_page_footer\">\n  <span class=\"p\">\n    <xsl:text disable-output-escaping=\"yes\"> &lt;!-- Please enter html code below. --&gt;</xsl:text>\n  </span>\n  <xsl:apply-templates select=\"TraceNode\"/>\n</xsl:template>\n\n<!-- *** showing up serve-logs in footer *** -->\n<xsl:template match=\"TraceNode\">\n  <table>\n    <i>Total time taken : <xsl:value-of select = \"@out-time\"/>-<xsl:value-of select = \"@in-time\"/></i>\n    <xsl:apply-templates select=\"Record\"/>\n  </table>\n</xsl:template>\n\n<xsl:template match=\"Record\">\n   <tr>\n     <td> <xsl:value-of select = \"Stmt/@log\"/> </td>\n     <td> <i><xsl:value-of select = \"@time-from-start\"/></i> </td>\n   </tr>\n</xsl:template>\n\n<!-- **********************************************************************\n Logo template (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"logo\">\n    <a ctype='logo' href=\"{$home_url}\"><img src=\"{$logo_url}\"\n      width=\"{$logo_width}\" height=\"{$logo_height}\"\n      alt=\"Go to Google Home\" border=\"0\" /></a>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Search result page header (can be customized): logo and search box\n     ********************************************************************** -->\n<xsl:template name=\"result_page_header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <xsl:if test=\"$show_logo != '0'\">\n        <tr>\n          <td rowspan=\"3\" valign=\"top\">\n            <xsl:call-template name=\"logo\"/>\n            <xsl:call-template name=\"nbsp3\"/>\n          </td>\n        </tr>\n      </xsl:if>\n      <xsl:if test=\"$show_top_search_box != '0'\">\n        <tr>\n          <td valign=\"middle\">\n            <xsl:call-template name=\"search_box\">\n              <xsl:with-param name=\"type\" select=\"'std_top'\"/>\n            </xsl:call-template>\n          </td>\n        </tr>\n      </xsl:if>\n      <xsl:if test=\"/GSP/CT\">\n                <tr>\n          <td valign=\"top\">\n            <br/>\n            <xsl:call-template name=\"stopwords\"/>\n            <br/>\n          </td>\n        </tr>\n      </xsl:if>\n    </table>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Search within results page header (can be customized): logo and search box \n     ********************************************************************** -->\n<xsl:template name=\"swr_page_header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <xsl:if test=\"$show_logo != '0'\">\n        <tr>\n          <td rowspan=\"3\" valign=\"top\">\n            <xsl:call-template name=\"logo\"/>\n            <xsl:call-template name=\"nbsp3\"/>\n          </td>\n        </tr>\n      </xsl:if>\n      <xsl:if test=\"$show_top_search_box != '0'\">\n        <tr>\n          <td valign=\"middle\">\n            <xsl:call-template name=\"search_box\">\n              <xsl:with-param name=\"type\" select=\"'swr'\"/>\n            </xsl:call-template>\n          </td>\n        </tr>\n      </xsl:if>\n    </table>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Home search page header (can be customized): logo and search box\n     ********************************************************************** -->\n<xsl:template name=\"home_page_header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <xsl:if test=\"$show_logo != '0'\">\n        <tr>\n          <td rowspan=\"3\" valign=\"top\">\n            <xsl:call-template name=\"logo\"/>\n            <xsl:call-template name=\"nbsp3\"/>\n          </td>\n        </tr>\n      </xsl:if>\n      <xsl:if test=\"$show_top_search_box != '0'\">\n        <tr>\n          <td valign=\"middle\">\n            <xsl:call-template name=\"search_box\">\n              <xsl:with-param name=\"type\" select=\"'home'\"/>\n            </xsl:call-template>\n          </td>\n        </tr>\n      </xsl:if>\n    </table>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Separation bar variables (used in advanced search header and result page)\n     ********************************************************************** -->\n<xsl:variable name=\"sep_bar_border_color\">\n  <xsl:choose>\n    <xsl:when test=\"$choose_sep_bar = 'ltblue'\">#0039a6</xsl:when>\n    <xsl:when test=\"$choose_sep_bar = 'blue'\">#0039a6</xsl:when>\n    <xsl:otherwise><xsl:value-of select=\"$global_bg_color\"/></xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<xsl:variable name=\"sep_bar_bg_color\">\n  <xsl:choose>\n    <xsl:when test=\"$choose_sep_bar = 'ltblue'\">#e5ecf9</xsl:when>\n    <xsl:when test=\"$choose_sep_bar = 'blue'\">#3366cc</xsl:when>\n    <xsl:otherwise><xsl:value-of select=\"$global_bg_color\"/></xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<xsl:variable name=\"sep_bar_text_color\">\n  <xsl:choose>\n    <xsl:when test=\"$choose_sep_bar = 'ltblue'\">#333</xsl:when>\n    <xsl:when test=\"$choose_sep_bar = 'blue'\">#ffffff</xsl:when>\n    <xsl:otherwise><xsl:value-of select=\"$global_text_color\"/></xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- **********************************************************************\n Advanced search page header HTML (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"advanced_search_header\">\n      <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\n        <tr>\n\n          <td valign=\"top\">\n            <xsl:if test=\"$show_logo != '0'\">\n                  <xsl:call-template name=\"logo\"/>\n            </xsl:if>\n          </td>\n        </tr>\n      </table>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Cached page header (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"cached_page_header\">\n  <xsl:param name=\"cached_page_url\"/>\n  <xsl:variable name=\"stripped_url\" select=\"substring-after($cached_page_url,\n                                                            '://')\"/>\n<table border=\"1\" width=\"100%\">\n  <tr>\n    <td>\n      <table border=\"1\" width=\"100%\" cellpadding=\"10\" cellspacing=\"0\"\n        bgcolor=\"{$global_bg_color}\" color=\"{$global_bg_color}\">\n        <tr>\n          <td>\n            <font face=\"{$global_font}\" color=\"{$global_text_color}\" size=\"-1\">\n             <xsl:value-of select=\"$cached_page_header_text\"/>\n             <xsl:call-template name=\"nbsp\"/>\n             <xsl:choose>\n              <xsl:when test=\"starts-with($cached_page_url,\n                                          $db_url_protocol)\">\n               <a ctype=\"cache\" href=\"{concat('/db/',$stripped_url)}\">\n               <font color=\"{$global_link_color}\">\n               <xsl:value-of select=\"$cached_page_url\"/></font></a>.<br/>\n              </xsl:when>\n              <xsl:when test=\"starts-with($cached_page_url,\n                                          $nfs_url_protocol)\">\n               <a ctype=\"cache\" href=\"{concat('/nfs/',$stripped_url)}\">\n               <font color=\"{$global_link_color}\">\n               <xsl:value-of select=\"$cached_page_url\"/></font></a>.<br/>\n              </xsl:when>\n              <xsl:when test=\"starts-with($cached_page_url,\n                                          $smb_url_protocol)\">\n               <a ctype=\"cache\" href=\"{concat('/smb/',$stripped_url)}\">\n               <font color=\"{$global_link_color}\">\n               <xsl:value-of select=\"$cached_page_url\"/></font></a>.<br/>\n              </xsl:when>\n              <xsl:when test=\"starts-with($cached_page_url,\n                                          $unc_url_protocol)\">\n               <xsl:variable name=\"display_url\">\n                 <xsl:call-template name=\"convert_unc\">\n                   <xsl:with-param name=\"string\" select=\"$stripped_url\"/>\n                 </xsl:call-template>\n               </xsl:variable>\n               <a ctype=\"cache\" href=\"{concat('file://',$stripped_url)}\">\n               <font color=\"{$global_link_color}\">\n               <xsl:value-of select=\"$display_url\"/></font></a>.<br/>\n              </xsl:when>\n              <xsl:otherwise>\n               <a ctype=\"cache\" href=\"{$cached_page_url}\"><font color=\"{$global_link_color}\">\n               <xsl:value-of select=\"$cached_page_url\"/></font></a>.<br/>\n              </xsl:otherwise>\n             </xsl:choose>\n            </font>\n          </td>\n        </tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<hr/>\n</xsl:template>\n\n<!-- **********************************************************************\n Suggest service javascript (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"gsa_suggest\">\n<xsl:variable name=\"ss_g_one_name_to_display\">Suggestion</xsl:variable>\n<xsl:variable name=\"ss_g_more_names_to_display\">Suggestions</xsl:variable>\n<xsl:variable name=\"ss_non_query_empty_title\">No Title</xsl:variable>\n<script type=\"text/javascript\">\n/**\n * HTML element names for the search form, the spellchecking suggestion, and the\n * cluster suggestions. The search form must have the following input elements:\n * \"q\" (for search box), \"site\", \"client\".\n * @type {string}\n */\nvar ss_form_element = 'suggestion_form'; // search form\n\n/**\n * Name of search suggestion drop down.\n * @type {string}\n */\nvar ss_popup_element = 'search_suggest'; // search suggestion drop-down\n\n/**\n * Types of suggestions to include.  Just one options now, but reserving the\n * code for more types\n *   g - suggest server\n * Array sequence determines how different suggestion types are shown.\n * Empty array would effectively turn off suggestions.\n * @type {object}\n */\nvar ss_seq = [ 'g' ];\n\n/**\n * Suggestion type name to display when there is only one suggestion.\n * @type {string}\n */\nvar ss_g_one_name_to_display =\n    \"<xsl:value-of select=\"$ss_g_one_name_to_display\"/>\";\n\n/**\n * Suggestion type name to display when there are more than one suggestions.\n * @type {string}\n */\nvar ss_g_more_names_to_display =\n    \"<xsl:value-of select=\"$ss_g_more_names_to_display\"/>\";\n\n/**\n * The max suggestions to display for different suggestion types.\n * No-positive values are equivalent to unlimited.\n * For key matches, -1 means using GSA default (not tagging numgm parameter),\n * 0 means unlimited.\n * Be aware that GSA has a published max limit of 10 for key matches.\n * @type {number}\n */\nvar ss_g_max_to_display = 10;\n\n/**\n * The max suggestions to display for all suggestion types.\n * No-positive values are equivalent to unlimited.\n * @type {number}\n */\nvar ss_max_to_display = 12;\n\n/**\n * Idling interval for fast typers.\n * @type {number}\n */\nvar ss_wait_millisec = 300;\n\n/**\n * Delay time to avoid contention when drawing the suggestion box by various\n * parallel processes.\n * @type {number}\n */\nvar ss_delay_millisec = 30;\n\n/**\n * Host name or IP address of GSA.\n * Null value can be used if the JS code loads from the GSA.\n * For local test, use null if there is a &lt;base> tag pointing to the GSA,\n * otherwise use the full GSA host name\n * @type {string}\n */\nvar ss_gsa_host = null;\n\n/**\n * Constant that represents legacy output format.\n * @type {string}\n */\nvar SS_OUTPUT_FORMAT_LEGACY = 'legacy';\n\n/**\n * Constant that represents OpenSearch output format.\n * @type {string}\n */\nvar SS_OUTPUT_FORMAT_OPEN_SEARCH = 'os';\n\n/**\n * Constant that represents rich output format.\n * @type {string}\n */\nvar SS_OUTPUT_FORMAT_RICH = 'rich';\n\n/**\n * What suggest request API to use.\n *   legacy - use current protocol in 6.0\n *            Request: /suggest?token=&lt;query>&amp;max_matches=&lt;num>&amp;use_similar=0\n *            Response: [ \"&lt;term 1>\", \"&lt;term 2>\", ..., \"&lt;term n>\" ]\n *                   or\n *                      [] (if no result)\n *   os -     use OpenSearch protocol\n *            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=os\n *            Response: [\n *                        \"&lt;query>\",\n *                        [ \"&lt;term 1>\", \"&lt;term 2>\", ... \"&lt;term n>\" ],\n *                        [ \"&lt;content 1>\", \"&lt;content 2>\", ..., \"&lt;content n>\" ],\n *                        [ \"&lt;url 1>\", \"&lt;url 2>\", ..., \"&lt;url n>\" ]\n *                      ] (where the last two elements content and url are optional)\n *                   or\n *                      [ &lt;query>, [] ] (if no result)\n *   rich -   use rich protocol from search-as-you-type\n *            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=rich\n *            Response: {\n *                        \"query\": \"&lt;query>\",\n *                        \"results\": [\n *                          { \"name\": \"&lt;term 1>\", \"type\": \"suggest\", \"content\": \"&lt;content 1>\", \"style\": \"&lt;style 1>\", \"moreDetailsUrl\": \"&lt;url 1>\" },\n *                          { \"name\": \"&lt;term 2>\", \"type\": \"suggest\", \"content\": \"&lt;content 2>\", \"style\": \"&lt;style 2>\", \"moreDetailsUrl\": \"&lt;url 2>\" },\n *                          ...,\n *                          { \"name\": \"&lt;term n>\", \"type\": \"suggest\", \"content\": \"&lt;content n>\", \"style\": \"&lt;style n>\", \"moreDetailsUrl\": \"&lt;url n>\" }\n *                        ]\n *                      } (where type, content, style, moreDetailsUrl are optional)\n *                   or\n *                      { \"query\": &lt;query>, \"results\": [] } (if no result)\n * If unspecified or null, using legacy protocol.\n * @type {string}\n */\nvar ss_protocol = SS_OUTPUT_FORMAT_RICH;\n\n/**\n * Whether to allow non-query suggestion items.\n * Setting it to false can bring results from \"os\" and \"rich\" responses into\n * backward compatible with \"legacy\".\n * @type {boolean}\n */\nvar ss_allow_non_query = true;\n\n/**\n * Default title text when the non-query suggestion item does not have a useful\n * title.\n * The default display text should be internalionalized.\n * @type {string}\n */\nvar ss_non_query_empty_title =\n    \"<xsl:value-of select=\"$ss_non_query_empty_title\"/>\";\n\n/**\n * Whether debugging is allowed.  If so, toggle with F2 key.\n * @type {boolean}\n */\nvar ss_allow_debug = false;\n</script>\n<script type=\"text/javascript\" src=\"ss.js\"></script>\n</xsl:template>\n\n\n<!-- **********************************************************************\n \"Search Within Results\" search input page (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"swr_search\">\n<html>\n  <xsl:call-template name=\"langHeadStart\"/>\n    <title><xsl:value-of select=\"$swr_page_title\"/></title>\n  <xsl:call-template name=\"style\"/>\n  <xsl:call-template name=\"langHeadEnd\"/>\n\n  <body dir=\"ltr\">\n  <xsl:call-template name=\"personalization\"/>\n  <xsl:call-template name=\"analytics\"/>\n\n  <xsl:call-template name=\"my_page_header\"/>\n  <xsl:call-template name=\"swr_page_header\"/>\n  <hr/>\n  <xsl:call-template name=\"copyright\"/>\n  <xsl:call-template name=\"my_page_footer\"/>\n  </body>\n</html>\n</xsl:template>\n\n\n<!-- **********************************************************************\n \"Front door\" search input page (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"front_door\">\n<html>\n  <xsl:call-template name=\"langHeadStart\"/>\n    <title><xsl:value-of select=\"$front_page_title\"/></title>\n  <xsl:call-template name=\"style\"/>\n  <xsl:if test=\"$show_suggest != '0'\">\n    <script language='javascript' src='common.js'></script>\n    <script language='javascript' src='xmlhttp.js'></script>\n    <script language='javascript' src='uri.js'></script>\n    <xsl:call-template name=\"gsa_suggest\" />\n  </xsl:if>\n  <xsl:call-template name=\"langHeadEnd\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"$show_suggest != '0'\">\n      <script language='javascript' src='common.js'></script>\n      <script language='javascript' src='xmlhttp.js'></script>\n      <script language='javascript' src='uri.js'></script>\n      <xsl:call-template name=\"gsa_suggest\" />\n\n      <body onLoad=\"ss_sf();\" dir=\"ltr\">\n      <xsl:call-template name=\"personalization\"/>\n      <xsl:call-template name=\"analytics\"/>\n\n      <xsl:call-template name=\"my_page_header\"/>\n      <xsl:call-template name=\"home_page_header\"/>\n      <hr/>\n      <xsl:call-template name=\"copyright\"/>\n      <xsl:call-template name=\"my_page_footer\"/>\n      </body>\n    </xsl:when>\n    <xsl:otherwise>\n      <body dir=\"ltr\">\n      <xsl:call-template name=\"personalization\"/>\n      <xsl:call-template name=\"analytics\"/>\n\n      <xsl:call-template name=\"my_page_header\"/>\n      <xsl:call-template name=\"home_page_header\"/>\n      <hr/>\n      <xsl:call-template name=\"copyright\"/>\n      <xsl:call-template name=\"my_page_footer\"/>\n      </body>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</html>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Empty result set (can be customized)\n     ********************************************************************** -->\n<xsl:template name=\"no_RES\">\n  <xsl:param name=\"query\"/>\n\n  <!-- *** Output Google Desktop results (if enabled and any available) *** -->\n  <xsl:if test=\"$egds_show_desktop_results != '0'\">\n    <xsl:call-template name=\"desktop_results\"/>\n  </xsl:if>\n\n  <!-- *** Handle UAR results, if any ***-->\n  <xsl:if test=\"$show_onebox != '0'  and $show_sidebar != '1'\">\n    <xsl:if test=\"/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider\">\n      <xsl:call-template name=\"onebox\"/>\n    </xsl:if>\n  </xsl:if>\n\n  <span class=\"p\">\n  <br/>\n  Your search - <b><xsl:value-of select=\"$query\"/></b> - did not match any documents.\n  <br/>\n  No pages were found containing <b>\"<xsl:value-of select=\"$query\"/>\"</b>.\n  <br/>\n  <br/>\n  Suggestions:\n  <ul>\n    <li>Make sure all words are spelled correctly.</li>\n    <li>Try different keywords.</li>\n    <xsl:if test=\"/GSP/PARAM[(@name='access') and(@value='a')]\">\n      <li>Make sure your security credentials are correct.</li>\n    </xsl:if>\n    <li>Try more general keywords.</li>\n  </ul>\n  </span>\n\n</xsl:template>\n\n\n<!-- ######################################################################\n We do not recommend changes to the following code.  Google Technical\n Support Personnel currently do not support customization of XSLT under\n these Technical Support Services Guidelines.  Such services may be\n provided on a consulting basis, at Google's then-current consulting\n services rates under a separate agreement, if Google personnel are\n available.  Please ask your Google Account Manager for more details if\n you are interested in purchasing consulting services.\n     ###################################################################### -->\n\n\n<!-- **********************************************************************\n Global Style (do not customize)\n        default font type/size/color, background color, link color\n         using HTML CSS (Cascading Style Sheets)\n     ********************************************************************** -->\n<xsl:template name=\"style\">\n<style>\n<xsl:comment>\nbody,td,div,.p,a,.d,.s{font-family:<xsl:value-of select=\"$global_font\"/>}\nbody,td,div,.p,a,.d{font-size: <xsl:value-of select=\"$global_font_size\"/>}\nbody,div,td,.p,.s{color:<xsl:value-of select=\"$global_text_color\"/>}\nbody,.d,.p,.s{background-color:<xsl:value-of select=\"$global_bg_color\"/>}\n.s{font-size: <xsl:value-of select=\"$res_snippet_size\"/>}\n.g{margin-top: 1em; margin-bottom: 1em}\n.s td{width:34em}\n.l{font-size: <xsl:value-of select=\"$res_title_size\"/>}\n.l{color: <xsl:value-of select=\"$res_title_color\"/>}\na:link,.w,.w a:link{color:<xsl:value-of select=\"$global_link_color\"/>}\n.f,.f:link,.f a:link{color:<xsl:value-of select=\"$faint_color\"/>}\na:visited,.f a:visited{color:<xsl:value-of select=\"$global_vlink_color\"/>}\na:active,.f a:active{color:<xsl:value-of select=\"$global_alink_color\"/>}\n.t{color:<xsl:value-of select=\"$sep_bar_text_color\"/>}\n.t{background-color:<xsl:value-of select=\"$sep_bar_bg_color\"/>}\n.z{display:none}\n.i,.i:link{color:#a90a08}\n.a,.a:link{color:<xsl:value-of select=\"$res_url_color\"/>}\ndiv.n {margin-top: 1ex}\n.n a{font-size: 10pt; color:<xsl:value-of select=\"$global_text_color\"/>}\n.n .i{font-size: 10pt; font-weight:bold}\n.q a:visited,.q a:link,.q a:active,.q {color:#0000cc;}\n.b,.b a{font-size: 12pt; color:#0000cc; font-weight:bold}\n.d{margin-right:1em; margin-left:1em;}\ndiv.oneboxResults {margin-top: 1em;}\n<xsl:if test=\"$show_alerts2 = '1'\">\ndiv.personalization {font-size:84%;padding: 0 0 4px;}\n</xsl:if>\n<xsl:if test=\"$show_res_clusters = '1'\">\n  <xsl:choose>\n    <xsl:when test=\"$res_cluster_position = 'top'\">\ndiv#clustering {font-size: 84%; line-height: 140%; min-height: 4.6em; _height: 4.6em; margin-top: 1em;}\ndiv#clustering h3 {font-size: 100%; font-weight: bold; margin: 0; padding: 0;}\ndiv#clustering table {margin-left: 2em; font-size: 100%;}\ndiv#clustering table a {white-space: nowrap;}\ndiv#clustering table td {padding-right: 1em;}\ndiv#clustering #cluster_status {color: #666666; margin-left: 2em;}\n</xsl:when>\n    <xsl:when test=\"$res_cluster_position = 'right'\">\ndiv#clustering {font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 2em 0 0 1em; padding-left: 1em; border-left: 1px solid #cccccc;}\ndiv#clustering h3 {font-size: 100%; font-weight: bold; margin: 0 0 0.6em 0; padding: 0;}\ndiv#clustering ul {list-style: none; margin: 0; padding: 0;}\ndiv#clustering li {margin-left: 2em; text-indent: -2em;}\ndiv#clustering #cluster_status {color: #666666;}\n</xsl:when>\n  </xsl:choose>\n</xsl:if>\n</xsl:comment>\n</style>\n<xsl:if test=\"$show_suggest != '0'\">\n<style type=\"text/css\">\n<xsl:comment>\n/**\n * Cascading Style Sheet for GSA Suggest.\n */\n\n/* Classes for suggestion box */\n\n.ss-gac-m {\n  background: white;\n  border: 1px solid black;\n  cursor: default;\n  font-size: 13px;\n  line-height: 17px;\n  margin: 0;\n  position: absolute;\n  z-index: 99;\n}\n\n.ss-gac-b {\n  background: #36c;\n  color: white;\n}\n\n.ss-gac-c {\n  overflow: hidden;\n  padding-left: 3px;\n  text-align: left;\n  white-space: nowrap;\n}\n\n.ss-gac-d {\n  color: green;\n  font-size: 10px;\n  overflow: hidden;\n  padding: 0 3px;\n  text-align: right;\n  white-space: nowrap;\n}\n\n.ss-gac-b td {\n  color: white;\n}\n\n.ss-gac-e td {\n  font-size: 10px;\n  line-height: 15px;\n  padding: 0 3px 2px;\n  text-align: right;\n}\n\n.ss-gac-e span {\n  color: #00c;\n  cursor:pointer;\n  text-decoration: underline;\n}\n\n/* Debug console */\n\ndiv#ss_debug_console {\n  background: #ffefef;\n  border: 1px solid #cf7f7f;\n  bottom: 2%;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 83%;\n  height: 60%;\n  left: 5%;\n  opacity: 0.95;\n  overflow: auto;\n  padding: 0.5em;\n  position: absolute;\n  width: 90%;\n  z-index: 5000;\n}\n\ndiv#ss_debug_console.expanded {\n  height: 60%;\n}\n\ndiv#ss_debug_console.contracted {\n  height: 8%;\n}\n\ndiv#ss_debug_console h1 {\n  color: #af0000;\n  display: inline;\n  font-size: 100%;\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n}\n\ndiv#ss_debug_console button {\n  margin: 0em 0.5em;\n}\n\ndiv#ss_debug_console table {\n  border-collapse: collapse;\n  font-size: 90%;\n  line-height: 120%;\n  margin-top: 1em;\n}\n\ndiv#ss_debug_console table th {\n  padding: 0.2em 1em;\n  text-align: left;\n}\n\ndiv#ss_debug_console table td {\n  border-top: 1px solid #cf7f7f;\n  padding: 0.2em 1em;\n}\n\ndiv#ss_debug_console table td.no {\n  text-align: right;\n}\n</xsl:comment>\n</style>\n</xsl:if>\n<xsl:if test=\"$render_dynamic_navigation = '1'\">\n<style type=\"text/css\">\n<xsl:comment>\n  /**\n   * CSS for dynamic navigation.\n   */\n  div#main_res {\n    background: #FFF none repeat scroll 0 0;\n    border-left: 1px solid #D3E1F9;\n    margin-left: 209px;\n    overflow: hidden;\n    padding-left: 5px;\n    padding-right: 4px;\n  }\n  div#main_res p {\n    margin-top: 0;\n  }\n  div#dyn_nav {\n    background: #FFF none repeat scroll 0 0;\n    position: absolute;\n    padding-top: 1px;\n    top: 0;\n    width: 205px;\n  }\n  div.dn-hdr {\n    background-color: #3366FF;\n    color: #FFF;\n    font-size: 14px;\n    height: 23px;\n    line-height: 23px;\n    margin: 0;\n    padding: 0;\n  }\n  .dn-img {\n    background: transparent url(/remove.gif) no-repeat scroll 0 0;\n    border: 0 none;\n    height: 9px;\n    position: relative;\n    width: 11px;\n  }\n  a.dn-r-img {\n    float: right;\n    margin: 3px 4px 0 4px;\n  }\n  #dyn_nav ul, li {\n    list-style-image: none;\n    list-style-position: outside;\n    list-style-type: none;\n    vertical-align: middle;\n  }\n  #dyn_nav li {\n    margin: 0 5px 4px 0;\n    width: 100%;\n  }\n  ul.dn-attr {\n    background: #FFF none repeat scroll 0 0;\n    font-size: <xsl:value-of select=\"$res_snippet_size\"/>;\n    margin: 8px 0 4px 0;\n    padding-left: 6px;\n  }\n  ul.dn-attr-hidden {\n    background: #FFF none repeat scroll 0 0;\n    border-top: 1px solid #DFDFFF;\n    margin: 0;\n    padding: 4px 0 0 0;\n  }\n  li.dn-attr-h {\n    background-color: #E5ECF9;\n    font-weight: bold;\n    line-height: 1.1;\n    padding-bottom: 1px;\n    padding-top: 1px;\n  }\n  ul.dn-attr a, a.dn-bar-link {\n    color: #1111CC;\n    text-decoration: none;\n  }\n  .dn-hidden {\n    display: none;\n  }\n  .dn-inline-block, .dn-bar-rt, .dn-bar-rt table, .dn-img, span.dn-more-img {\n    display: inline-block;\n  }\n  .dn-block {\n    display: block;\n  }\n  a.dn-attr-v:visited, a.dn-bar-link:visited {\n    color: #1111CC;\n  }\n  a.dn-attr-v:hover {\n    text-decoration: underline;\n  }\n  a.dn-link, .dn-img {\n    outline-style: none;\n  }\n  .dn-overflow {\n    overflow-x: hidden;\n  }\n  .dn-bar-v {\n    color: #000;\n  }\n  .dn-bar-rt {\n    border: 0 none;\n    float: right;\n    margin: -2px 5px 0 20px;\n  }\n  .dn-bar-nav {\n    font-size: <xsl:value-of select=\"$res_snippet_size\"/>;\n  }\n  span.dn-more-img {\n    height: 15px;\n    margin-right: 1px;\n    overflow: hidden;\n    position: relative;\n    vertical-align: text-bottom;\n    width: 15px;\n  }\n  span.dn-limg {\n    background: transparent url(/less.gif) no-repeat scroll 0 0;\n  }\n  span.dn-mimg {\n    background: transparent url(/more.gif) no-repeat scroll 0 0;\n  }\n  div.dn-bar {\n    background-color: #E5ECF9;\n    clear: both;\n    font-size: <xsl:value-of select=\"$res_snippet_size\"/>;\n    padding: 6px;\n    width: 100%;\n  }\n  div.dn-bar dfn {\n    font-size: 1.2em;\n    padding: 4px;\n  }\n  div.dn-bar a.cancel-url:hover {\n    text-decoration: line-through;\n  }\n  div.main-results {\n    margin-left: 8px;\n    margin-top: 8px;\n  }\n  div.oneboxResults table {\n    width: 100%;\n  }\n</xsl:comment>\n</style>\n</xsl:if>\n<xsl:if test=\"$show_sidebar = '1'\">\n<style type=\"text/css\">\n<xsl:comment>\n  /** Common CSS for sidebar elements. */\n  .sb-r {\n    padding: 5px 0 0 5px;\n    width: 45%;\n  }\n  .sb-r-alt {\n    padding-top: 5px;\n    width: 100%;\n  }\n  .sb-r-lbl,\n  .sb-r-lbl-apps {\n    color: #676767;\n    font-size: small;\n    font-weight: normal;\n    margin: 0 0 10px 10px;\n    text-align: left;\n  }\n  .sb-r-lbl-apps {\n    margin: 0;\n  }\n  .sb-r-border {\n    border-left: 1px solid #C9D7F1;\n  }\n  .sb-r-ld-msg-c {\n    margin-bottom: 30px;\n  }\n  .sb-r-ld-msg {\n    background-color: #3366CC;\n    color: #FFF;\n    font-size: 13px;\n    padding: 2px;\n  }\n  .sb-r-res {\n    font-size: 13px;\n    margin-bottom: 10px;\n    margin-left: 10px;\n  }\n</xsl:comment>\n</style>\n</xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n URL variables (do not customize)\n     ********************************************************************** -->\n<!-- *** if this is a test search (help variable)-->\n<xsl:variable name=\"is_test_search\"\n  select=\"/GSP/PARAM[@name='testSearch']/@value\"/>\n\n<!-- *** if this is a search within results search *** -->\n<xsl:variable name=\"swrnum\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[(@name='swrnum') and (@value!='')]\">\n      <xsl:value-of select=\"/GSP/PARAM[@name='swrnum']/@value\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"0\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- *** help_url: search tip URL (html file) *** -->\n<xsl:variable name=\"help_url\">/user_help.html</xsl:variable>\n\n<!-- *** base_url: collection info *** -->\n<xsl:variable name=\"base_url\">\n  <xsl:for-each\n    select=\"/GSP/PARAM[@name = 'client' or\n\n                     @name = 'site' or\n                     @name = 'num' or\n                     @name = 'output' or\n                     @name = 'proxystylesheet' or\n                     @name = 'access' or\n                     @name = 'lr' or\n                     @name = 'ie']\">\n    <xsl:value-of select=\"@name\"/>=<xsl:value-of select=\"@original_value\"/>\n    <xsl:if test=\"position() != last()\">&amp;</xsl:if>\n  </xsl:for-each>\n</xsl:variable>\n\n<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->\n<xsl:variable name=\"home_url\">search?<xsl:value-of select=\"$base_url\"\n  />&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>\n\n\n<!-- *** synonym_url: does not include q, as_q, and start elements *** -->\n<xsl:variable name=\"synonym_url\"><xsl:for-each\n  select=\"/GSP/PARAM[(@name != 'q') and\n                     (@name != 'as_q') and\n                     (@name != 'swrnum') and\n                     (@name != 'dnavs') and\n                     (@name != 'ie') and\n                     (@name != 'start') and\n                     (@name != 'epoch' or $is_test_search != '') and\n                     not(starts-with(@name, 'metabased_'))]\">\n    <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n    <xsl:value-of select=\"@original_value\"/>\n    <xsl:if test=\"position() != last()\">\n      <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n    </xsl:if>\n  </xsl:for-each>\n</xsl:variable>\n\n<!-- *** search_url *** -->\n<xsl:variable name=\"search_url\">\n  <xsl:for-each select=\"/GSP/PARAM[(@name != 'start') and\n                                   (@name != 'swrnum') and\n                     (@name != 'epoch' or $is_test_search != '') and\n                     not(starts-with(@name, 'metabased_'))]\">\n    <xsl:choose>\n      <xsl:when test=\"@name = 'only_apps' and $show_apps_segmented_ui = '1'\">\n        <xsl:value-of select=\"'exclude_apps=1'\" />\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n        <xsl:value-of select=\"@original_value\"/>\n      </xsl:otherwise>\n    </xsl:choose>\n    <xsl:if test=\"position() != last()\">\n      <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n    </xsl:if>\n  </xsl:for-each>\n</xsl:variable>\n\n<!-- *** search_url minus any dynamic navigation filters *** -->\n<xsl:variable name=\"search_url_no_nav\">\n  <xsl:for-each select=\"/GSP/PARAM[(@name != 'start') and\n                                   (@name != 'swrnum') and\n                                   (@name != 'dnavs') and\n                     (@name != 'epoch' or $is_test_search != '') and\n                     not(starts-with(@name, 'metabased_'))]\">\n    <xsl:choose>\n      <xsl:when test=\"@name = 'only_apps' and $show_apps_segmented_ui = '1'\">\n        <xsl:value-of select=\"'exclude_apps=1'\" />\n      </xsl:when>\n      <xsl:when test=\"@name = 'q' and /GSP/PARAM[@name='dnavs']\">\n        <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n        <xsl:value-of select=\"substring-before(@original_value,\n          concat('+', /GSP/PARAM[@name='dnavs']/@original_value))\"/>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n        <xsl:value-of select=\"@original_value\"/>\n      </xsl:otherwise>\n    </xsl:choose>\n    <xsl:if test=\"position() != last()\">\n      <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n    </xsl:if>\n  </xsl:for-each>\n</xsl:variable>\n\n<!-- *** dynamic navigation url dn_search_url *** -->\n<xsl:variable name=\"dn_search_url\">\n  <xsl:for-each select=\"/GSP/PARAM[(@name != 'start') and\n                                   (@name != 'swrnum') and\n                                   (@name != 'q') and\n                                   (@name != 'dnavs') and\n                     (@name != 'epoch' or $is_test_search != '') and\n                     not(starts-with(@name, 'metabased_'))]\">\n    <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n    <xsl:value-of select=\"@original_value\"/>\n    <xsl:if test=\"position() != last()\">\n      <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n    </xsl:if>\n  </xsl:for-each>\n</xsl:variable>\n\n <!-- *** search_url_escaped: safe for inclusion in javascript *** -->\n<xsl:variable name=\"search_url_escaped\">\n  <xsl:call-template name=\"replace_string\">\n    <xsl:with-param name=\"find\" select='\"&apos;\"'/>\n    <xsl:with-param name=\"replace\" select='\"%27\"'/>\n    <xsl:with-param name=\"string\" select=\"$search_url_no_nav\"/>\n  </xsl:call-template>\n</xsl:variable>\n\n<!-- *** filter_url: everything except resetting \"filter=\" *** -->\n<xsl:variable name=\"filter_url\">search?<xsl:for-each\n  select=\"/GSP/PARAM[(@name != 'filter') and\n                     (@name != 'epoch' or $is_test_search != '') and\n                     not(starts-with(@name, 'metabased_'))]\">\n    <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n    <xsl:value-of select=\"@original_value\"/>\n    <xsl:if test=\"position() != last()\">\n      <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n    </xsl:if>\n  </xsl:for-each>\n  <xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>\n</xsl:variable>\n\n<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->\n<xsl:variable name=\"adv_search_url\">search?<xsl:value-of\n  select=\"$search_url_no_nav\"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>\n\n<!-- *** exclude_apps: stores the value of exclude_apps query string argument,\n      if present. A value of '1' indicates that segmented UI should be\n      displayed. Value of '0' indicates that normal blended results UI should be\n      displayed. -->\n<xsl:variable name=\"exclude_apps\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[@name='exclude_apps']\">\n      <xsl:value-of select=\"/GSP/PARAM[@name='exclude_apps']/@original_value\" />\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"'1'\" />\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- *** only_apps: A value of '1' indicates returning only Google Apps\n     results. -->\n<xsl:variable name=\"only_apps\">\n  <xsl:value-of select=\"/GSP/PARAM[@name='only_apps']/@original_value\"/>\n</xsl:variable>\n\n<!-- *** db_url_protocol: googledb:// *** -->\n<xsl:variable name=\"db_url_protocol\">googledb://</xsl:variable>\n\n<!-- *** googleconnector_protocol: googleconnector:// *** -->\n<xsl:variable name=\"googleconnector_protocol\">googleconnector://</xsl:variable>\n\n<!-- *** dbconnector_protocol: dbconnector:// *** -->\n<xsl:variable name=\"dbconnector_protocol\">dbconnector://</xsl:variable>\n\n<!-- *** nfs_url_protocol: nfs:// *** -->\n<xsl:variable name=\"nfs_url_protocol\">nfs://</xsl:variable>\n\n<!-- *** smb_url_protocol: smb:// *** -->\n<xsl:variable name=\"smb_url_protocol\">smb://</xsl:variable>\n\n<!-- *** unc_url_protocol: unc:// *** -->\n<xsl:variable name=\"unc_url_protocol\">unc://</xsl:variable>\n\n<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->\n<xsl:variable name=\"swr_search_url\">search?<xsl:value-of\n  select=\"$search_url_no_nav\"/>&amp;swrnum=<xsl:value-of select=\"/GSP/RES/M\"/></xsl:variable>\n\n<!-- *** analytics_script_url: http://www.google-analytics.com/ga.js *** -->\n<xsl:variable\n name=\"analytics_script_url\">http://www.google-analytics.com/ga.js</xsl:variable>\n\n<!-- **********************************************************************\n Search Parameters (do not customize)\n     ********************************************************************** -->\n\n<!-- *** num_results: actual num_results per page *** -->\n<xsl:variable name=\"num_results\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[(@name='num') and (@value!='')]\">\n      <xsl:value-of select=\"/GSP/PARAM[@name='num']/@value\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"10\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- *** form_params: parameters carried by the search input form *** -->\n<xsl:template name=\"form_params\">\n  <xsl:for-each\n    select=\"PARAM[@name != 'q' and\n                  @name != 'ie' and\n                  not(contains(@name, 'as_')) and\n                  @name != 'btnG' and\n                  @name != 'btnI' and\n                  @name != 'site' and\n                  @name != 'filter' and\n                  @name != 'swrnum' and\n                  @name != 'start' and\n                  @name != 'access' and\n                  @name != 'ip' and\n                  @name != 'entqr' and\n                  @name != 'dnavs' and\n                  @name != 'tlen' and\n                  @name != 'exclude_apps' and\n                  @name != 'only_apps_deb' and\n                  (@name != 'epoch' or $is_test_search != '') and\n                  not(starts-with(@name ,'metabased_'))]\">\n        <input type=\"hidden\" name=\"{@name}\" value=\"{@value}\" />\n\n      <xsl:if test=\"@name = 'oe'\">\n        <input type=\"hidden\" name=\"ie\" value=\"{@value}\" />\n      </xsl:if>\n    <xsl:text>\n    </xsl:text>\n  </xsl:for-each>\n  <xsl:if test=\"not(/GSP/PARAM[@name='only_apps'])\">\n    <!-- Always provide a value for the exclude_apps hidden field\n         if only_apps param is not present. -->\n    <input type=\"hidden\" name=\"exclude_apps\" value=\"{$exclude_apps}\" />\n  </xsl:if>\n\n  <xsl:if test=\"$search_collections_xslt = '' and PARAM[@name='site']\">\n    <input type=\"hidden\" name=\"site\" value=\"{PARAM[@name='site']/@value}\"/>\n  </xsl:if>\n  <xsl:if test=\"$res_title_length != $res_title_length_default\">\n    <input type=\"hidden\" name=\"tlen\" value=\"{$res_title_length}\"/>\n  </xsl:if>\n</xsl:template>\n\n<!-- *** original query without any dynamic navigation filters *** -->\n<xsl:variable name=\"qval\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[@name='dnavs']\">\n      <xsl:value-of select=\"concat(substring-before(/GSP/Q,\n        /GSP/PARAM[@name='dnavs']/@value), ' ', substring-after(/GSP/Q,\n        /GSP/PARAM[@name='dnavs']/@value))\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"/GSP/Q\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<xsl:variable name=\"original_q\">\n  <xsl:choose>\n    <xsl:when test=\"count(/GSP/PARAM[@name='dnavs']) > 0\">\n      <xsl:value-of\n        select=\"substring-before(/GSP/PARAM[@name='q']/@original_value,\n        concat('+', /GSP/PARAM[@name='dnavs']/@original_value))\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"/GSP/PARAM[@name='q']/@original_value\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- *** space_normalized_query: q = /GSP/Q *** -->\n<xsl:variable name=\"space_normalized_query\">\n  <xsl:value-of select=\"normalize-space($qval)\"\n    disable-output-escaping=\"yes\"/>\n</xsl:variable>\n\n<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->\n<xsl:variable name=\"stripped_search_query\"><xsl:for-each\n  select=\"/GSP/PARAM[(@name = 'q') or\n                     (@name = 'as_q') or\n                     (@name = 'as_oq') or\n                     (@name = 'as_epq')]\"><xsl:value-of select=\"@original_value\"\n  /><xsl:if test=\"position() != last()\"\n    ><xsl:text disable-output-escaping=\"yes\">+</xsl:text\n     ></xsl:if></xsl:for-each>\n</xsl:variable>\n\n<xsl:variable name=\"access\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]\">\n      <xsl:value-of select=\"/GSP/PARAM[@name='access']/@original_value\"/>\n    </xsl:when>\n    <xsl:otherwise>p</xsl:otherwise>\n  </xsl:choose>\n</xsl:variable>\n\n<!-- **********************************************************************\n Script to get current page.\n     ********************************************************************** -->\n<xsl:template name=\"search_home_script\">\n <script type=\"text/javascript\">\n  function getHomeUrl() {\n    return location.href = \"/ealerts?shu=\" + escape(document.location.href);\n  }\n </script>\n</xsl:template>\n\n<!-- **********************************************************************\n Shown sign-in/sign-out links at the top of the /search page\n     ********************************************************************** -->\n\n<xsl:template name=\"sign_in\">\n    <xsl:call-template name=\"search_home_script\"/>\n    <div class=\"personalization\" width=\"100%\" align=\"right\">\n     <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>\n    </div>\n</xsl:template>\n\n<xsl:template name=\"signed_in\">\n  <xsl:call-template name=\"search_home_script\"/>\n  <div class=\"personalization\" width=\"100%\" align=\"right\">\n    <b><xsl:value-of select=\"/GSP/LOGIN\" /></b> |\n     <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |\n     <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>\n  </div>\n</xsl:template>\n\n<xsl:template name=\"personalization\">\n <xsl:if test=\"$show_alerts2 = '1'\">\n  <xsl:choose>\n   <xsl:when test=\"/GSP/PERSONALIZATION\">\n    <xsl:choose>\n      <xsl:when test=\"/GSP/LOGIN\"><xsl:call-template name=\"signed_in\"/></xsl:when>\n      <xsl:otherwise><xsl:call-template name=\"sign_in\" /></xsl:otherwise>\n    </xsl:choose>\n   </xsl:when>\n  </xsl:choose>\n </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n Figure out what kind of page this is (do not customize)\n     ********************************************************************** -->\n<xsl:template match=\"GSP\">\n  <xsl:choose>\n    <xsl:when test=\"$only_apps = '1' and $show_apps_segmented_ui = '1'\">\n      <xsl:call-template name=\"apps_only_search_results\"/>\n    </xsl:when>\n    <xsl:when test=\"Q\">\n      <xsl:choose>\n        <xsl:when test=\"$swrnum != 0\">\n          <xsl:call-template name=\"swr_search\"/>\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:call-template name=\"search_results\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:when>\n    <xsl:when test=\"CACHE\">\n      <xsl:choose>\n        <xsl:when test=\"$show_res_cache!='0'\">\n          <xsl:call-template name=\"cached_page\"/>\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:call-template name=\"no_RES\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:when>\n    <xsl:when test=\"CUSTOM/HOME\">\n      <xsl:call-template name=\"front_door\"/>\n    </xsl:when>\n    <xsl:when test=\"CUSTOM/ADVANCED\">\n      <xsl:call-template name=\"advanced_search\"/>\n    </xsl:when>\n    <xsl:when test=\"ERROR\">\n      <xsl:call-template name=\"error_page\">\n        <xsl:with-param name=\"errorMessage\" select=\"$server_error_msg_text\"/>\n        <xsl:with-param name=\"errorDescription\" select=\"$server_error_des_text\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:call-template name=\"error_page\">\n        <xsl:with-param name=\"errorMessage\" select=\"$xml_error_msg_text\"/>\n        <xsl:with-param name=\"errorDescription\" select=\"$xml_error_des_text\"/>\n      </xsl:call-template>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<!-- **********************************************************************\n Cached page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"cached_page\">\n<xsl:variable name=\"cached_page_url\" select=\"CACHE/CACHE_URL\"/>\n<xsl:variable name=\"cached_page_html\" select=\"CACHE/CACHE_HTML\"/>\n\n<!-- *** decide whether to load html page or pdf file *** -->\n<xsl:if test=\"'.pdf' != substring($cached_page_url,\n              1 + string-length($cached_page_url) - string-length('.pdf')) and\n              not(starts-with($cached_page_url, $db_url_protocol)) and\n              not(starts-with($cached_page_url, $nfs_url_protocol)) and\n              not(starts-with($cached_page_url, $smb_url_protocol)) and\n              not(starts-with($cached_page_url, $unc_url_protocol))\">\n    <base href=\"{$cached_page_url}\"/>\n</xsl:if>\n\n<!-- *** display cache page header *** -->\n<xsl:call-template name=\"cached_page_header\">\n  <xsl:with-param name=\"cached_page_url\" select=\"$cached_page_url\"/>\n</xsl:call-template>\n\n<!-- *** display cached contents *** -->\n<xsl:value-of select=\"$cached_page_html\" disable-output-escaping=\"yes\"/>\n</xsl:template>\n\n<xsl:template name=\"escape_quot\">\n  <xsl:param name=\"string\"/>\n  <xsl:call-template name=\"replace_string\">\n    <xsl:with-param name=\"find\" select=\"'&quot;'\"/>\n    <xsl:with-param name=\"replace\" select=\"'&amp;quot;'\"/>\n    <xsl:with-param name=\"string\" select=\"$string\"/>\n  </xsl:call-template>\n</xsl:template>\n\n<!-- **********************************************************************\n Advanced search page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"advanced_search\">\n\n<xsl:variable name=\"html_escaped_as_q\">\n    <xsl:call-template name=\"escape_quot\">\n      <xsl:with-param name=\"string\">\n        <xsl:choose>\n          <xsl:when test=\"/GSP/PARAM[@name='dnavs']\">\n            <xsl:value-of select=\"substring-before(/GSP/PARAM[@name='q']/@value,\n              /GSP/PARAM[@name='dnavs']/@value)\"/>\n          </xsl:when>\n          <xsl:otherwise><xsl:value-of select=\"/GSP/PARAM[@name='q']/@value\"/>\n          </xsl:otherwise>\n        </xsl:choose>\n      </xsl:with-param>\n    </xsl:call-template>\n    <xsl:if test=\"/GSP/PARAM[@name='as_q']/@value\">\n      <xsl:if test=\"/GSP/PARAM[@name='q']/@value\"> \n        <xsl:value-of select=\"' '\"/>\n      </xsl:if>\n      <xsl:call-template name=\"escape_quot\">\n        <xsl:with-param name=\"string\" select=\"/GSP/PARAM[@name='as_q']/@value\"/>\n      </xsl:call-template>\n    </xsl:if>\n</xsl:variable>\n\n<xsl:variable name=\"html_escaped_as_epq\">\n    <xsl:call-template name=\"escape_quot\">\n      <xsl:with-param name=\"string\" select=\"/GSP/PARAM[@name='as_epq']/@value\"/>\n    </xsl:call-template>\n</xsl:variable>\n\n<xsl:variable name=\"html_escaped_as_oq\">\n    <xsl:call-template name=\"escape_quot\">\n      <xsl:with-param name=\"string\" select=\"/GSP/PARAM[@name='as_oq']/@value\"/>\n    </xsl:call-template>\n</xsl:variable>\n\n<xsl:variable name=\"html_escaped_as_eq\">\n    <xsl:call-template name=\"escape_quot\">\n      <xsl:with-param name=\"string\" select=\"/GSP/PARAM[@name='as_eq']/@value\"/>\n    </xsl:call-template>\n</xsl:variable>\n\n<html>\n<xsl:call-template name=\"langHeadStart\"/>\n<title><xsl:value-of select=\"$adv_page_title\"/></title>\n<xsl:call-template name=\"style\"/>\n\n<!-- script type=\"text/javascript\" -->\n<script>\n<xsl:comment>\nfunction setFocus() {\ndocument.f.as_q.focus(); }\nfunction esc(x){\nx = escape(x).replace(/\\+/g, \"%2b\");\nif (x.substring(0,2)==\"\\%u\") x=\"\";\nreturn x;\n}\nfunction collecturl(target, custom) {\nvar p = new Array();var i = 0;var url=\"\";var z = document.f;\nif (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}\nif (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}\nif (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}\nif (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}\nif (z.as_sitesearch.value.length)\n  {p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}\nif (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}\nif (z.as_occt.options[z.as_occt.selectedIndex].value.length)\n  {p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}\nif (z.as_dt.options[z.as_dt.selectedIndex].value.length)\n  {p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}\nif (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +\n  z.lr.options[z.lr.selectedIndex].value;}\nif (z.num.options[z.num.selectedIndex].value != '10')\n  {p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}\nif (z.sort.options[z.sort.selectedIndex].value != '')\n  {p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}\nif (typeof(z.client) != 'undefined')\n  {p[i++] = 'client=' + esc(z.client.value);}\nif (typeof(z.site) != 'undefined')\n  {p[i++] = 'site=' + esc(z.site.value);}\nif (typeof(z.output) != 'undefined')\n  {p[i++] = 'output=' + esc(z.output.value);}\nif (typeof(z.proxystylesheet) != 'undefined')\n  {p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}\nif (typeof(z.ie) != 'undefined')\n  {p[i++] = 'ie=' + esc(z.ie.value);}\nif (typeof(z.oe) != 'undefined')\n  {p[i++] = 'oe=' + esc(z.oe.value);}\n\nif (typeof(z.access) != 'undefined')\n  {p[i++] = 'access=' + esc(z.access.value);}\nif (custom != '')\n  {p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}\nif (p.length &gt; 0) {\nurl = p[0];\nfor (var j = 1; j &lt; p.length; j++) { url += \"&amp;\" + p[j]; }}\n location.href = target + '?' + url;\n}\n// </xsl:comment>\n</script>\n\n  <xsl:call-template name=\"langHeadEnd\"/>\n\n  <body onload=\"setFocus()\" dir=\"ltr\">\n    <xsl:call-template name=\"personalization\"/>\n    <xsl:call-template name=\"analytics\"/>\n\n    <!-- *** Customer's own advanced search page header *** -->\n    <xsl:if test=\"$choose_adv_search_page_header = 'mine' or\n                    $choose_adv_search_page_header = 'both'\">\n      <xsl:call-template name=\"my_page_header\"/>\n    </xsl:if>\n\n    <!--====Advanced Search Header======-->\n    <xsl:if test=\"$choose_adv_search_page_header = 'provided' or\n                    $choose_adv_search_page_header = 'both'\">\n      <xsl:call-template name=\"advanced_search_header\"/>\n    </xsl:if>\n\n    <xsl:call-template name=\"top_sep_bar\">\n      <xsl:with-param name=\"text\" select=\"$sep_bar_adv_text\"/>\n      <xsl:with-param name=\"show_info\" select=\"0\"/>\n      <xsl:with-param name=\"time\" select=\"0\"/>\n    </xsl:call-template>\n\n    <!--====Carry over Search Parameters======-->\n    <form method=\"get\" action=\"search\" name=\"f\">\n      <xsl:if test=\"PARAM[@name='client']\">\n        <input type=\"hidden\" name=\"client\"\n          value=\"{PARAM[@name='client']/@value}\" />\n      </xsl:if>\n    <!--==== site is carried over in the drop down if the menu is used =====-->\n      <xsl:if test=\"$search_collections_xslt = '' and PARAM[@name='site']\">\n        <input type=\"hidden\" name=\"site\" value=\"{PARAM[@name='site']/@value}\"/>\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='output']\">\n        <input type=\"hidden\" name=\"output\"\n          value=\"{PARAM[@name='output']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='proxystylesheet']\">\n        <input type=\"hidden\" name=\"proxystylesheet\"\n          value=\"{PARAM[@name='proxystylesheet']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='ie']\">\n        <input type=\"hidden\" name=\"ie\"\n          value=\"{PARAM[@name='ie']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='oe']\">\n        <input type=\"hidden\" name=\"oe\"\n          value=\"{PARAM[@name='oe']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='hl']\">\n        <input type=\"hidden\" name=\"hl\"\n          value=\"{PARAM[@name='hl']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='getfields']\">\n        <input type=\"hidden\" name=\"getfields\"\n          value=\"{PARAM[@name='getfields']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='requiredfields']\">\n        <input type=\"hidden\" name=\"requiredfields\"\n          value=\"{PARAM[@name='requiredfields']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='partialfields']\">\n        <input type=\"hidden\" name=\"partialfields\"\n          value=\"{PARAM[@name='partialfields']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='exclude_apps']\">\n        <input type=\"hidden\" name=\"exclude_apps\"\n          value=\"{PARAM[@name='exclude_apps']/@value}\" />\n      </xsl:if>\n      <xsl:if test=\"PARAM[@name='only_apps']\">\n        <input type=\"hidden\" name=\"only_apps\"\n          value=\"{PARAM[@name='only_apps']/@value}\" />\n      </xsl:if>\n\n      <!--====Advanced Search Options======-->\n\n      <table cellspacing=\"0\" cellpadding=\"3\" border=\"0\" width=\"100%\">\n        <tr bgcolor=\"{$adv_search_panel_bgcolor}\">\n          <td>\n            <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n              <tr bgcolor=\"{$adv_search_panel_bgcolor}\">\n                <td>\n                  <table width=\"100%\" cellspacing=\"0\" cellpadding=\"2\"\n                  border=\"0\">\n                    <tr>\n                      <td valign=\"top\" width=\"15%\"><font size=\"-1\"><br />\n                      <b>Find results</b></font> </td>\n\n                      <td width=\"85%\">\n                        <table width=\"100%\" cellpadding=\"2\"\n                        border=\"0\" cellspacing=\"0\">\n                          <tr>\n                            <td><font size=\"-1\">with <b>all</b> of the words</font></td>\n\n                            <td>\n                            <xsl:text disable-output-escaping=\"yes\">\n                             &lt;input type=&quot;text&quot;\n                             name=&quot;as_q&quot;\n                             size=&quot;25&quot; value=&quot;</xsl:text>\n                            <xsl:value-of disable-output-escaping=\"yes\"\n                             select=\"$html_escaped_as_q\"/>\n                            <xsl:text disable-output-escaping=\"yes\">&quot;&gt;</xsl:text>\n\n                            <script type=\"text/javascript\">\n                              <xsl:comment>\n                                document.f.as_q.focus();\n                              // </xsl:comment>\n                            </script>\n                            </td>\n\n                            <td valign=\"top\" rowspan=\"4\">\n                            <font size=\"-1\">\n                            <select name=\"num\">\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[(@name='num') and (@value!='10')]\">\n                                  <option value=\"10\">10 results</option>\n                                </xsl:when>\n                                <xsl:otherwise>\n                                  <option value=\"10\" selected=\"selected\">10 results</option>\n                                </xsl:otherwise>\n                              </xsl:choose>\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[(@name='num') and (@value='20')]\">\n                                  <option value=\"20\" selected=\"selected\">20 results</option>\n                                </xsl:when>\n                                  <xsl:otherwise>\n                                    <option value=\"20\">20 results</option>\n                                </xsl:otherwise>\n                              </xsl:choose>\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[(@name='num') and (@value='30')]\">\n                                  <option value=\"30\" selected=\"selected\">30 results</option>\n                                </xsl:when>\n                                <xsl:otherwise>\n                                  <option value=\"30\">30 results</option>\n                                </xsl:otherwise>\n                              </xsl:choose>\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[(@name='num') and (@value='50')]\">\n                                  <option value=\"50\" selected=\"selected\">50 results</option>\n                                </xsl:when>\n                                <xsl:otherwise>\n                                  <option value=\"50\">50 results</option>\n                                </xsl:otherwise>\n                              </xsl:choose>\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[(@name='num') and (@value='100')]\">\n                                  <option value=\"100\" selected=\"selected\">100 results</option>\n                                </xsl:when>\n                                <xsl:otherwise>\n                                  <option value=\"100\">100 results</option>\n                                </xsl:otherwise>\n                              </xsl:choose>\n                            </select>\n                            </font>\n                            </td>\n                            <xsl:call-template name=\"collection_menu\"/>\n                            <td>\n                            <font size=\"-1\">\n                            <input class=\"search-button\" type=\"submit\" name=\"btnG\"\n                              value=\"{$search_button_text}\" />\n                            </font>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td nowrap=\"nowrap\"><font size=\"-1\">with the <b>exact phrase</b></font></td>\n\n                            <td>\n                            <xsl:text disable-output-escaping=\"yes\">\n\n                             &lt;input type=&quot;text&quot;\n                             name=&quot;as_epq&quot;\n                             size=&quot;25&quot; value=&quot;</xsl:text>\n                            <xsl:value-of disable-output-escaping=\"yes\"\n                             select=\"$html_escaped_as_epq\"/>\n                            <xsl:text disable-output-escaping=\"yes\">&quot;&gt;</xsl:text>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td nowrap=\"nowrap\"><font size=\"-1\">with <b>at least one</b> of the words</font></td>\n\n                            <td>\n                            <xsl:text disable-output-escaping=\"yes\">\n\n                             &lt;input type=&quot;text&quot;\n                             name=&quot;as_oq&quot;\n                             size=&quot;25&quot; value=&quot;</xsl:text>\n                            <xsl:value-of disable-output-escaping=\"yes\"\n                             select=\"$html_escaped_as_oq\"/>\n                            <xsl:text disable-output-escaping=\"yes\">&quot;&gt;</xsl:text>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td nowrap=\"nowrap\"><font size=\"-1\"><b>without</b> the words</font></td>\n\n                            <td>\n                            <xsl:text disable-output-escaping=\"yes\">\n\n                             &lt;input type=&quot;text&quot;\n                             name=&quot;as_eq&quot;\n                             size=&quot;25&quot; value=&quot;</xsl:text>\n                            <xsl:value-of disable-output-escaping=\"yes\"\n                             select=\"$html_escaped_as_eq\"/>\n                            <xsl:text disable-output-escaping=\"yes\">&quot;&gt;</xsl:text>\n                            </td>\n                          </tr>\n                        </table>\n                      </td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n\n              <tr bgcolor=\"{$global_bg_color}\">\n                <td>\n                  <table width=\"100%\" cellspacing=\"0\"\n                  cellpadding=\"2\" border=\"0\">\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>Language</b></font></td>\n\n                      <td width=\"40%\"><font size=\"-1\">Return pages written in</font></td>\n\n                      <td><font size=\"-1\">\n\n\n\n                         <xsl:choose>\n                        <xsl:when test=\"PARAM[(@name='oe') and (@value!='')]\">\n                          <xsl:text disable-output-escaping=\"yes\">&lt;select name=&quot;lr&quot;&gt;</xsl:text>\n                        </xsl:when>\n                        <xsl:otherwise>\n                          <xsl:text disable-output-escaping=\"yes\">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>\n                        </xsl:otherwise>\n                      </xsl:choose>\n\n                        <option value=\"\">any language</option>\n\n                        <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->\n                        \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ar')]\">\n             <option value=\"lang_ar\"\n             selected=\"selected\">Arabic</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_ar\">Arabic</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_zh-CN')]\">\n             <option value=\"lang_zh-CN\"\n             selected=\"selected\">Chinese (Simplified)</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_zh-CN\">Chinese (Simplified)</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_zh-TW')]\">\n             <option value=\"lang_zh-TW\"\n             selected=\"selected\">Chinese (Traditional)</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_zh-TW\">Chinese (Traditional)</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_cs')]\">\n             <option value=\"lang_cs\"\n             selected=\"selected\">Czech</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_cs\">Czech</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_da')]\">\n             <option value=\"lang_da\"\n             selected=\"selected\">Danish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_da\">Danish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_nl')]\">\n             <option value=\"lang_nl\"\n             selected=\"selected\">Dutch</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_nl\">Dutch</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_en')]\">\n             <option value=\"lang_en\"\n             selected=\"selected\">English</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_en\">English</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_et')]\">\n             <option value=\"lang_et\"\n             selected=\"selected\">Estonian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_et\">Estonian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_fi')]\">\n             <option value=\"lang_fi\"\n             selected=\"selected\">Finnish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_fi\">Finnish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_fr')]\">\n             <option value=\"lang_fr\"\n             selected=\"selected\">French</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_fr\">French</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_de')]\">\n             <option value=\"lang_de\"\n             selected=\"selected\">German</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_de\">German</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_el')]\">\n             <option value=\"lang_el\"\n             selected=\"selected\">Greek</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_el\">Greek</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_iw')]\">\n             <option value=\"lang_iw\"\n             selected=\"selected\">Hebrew</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_iw\">Hebrew</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_hu')]\">\n             <option value=\"lang_hu\"\n             selected=\"selected\">Hungarian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_hu\">Hungarian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_is')]\">\n             <option value=\"lang_is\"\n             selected=\"selected\">Icelandic</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_is\">Icelandic</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_it')]\">\n             <option value=\"lang_it\"\n             selected=\"selected\">Italian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_it\">Italian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ja')]\">\n             <option value=\"lang_ja\"\n             selected=\"selected\">Japanese</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_ja\">Japanese</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ko')]\">\n             <option value=\"lang_ko\"\n             selected=\"selected\">Korean</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_ko\">Korean</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_lv')]\">\n             <option value=\"lang_lv\"\n             selected=\"selected\">Latvian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_lv\">Latvian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_lt')]\">\n             <option value=\"lang_lt\"\n             selected=\"selected\">Lithuanian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_lt\">Lithuanian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_no')]\">\n             <option value=\"lang_no\"\n             selected=\"selected\">Norwegian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_no\">Norwegian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_pl')]\">\n             <option value=\"lang_pl\"\n             selected=\"selected\">Polish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_pl\">Polish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_pt')]\">\n             <option value=\"lang_pt\"\n             selected=\"selected\">Portuguese</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_pt\">Portuguese</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ro')]\">\n             <option value=\"lang_ro\"\n             selected=\"selected\">Romanian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_ro\">Romanian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ru')]\">\n             <option value=\"lang_ru\"\n             selected=\"selected\">Russian</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_ru\">Russian</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_es')]\">\n             <option value=\"lang_es\"\n             selected=\"selected\">Spanish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_es\">Spanish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_sv')]\">\n             <option value=\"lang_sv\"\n             selected=\"selected\">Swedish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_sv\">Swedish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n            \n            <xsl:choose>\n             <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_tr')]\">\n             <option value=\"lang_tr\"\n             selected=\"selected\">Turkish</option>\n             </xsl:when>\n             <xsl:otherwise>\n             <option value=\"lang_tr\">Turkish</option>\n             </xsl:otherwise>\n            </xsl:choose>\n\n\n                      <xsl:text disable-output-escaping=\"yes\">&lt;/select&gt;</xsl:text>\n                      </font></td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n\n              <tr bgcolor=\"{$global_bg_color}\">\n                <td>\n                  <table width=\"100%\" cellpadding=\"2\"\n                  cellspacing=\"0\" border=\"0\">\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>File Format</b></font></td>\n\n                      <td width=\"40%\" nowrap=\"nowrap\"><font size=\"-1\"><select name=\"as_ft\">\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_ft') and (@value='i')]\">\n                            <option value=\"i\" selected=\"selected\">Only</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"i\">Only</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_ft') and (@value='e')]\">\n                            <option value=\"e\" selected=\"selected\">Don't</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"e\">Don't</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                      </select>return results of the file format</font>\n                      </td>\n\n                      <td><font size=\"-1\">\n                      <select name=\"as_filetype\">\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value!='')]\">\n                            <option value=\"\">any format</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"\" selected=\"selected\">any format</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='pdf')]\">\n                            <option value=\"pdf\" selected=\"selected\">Adobe Acrobat PDF (.pdf)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"pdf\">Adobe Acrobat PDF (.pdf)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='ps')]\">\n                            <option value=\"ps\" selected=\"selected\">Adobe Postscript (.ps)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"ps\">Adobe Postscript (.ps)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='doc')]\">\n                            <option value=\"doc\" selected=\"selected\">Microsoft Word (.doc)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"doc\">Microsoft Word (.doc)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='xls')]\">\n                            <option value=\"xls\" selected=\"selected\">Microsoft Excel (.xls)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"xls\">Microsoft Excel (.xls)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='ppt')]\">\n                            <option value=\"ppt\" selected=\"selected\">Microsoft Powerpoint (.ppt)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"ppt\">Microsoft Powerpoint (.ppt)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_filetype') and (@value='rtf')]\">\n                            <option value=\"rtf\" selected=\"selected\">Rich Text Format (.rtf)</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"rtf\">Rich Text Format (.rtf)</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                      </select>\n                      </font></td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n\n              <tr bgcolor=\"{$global_bg_color}\">\n                <td>\n                  <table width=\"100%\" cellspacing=\"0\"\n                  cellpadding=\"2\" border=\"0\">\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>Occurrences</b></font></td>\n\n                      <td nowrap=\"nowrap\" width=\"40%\"><font size=\"-1\">Return results where my terms occur</font></td>\n\n                      <td><font size=\"-1\"><select\n                      name=\"as_occt\">\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_occt') and (@value!='any')]\">\n                            <option value=\"any\"> anywhere in the page </option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"any\" selected=\"selected\">\n                              anywhere in the page\n                            </option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_occt') and (@value='title')]\">\n                            <option value=\"title\" selected=\"selected\">in the title of the page</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"title\">in the title of the page</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_occt') and (@value='url')]\">\n                            <option value=\"url\" selected=\"selected\">in the URL of the page</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"url\">in the URL of the page</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                      </select></font></td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n\n              <tr bgcolor=\"{$global_bg_color}\">\n                <td>\n                  <table width=\"100%\" cellpadding=\"2\"\n                  cellspacing=\"0\" border=\"0\">\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>Domain</b></font></td>\n\n                      <td width=\"40%\" nowrap=\"nowrap\"><font size=\"-1\"><select\n                      name=\"as_dt\">\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_dt') and (@value='i')]\">\n                            <option value=\"i\" selected=\"selected\">Only</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"i\">Only</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='as_dt') and (@value='e')]\">\n                            <option value=\"e\" selected=\"selected\">Don't</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"e\">Don't</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                      </select>return results from the site or domain</font></td>\n\n                      <td>\n                        <table cellpadding=\"0\" cellspacing=\"0\"\n                        border=\"0\">\n                          <tr>\n                            <td>\n                              <xsl:choose>\n                                <xsl:when test=\"PARAM[@name='as_sitesearch']\">\n                                  <input type=\"text\" size=\"25\"\n                                  value=\"{PARAM[@name='as_sitesearch']/@value}\"\n                                  name=\"as_sitesearch\" />\n                                </xsl:when>\n                                <xsl:otherwise>\n                                  <input type=\"text\" size=\"25\" value=\"\" name=\"as_sitesearch\" />\n                                </xsl:otherwise>\n                              </xsl:choose>\n                            </td>\n                          </tr>\n\n                          <tr>\n                            <td valign=\"top\" nowrap=\"nowrap\"><font size=\"-1\">\n                              <i>e.g. google.com, .org</i></font></td>\n                          </tr>\n                        </table>\n                      </td>\n                    </tr>\n\n                    <!-- Sort by Date feature -->\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>Sort</b></font></td>\n\n                      <td colspan=\"2\" nowrap=\"nowrap\"><font size=\"-1\"><select\n                      name=\"sort\">\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='sort') and (@value='')]\">\n                            <option value=\"\" selected=\"selected\">Sort by relevance</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"\">Sort by relevance</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"PARAM[(@name='sort') and (@value='date:D:S:d1')]\">\n                            <option value=\"date:D:S:d1\" selected=\"selected\">Sort by date</option>\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <option value=\"date:D:S:d1\">Sort by date</option>\n                          </xsl:otherwise>\n                        </xsl:choose>\n                      </select></font></td>\n                    </tr>\n                    <!-- Secure Search feature -->\n                    <xsl:if test=\"$show_secure_radio != '0'\">\n\n                    <tr>\n                      <td width=\"15%\"><font size=\"-1\"><b>Security</b></font></td>\n\n                      <td colspan=\"2\" nowrap=\"nowrap\"><font size=\"-1\">\n                        <xsl:choose>\n                          <xsl:when test=\"$access='p'\">\n                            <label><input type=\"radio\" name=\"access\" value=\"p\" checked=\"checked\" />Search public content only</label>\n                          </xsl:when>\n                        <xsl:otherwise>\n                          <label><input type=\"radio\" name=\"access\" value=\"p\"/>Search public content only</label>\n                        </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:choose>\n                          <xsl:when test=\"$access='a'\">\n                            <label><input type=\"radio\" name=\"access\" value=\"a\" checked=\"checked\" />Search public and secure content (login required)</label>\n                          </xsl:when>\n                        <xsl:otherwise>\n                          <label><input type=\"radio\" name=\"access\" value=\"a\"/>Search public and secure content (login required)</label>\n                        </xsl:otherwise>\n                        </xsl:choose>\n                      </font></td>\n                    </tr>\n                    </xsl:if>\n                  </table>\n                </td>\n              </tr>\n\n            </table>\n          </td>\n        </tr>\n      </table>\n      <br />\n      <br />\n\n      <!--====Page-Specific Search======-->\n      <table cellpadding=\"6\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><b>Page-Specific Search</b></td>\n        </tr>\n      </table>\n\n      <table cellspacing=\"0\" cellpadding=\"3\" border=\"0\" width=\"100%\">\n        <tr bgcolor=\"{$adv_search_panel_bgcolor}\">\n          <td>\n            <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"\n            border=\"0\">\n              <tr bgcolor=\"{$adv_search_panel_bgcolor}\">\n                <td>\n\n                  <table width=\"100%\" cellpadding=\"2\"\n                  cellspacing=\"0\" border=\"0\">\n                  <form method=\"get\" action=\"search\" name=\"h\">\n\n                    <tr bgcolor=\"{$global_bg_color}\">\n                      <td width=\"15%\"><font size=\"-1\"><b>Links</b></font></td>\n\n                      <td width=\"40%\" nowrap=\"nowrap\"><font size=\"-1\">Find pages that link to the page</font> </td>\n\n                      <td nowrap=\"nowrap\">\n                          <xsl:choose>\n                            <xsl:when test=\"PARAM[@name='as_lq']\">\n                              <input type=\"text\" size=\"30\"\n                               value=\"{PARAM[@name='as_lq']/@value}\"\n                                       name=\"as_lq\" />\n                          </xsl:when>\n                          <xsl:otherwise>\n                            <input type=\"text\" size=\"30\" value=\"\" name=\"as_lq\" />\n                          </xsl:otherwise>\n                        </xsl:choose>\n                        <font size=\"-1\">\n                        <input type=\"submit\" name=\"btnG\" value=\"{$search_button_text}\" /></font>\n                      </td>\n                    </tr>\n                  </form>\n                  </table>\n                </td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </table>\n\n      <xsl:call-template name=\"copyright\"/>\n\n    </form>\n\n    <!-- *** Customer's own advanced search page footer *** -->\n    <xsl:call-template name=\"my_page_footer\"/>\n\n  </body>\n</html>\n</xsl:template>\n\n<!-- **********************************************************************\n Resend query with filter=p to disable path_filtering\n if there is only one result cluster (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"redirect_if_few_results\">\n  <xsl:variable name=\"count\" select=\"count(/GSP/RES/R)\"/>\n  <xsl:variable name=\"start\" select=\"/GSP/RES/@SN\"/>\n  <xsl:variable name=\"filterall\"\n    select=\"count(/GSP/PARAM[@name='filter']) = 0\"/>\n  <xsl:variable name=\"filter\" select=\"/GSP/PARAM[@name='filter']/@value\"/>\n\n</xsl:template>\n\n<!-- **********************************************************************\n Google Apps search results (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"apps_only_search_results\">\n<html>\n  <script>\n    <xsl:comment>\n      /**\n       * Initializes the Google Apps results section by notifying the parent\n       * document containing the iframe container. The results are passed to\n       * the parent iframe container so that it can display the same in the\n       * 'div' section reserved for Google Apps results section.\n       */\n      function initGoogleApps() {\n        <xsl:choose>\n          <xsl:when test=\"RES/R\">\n            var isNextRes = '<xsl:value-of select=\"/GSP/RES/NB/NU\" />';\n            var isPrevRes = '<xsl:value-of select=\"/GSP/RES/NB/PU\" />';\n            var topNavHtml =\n                document.getElementById('top-navigation-html').innerHTML;\n            var btmNavHtml =\n                document.getElementById('bottom-navigation-html').innerHTML;\n            var btmSearchBoxHtml =\n                document.getElementById('bottom-search-box-html').innerHTML;\n            var resultsDiv = document.getElementById('apps-results-container');\n            var resultsContent = resultsDiv.innerHTML;\n            resultsDiv.innerHTML = '';\n            window.parent.displayGoogleAppsResults(\n                true, resultsContent, isNextRes, isPrevRes, topNavHtml,\n                btmNavHtml, btmSearchBoxHtml);\n          </xsl:when>\n          <xsl:otherwise>\n            window.parent.displayGoogleAppsResults(false);\n          </xsl:otherwise>\n        </xsl:choose>\n      }\n    </xsl:comment>\n  </script>\n  <xsl:variable name=\"only_apps_onload\">\n    <xsl:if test=\"not(/GSP/PARAM[(@name='only_apps_deb') and (@value='1')])\">\n      <xsl:text disable-output-escaping=\"yes\">initGoogleApps();</xsl:text>\n    </xsl:if>\n  </xsl:variable>\n  <body onload=\"{$only_apps_onload}\">\n  <div id=\"apps-results-container\">\n    <div>\n      <div class=\"sb-r-lbl-apps\">Google Apps</div>\n      <div>\n        <xsl:apply-templates select=\"RES/R\">\n          <xsl:with-param name=\"query\" select=\"Q\"/>\n        </xsl:apply-templates>\n\n        <xsl:if test=\"RES/R\">\n          <div style=\"display: none;\" id=\"top-navigation-html\">\n            <xsl:if test=\"$show_top_navigation != '0'\">\n              <xsl:call-template name=\"gen_top_navigation\" />\n            </xsl:if>\n          </div>\n\n          <div style=\"display: none;\" id=\"bottom-navigation-html\">\n            <xsl:call-template name=\"gen_bottom_navigation\" />\n          </div>\n\n          <div style=\"display: none;\" id=\"bottom-search-box-html\">\n            <xsl:if test=\"$show_bottom_search_box != '0' and RES\">\n              <xsl:call-template name=\"bottom_search_box\"/>\n            </xsl:if>\n          </div>\n        </xsl:if>\n      </div>\n    </div>\n  </div>\n  </body>\n</html>\n</xsl:template>\n\n<!-- **********************************************************************\n Search results (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"search_results\">\n<html>\n\n  <!-- *** HTML header and style *** -->\n  <xsl:call-template name=\"langHeadStart\"/>\n    <xsl:call-template name=\"redirect_if_few_results\"/>\n    <title><xsl:value-of select=\"$result_page_title\"/>:\n      <xsl:value-of select=\"$space_normalized_query\"/>\n    </title>\n    <xsl:call-template name=\"style\"/>\n    <script type=\"text/javascript\">\n      <xsl:comment>\n        <xsl:if test=\"$show_sidebar = '1'\">\n          var LEFT_SIDE_RES_CONTAINER = 'left-side-container';\n          var LEFT_BORDER_STYLE = 'sb-r-border';\n\n          /** Container element to hold the sidebar. */\n          var SIDEBAR_CONTAINER = 'sidebar-container';\n          /** Element for holding all sidebar elements. */\n          var SIDEBAR = 'sidebar';\n          /** Total elements that should be displayed in the sidebar. */\n          var totalSidebarEleToDisplay = 0;\n          /** Count of sidebar element(s) that has no results after search. */\n          var noResultsFromEleCount = 0;\n\n          /**\n           * Initializes the sidebar by loading the appropriate sidebar\n           * elements.\n           */\n          function initSidebar() {\n            document.getElementById(SIDEBAR).className = '';\n            if (!isLeftResultPresent()) {\n              var sidebarContainer = document.getElementById(SIDEBAR_CONTAINER);\n              document.getElementById(\n                  LEFT_SIDE_RES_CONTAINER).style.display = 'none';\n              sidebarContainer.className = 'sb-r-alt';\n            }\n            <xsl:if test=\"$show_people_search = '1'\">\n              totalSidebarEleToDisplay++;\n            </xsl:if>\n            <xsl:if test=\"$show_apps_segmented_ui = '1'\">\n              totalSidebarEleToDisplay++;\n            </xsl:if>\n            <xsl:if test=\"$show_gss_results = '1'\">\n              totalSidebarEleToDisplay++;\n            </xsl:if>\n            <xsl:if test=\"$show_twitter_results = '1'\">\n              totalSidebarEleToDisplay++;\n            </xsl:if>\n            // Now bootstrap the actual loading.\n            <xsl:if test=\"$show_people_search = '1'\">\n              loadPeopleSearchResults();\n            </xsl:if>\n            <xsl:if test=\"$show_apps_segmented_ui = '1'\">\n              loadGoogleAppsResults();\n            </xsl:if>\n            <xsl:if test=\"$show_gss_results = '1'\">\n              loadGssResults();\n            </xsl:if>\n            <xsl:if test=\"$show_twitter_results = '1'\">\n              loadTwitterResults();\n            </xsl:if>\n          }\n\n          /**\n           * Notifies that the caller sidebar element is not having results to\n           * display.\n           */\n          function notifyNoResults() {\n            noResultsFromEleCount++;\n            if (noResultsFromEleCount == totalSidebarEleToDisplay) {\n              if (!isLeftResultPresent()) {\n                var sidebarContainer =\n                    document.getElementById(SIDEBAR_CONTAINER);\n                sidebarContainer.style.display = 'none';\n                document.getElementById('no-results').style.display = '';\n                return true;\n              }\n            }\n            return false;\n          }\n\n          /**\n           * Notifies that the caller sidebar element is having results to\n           * display.\n           */\n          function notifyResultsPresent() {\n            var sidebar = document.getElementById(SIDEBAR);\n            if (isLeftResultPresent() &amp;&amp;\n                sidebar.className != LEFT_BORDER_STYLE) {\n              document.getElementById(SIDEBAR).className = LEFT_BORDER_STYLE;\n            }\n          }\n\n          /**\n           * Checks if the organic results on the left side are present or not.\n           */\n          function isLeftResultPresent() {\n            var leftResContainer = document.getElementById(\n                LEFT_SIDE_RES_CONTAINER).getElementsByTagName('div')[0];\n            return leftResContainer.childNodes.length != 0 ? true : false;\n          }\n        </xsl:if>\n        <xsl:if test=\"$show_apps_segmented_ui = '1'\">\n          var APPS_LOADING_MSG = 'loading-app-results';\n          var APPS_RESULTS_CONTAINER = 'apps-results-container';\n          var APPS_RESULTS_IFRAME = 'apps-results-iframe';\n          var APPS_RESULTS_MSG_CONTAINER = 'apps-results-msg';\n          var APPS_RESULTS_SECTION = 'apps-results-section';\n          var BOTTOM_SEARCH_BOX = 'bottom-search-box';\n          var NEXT_RESULTS_IN_NON_APPS =\n              '<xsl:value-of select=\"/GSP/RES/NB/NU\" />';\n          var ONLY_APPS_QUERY_PARAM = 'only_apps=1';\n          var PREV_RESULTS_IN_NON_APPS =\n              '<xsl:value-of select=\"/GSP/RES/NB/PU\" />';\n\n          /**\n           * Displays Google Apps results returned from the iframe inside the\n           * reserved div. This function is called during the onload event\n           * processing of iframe.\n           */\n          function displayGoogleAppsResults(\n              display, opt_resultsContent, opt_isNextRes, opt_isPrevRes,\n              opt_topNavHtml, opt_btmNavHtml, opt_btmSearchBoxHtml) {\n            document.getElementById(APPS_LOADING_MSG).style.display = 'none';\n            if (!display) {\n              notifyNoResults();\n              return;\n            }\n            notifyResultsPresent();\n\n            // Replace the existing top/bottom navigation bar if Google Apps\n            // is having more results and left side container is having\n            // no more results.\n            if (!NEXT_RESULTS_IN_NON_APPS &amp;&amp; opt_isNextRes ||\n                !PREV_RESULTS_IN_NON_APPS &amp;&amp; opt_isPrevRes) {\n              document.getElementById('top-navigation').innerHTML =\n                  opt_topNavHtml;\n              document.getElementById('bottom-navigation').innerHTML =\n                  opt_btmNavHtml;\n            }\n\n            var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);\n            resultsDiv.innerHTML = opt_resultsContent;\n            resultsDiv.style.display = '';\n            if (!isLeftResultPresent()) {\n              document.getElementById(BOTTOM_SEARCH_BOX).innerHTML =\n                  opt_btmSearchBoxHtml;\n            }\n          }\n\n          /**\n           * Loads the Google Apps results if 'exclude_apps' query parameter has\n           * been set to '1'. Loading of Google Apps results is done by fetching\n           * the results through the hidden iframe 'apps-results-iframe' and\n           * setting the returned HTML response in the reserved div\n           * 'apps-results-section'.\n           */\n          function loadGoogleAppsResults() {\n            var excludeApps = document.getElementsByName('exclude_apps')[0];\n            if (excludeApps.value == '1') {\n              var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);\n              resultsDiv.style.display = 'none';\n              document.getElementById(APPS_LOADING_MSG).style.display = '';\n              var appsResContainer =\n                  document.getElementById(APPS_RESULTS_CONTAINER);\n              appsResContainer.style.visibility = 'visible';\n\n              // Compose the URL to be loaded in the Google Apps iframe.\n              var url = window.location.href;\n              if (url.indexOf('exclude_apps=') > -1) {\n                url = url.replace(/exclude_apps=./i, ONLY_APPS_QUERY_PARAM);\n              } else {\n                url += '&amp;' + ONLY_APPS_QUERY_PARAM;\n              }\n\n              document.getElementById(APPS_RESULTS_IFRAME).src = url;\n            }\n          }\n        </xsl:if>\n        <xsl:if test=\"$show_gss_results = '1'\">\n          var GSS_LOADING_MSG = 'loading-gss-results';\n          var GSS_RESULTS_MSG_CONTAINER = 'gss-results-msg';\n          var GSS_RESULTS_SECTION = 'gss-results-section';\n          \n          /**\n           * Loads the Google Site Search results if it's enabled.\n           */\n          function loadGssResults() {\n            document.getElementById(GSS_LOADING_MSG).style.display = '';\n            if (!GSS_JS_API_LOADED) {\n              setTimeout('loadGssResults()', 500);\n              return;\n            }\n            var gssControl = new google.search.CustomSearchControl(\n                '<xsl:value-of select=\"$gss_search_engine_id\" />');\n            gssControl.setResultSetSize(google.search.Search.SMALL_RESULTSET);\n            gssControl.setSearchCompleteCallback(this, gssSearchComplete);\n            // Set drawing options to use our hidden input box.\n            var drawOptions = new google.search.DrawOptions();\n            drawOptions.setInput(document.getElementById('gss-hidden-input'));\n            gssControl.draw('gss-results-section', drawOptions);\n            gssControl.execute('<xsl:value-of select=\"Q\" />');\n          }\n          \n          /**\n           * Enables/disables GSS results view based on whether results were\n           * returned from GSS or not. This is a callback function that is\n           * invoked post receiving response from GSS.\n           */\n          function gssSearchComplete(searchControl, searcher) {\n            document.getElementById(GSS_LOADING_MSG).style.display = 'none';\n            if (!searcher.results.length) {\n              notifyNoResults();\n              return;\n            }\n            notifyResultsPresent();\n            document.getElementById(GSS_RESULTS_SECTION).style.display = '';\n            document.getElementById(\n                GSS_RESULTS_MSG_CONTAINER).style.display = '';\n          }\n        </xsl:if>\n        <xsl:if test=\"$show_people_search = '1'\">\n          var PS_RESULTS_MSG_CONTAINER = 'ps-results-msg';\n          var PS_RESULTS_SECTION = 'ps-results-section';\n          var PS_LOADING_MSG = 'loading-ps-results';\n          var PS_CONTENT_ID = 'people-search-ele';\n\n          /**\n           * Loads the people search results if it's enabled.\n           */\n          function loadPeopleSearchResults() {\n            var psEle = document.getElementById(PS_CONTENT_ID);\n            if (!psEle) {\n              notifyNoResults();\n              return;\n            }\n            notifyResultsPresent();\n            psEle.parentNode.removeChild(psEle);\n            document.getElementById(\n                PS_RESULTS_MSG_CONTAINER).style.display = '';\n            var psRes = document.getElementById(PS_RESULTS_SECTION);\n            psRes.appendChild(psEle);\n            psEle.style.display = '';\n            psRes.style.display = '';\n          }\n        </xsl:if>\n        <xsl:if test=\"$show_twitter_results = '1'\">\n          var TWT_RESULTS_MSG_CONTAINER = 'twitter-results-msg';\n          var TWT_RESULTS_SECTION = 'twitter-results-section';\n          var TWT_LOADING_MSG = 'loading-twitter-results';\n\n          /**\n           * Loads the Twitter results if it's enabled.\n           */\n          function loadTwitterResults() {\n            document.getElementById(TWT_LOADING_MSG).style.display = '';\n            var twitterSearch = new TW_TwitterSearcher(\n                TWT_RESULTS_SECTION,\n                '<xsl:value-of select=\"$search_url_escaped\" />',\n                '<xsl:value-of select=\"$twitter_search_operators\" />',\n                3,\n                twitterSearchComplete);\n            twitterSearch.execute();\n          }\n\n          /**\n           * Enables/disables Twitter results view based on whether results were\n           * returned from Twitter or not. This is a callback function that is\n           * invoked post receiving response from Twitter.\n           */\n          function twitterSearchComplete(twtResObj) {\n            document.getElementById(TWT_LOADING_MSG).style.display = 'none';\n            if (!twtResObj.results.length) {\n              notifyNoResults();\n              return false;\n            }\n            notifyResultsPresent();\n            document.getElementById(\n                TWT_RESULTS_MSG_CONTAINER).style.display = '';\n            return true;\n          }\n        </xsl:if>\n        <xsl:if test=\"$render_dynamic_navigation = '1'\">\n        <!-- Dynamic Navigation Javascript (do not customize) -->\n          function dnToggle(id, isMore) {\n            var posEle = document.getElementById('pos_' + id);\n            var pos = Number(posEle.innerHTML);\n            var more = document.getElementById('more_' + id);\n            var less = document.getElementById('less_' + id);\n\n            if (isMore) {\n              var ele = document.getElementById(id + '_' + pos);\n              posEle.innerHTML = pos + 1;\n\n              ele.className = 'dn-inline-block';\n              less.className = 'dn-inline-block';\n              var maxPos = Number(document.getElementById('pos_' + id + '_max').innerHTML);\n              if (pos + 1 &gt; maxPos) {\n                more.className = 'dn-hidden';\n              }\n            } else {\n              var lessVal = pos - 1;\n              var ele = document.getElementById(id + '_' + lessVal);\n              posEle.innerHTML = lessVal;\n\n              ele.className = 'dn-hidden';\n              more.className = 'dn-inline-block';\n              if (lessVal == 1) {\n                less.className = 'dn-hidden';\n              }\n            }\n          }\n        </xsl:if>\n\n        function resetForms() {\n          for (var i = 0; i &lt; document.forms.length; i++ ) {\n              document.forms[i].reset();\n          }\n        }\n        // Search query\n        var page_query = &quot;<xsl:value-of select=\"$stripped_search_query\"/>&quot;\n        // Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.\n        var page_start = &quot;<xsl:value-of select=\"/GSP/PARAM[@name='start']/@value\"/>&quot;\n        // Front end that served the page.\n        var page_site = &quot;<xsl:value-of select=\"/GSP/PARAM[@name='site']/@value\"/>&quot;\n      //</xsl:comment>\n    </script>\n  <xsl:call-template name=\"langHeadEnd\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"$show_sidebar = '1'\">\n      <xsl:if test=\"$show_suggest != '0' or $show_res_clusters = '1'\">\n        <script language='javascript' src='common.js'></script>\n        <script language='javascript' src='xmlhttp.js'></script>\n        <script language='javascript' src='uri.js'></script>\n        <xsl:call-template name=\"gsa_suggest\" />\n      </xsl:if>\n      <xsl:variable name=\"ss_load_call\">\n        <xsl:if test=\"$show_suggest != '0'\">\n          <xsl:text disable-output-escaping=\"yes\">ss_sf();</xsl:text>\n        </xsl:if>\n      </xsl:variable>\n      <xsl:if test=\"$show_res_clusters = '1'\">\n        <script language='javascript' src='cluster.js'></script>\n      </xsl:if>\n      <xsl:variable name=\"cs_load_call\">\n        <xsl:if test=\"$show_res_clusters = '1'\">\n          <xsl:text disable-output-escaping=\"yes\">cs_loadClusters('</xsl:text><xsl:value-of select=\"$search_url_escaped\" /><xsl:text disable-output-escaping=\"yes\">', cs_drawClusters);</xsl:text>\n        </xsl:if>\n      </xsl:variable>\n      <body onLoad=\"resetForms(); {$cs_load_call} {$ss_load_call}\" dir=\"ltr\">\n        <xsl:call-template name=\"search_results_body\"/>\n        <script type=\"text/javascript\">\n         initSidebar();\n        </script>\n      </body>\n    </xsl:when>\n    <xsl:when test=\"$show_res_clusters != '1' and $show_suggest != '0'\">\n      <script language='javascript' src='common.js'></script>\n      <script language='javascript' src='xmlhttp.js'></script>\n      <script language='javascript' src='uri.js'></script>\n      <xsl:call-template name=\"gsa_suggest\" />\n\n      <body onLoad=\"resetForms(); ss_sf();\" dir=\"ltr\">\n        <xsl:call-template name=\"search_results_body\"/>\n      </body>\n    </xsl:when>\n    <xsl:when test=\"$show_res_clusters = '1' and $show_suggest = '0'\">\n      <script language='javascript' src='common.js'></script>\n      <script language='javascript' src='xmlhttp.js'></script>\n      <script language='javascript' src='uri.js'></script>\n      <script language='javascript' src='cluster.js'></script>\n\n      <body onLoad=\"resetForms(); cs_loadClusters('{$search_url_escaped}', cs_drawClusters);\" dir=\"ltr\">\n        <xsl:call-template name=\"search_results_body\"/>\n      </body>\n    </xsl:when>\n    <xsl:when test=\"$show_res_clusters = '1' and $show_suggest != '0'\">\n      <script language='javascript' src='common.js'></script>\n      <script language='javascript' src='xmlhttp.js'></script>\n      <script language='javascript' src='uri.js'></script>\n      <script language='javascript' src='cluster.js'></script>\n      <xsl:call-template name=\"gsa_suggest\" />\n\n      <body onLoad=\"resetForms(); cs_loadClusters('{$search_url_escaped}', cs_drawClusters); ss_sf();\" dir=\"ltr\">\n        <xsl:call-template name=\"search_results_body\"/>\n      </body>\n    </xsl:when>\n    <xsl:otherwise>\n      <body onLoad=\"resetForms()\" dir=\"ltr\">\n        <xsl:call-template name=\"search_results_body\"/>\n      </body>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</html>\n</xsl:template>\n\n<xsl:template name=\"search_results_body\">\n  <xsl:call-template name=\"personalization\"/>\n  <xsl:call-template name=\"analytics\"/>\n\n  <!-- *** Customer's own result page header *** -->\n  <xsl:if test=\"$choose_result_page_header = 'mine' or\n                $choose_result_page_header = 'both'\">\n    <xsl:call-template name=\"my_page_header\"/>\n  </xsl:if>\n\n  <!-- *** Result page header *** -->\n  <xsl:if test=\"$choose_result_page_header = 'provided' or\n                $choose_result_page_header = 'both'\">\n    <xsl:call-template name=\"result_page_header\" />\n  </xsl:if>\n\n  <!-- *** Top separation bar *** -->\n    <xsl:if test=\"Q != ''\">\n      <xsl:call-template name=\"top_sep_bar\">\n        <xsl:with-param name=\"text\" select=\"$sep_bar_std_text\"/>\n          <xsl:with-param name=\"show_info\" select=\"$show_search_info\"/>\n        <xsl:with-param name=\"time\" select=\"TM\"/>\n      </xsl:call-template>\n    </xsl:if>\n\n    <!-- *** Handle results (if any) *** -->\n    <xsl:choose>\n      <!-- Always allow calling results template when sidebar is enabled. -->\n      <xsl:when test=\"$show_sidebar = '1'\">\n        <xsl:call-template name=\"results\">\n          <xsl:with-param name=\"query\" select=\"Q\"/>\n          <xsl:with-param name=\"time\" select=\"TM\"/>\n        </xsl:call-template>\n\n        <!-- Generates the no results message container. Display this container\n             when there are no results on both left side organic results\n             container and sidebar. -->\n        <div id=\"no-results\" style=\"display: none;\">\n          <xsl:call-template name=\"no_RES\">\n            <xsl:with-param name=\"query\" select=\"Q\"/>\n          </xsl:call-template>\n        </div>\n      </xsl:when>\n      <xsl:when test=\"RES or GM or Spelling or Synonyms or CT or\n                      (ENTOBRESULTS and\n                       not(count(ENTOBRESULTS/OBRES) = 1\n                           and ENTOBRESULTS/OBRES/provider = $uar_provider\n                           and ENTOBRESULTS/OBRES/count = 0))\">\n        <xsl:call-template name=\"results\">\n          <xsl:with-param name=\"query\" select=\"Q\"/>\n          <xsl:with-param name=\"time\" select=\"TM\"/>\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:when test=\"Q=''\">\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:call-template name=\"no_RES\">\n          <xsl:with-param name=\"query\" select=\"Q\"/>\n        </xsl:call-template>\n      </xsl:otherwise>\n    </xsl:choose>\n\n    <!-- *** Google footer *** -->\n    <xsl:call-template name=\"copyright\"/>\n\n    <!-- *** Customer's own result page footer *** -->\n    <xsl:call-template name=\"my_page_footer\"/>\n\n    <xsl:if test=\"$show_asr != '0'\">\n        <script language='javascript' src='clicklog_compiled.js'></script>\n    </xsl:if>\n\n    <!-- *** HTML footer *** -->\n</xsl:template>\n\n\n<!-- **********************************************************************\n  Collection menu beside the search box\n     ********************************************************************** -->\n<xsl:template name=\"collection_menu\">\n  <xsl:if test=\"$search_collections_xslt != ''\">\n    <td valign=\"middle\">\n        \n<select name=\"site\">\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='b2')]\">\n   <option value=\"b2\" selected=\"selected\">b2</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"b2\">b2</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='best')]\">\n   <option value=\"best\" selected=\"selected\">best</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"best\">best</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bfs')]\">\n   <option value=\"bfs\" selected=\"selected\">bfs</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bfs\">bfs</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bfsdev')]\">\n   <option value=\"bfsdev\" selected=\"selected\">bfsdev</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bfsdev\">bfsdev</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boeing')]\">\n   <option value=\"boeing\" selected=\"selected\">boeing</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boeing\">boeing</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss-moss')]\">\n   <option value=\"boss-moss\" selected=\"selected\">boss-moss</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss-moss\">boss-moss</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss-nmc')]\">\n   <option value=\"boss-nmc\" selected=\"selected\">boss-nmc</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss-nmc\">boss-nmc</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss-sok')]\">\n   <option value=\"boss-sok\" selected=\"selected\">boss-sok</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss-sok\">boss-sok</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss03')]\">\n   <option value=\"boss03\" selected=\"selected\">boss03</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss03\">boss03</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss04')]\">\n   <option value=\"boss04\" selected=\"selected\">boss04</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss04\">boss04</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss05')]\">\n   <option value=\"boss05\" selected=\"selected\">boss05</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss05\">boss05</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss07')]\">\n   <option value=\"boss07\" selected=\"selected\">boss07</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss07\">boss07</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss09')]\">\n   <option value=\"boss09\" selected=\"selected\">boss09</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss09\">boss09</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss10')]\">\n   <option value=\"boss10\" selected=\"selected\">boss10</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss10\">boss10</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss11')]\">\n   <option value=\"boss11\" selected=\"selected\">boss11</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss11\">boss11</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss12')]\">\n   <option value=\"boss12\" selected=\"selected\">boss12</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss12\">boss12</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss14')]\">\n   <option value=\"boss14\" selected=\"selected\">boss14</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss14\">boss14</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss_ehd')]\">\n   <option value=\"boss_ehd\" selected=\"selected\">boss_ehd</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss_ehd\">boss_ehd</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='boss_tax')]\">\n   <option value=\"boss_tax\" selected=\"selected\">boss_tax</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"boss_tax\">boss_tax</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bossdev')]\">\n   <option value=\"bossdev\" selected=\"selected\">bossdev</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bossdev\">bossdev</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bpg-adm')]\">\n   <option value=\"bpg-adm\" selected=\"selected\">bpg-adm</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bpg-adm\">bpg-adm</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bpg-ehd')]\">\n   <option value=\"bpg-ehd\" selected=\"selected\">bpg-ehd</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bpg-ehd\">bpg-ehd</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='bpg-gen')]\">\n   <option value=\"bpg-gen\" selected=\"selected\">bpg-gen</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"bpg-gen\">bpg-gen</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='ciim')]\">\n   <option value=\"ciim\" selected=\"selected\">ciim</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"ciim\">ciim</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='default_collection')]\">\n   <option value=\"default_collection\" selected=\"selected\">default_collection</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"default_collection\">default_collection</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='efp')]\">\n   <option value=\"efp\" selected=\"selected\">efp</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"efp\">efp</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='insite')]\">\n   <option value=\"insite\" selected=\"selected\">insite</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"insite\">insite</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='library')]\">\n   <option value=\"library\" selected=\"selected\">library</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"library\">library</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='ll')]\">\n   <option value=\"ll\" selected=\"selected\">ll</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"ll\">ll</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='megraphics')]\">\n   <option value=\"megraphics\" selected=\"selected\">megraphics</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"megraphics\">megraphics</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='mptwebsites')]\">\n   <option value=\"mptwebsites\" selected=\"selected\">mptwebsites</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"mptwebsites\">mptwebsites</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='nams')]\">\n   <option value=\"nams\" selected=\"selected\">nams</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"nams\">nams</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='ossmashup')]\">\n   <option value=\"ossmashup\" selected=\"selected\">ossmashup</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"ossmashup\">ossmashup</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp')]\">\n   <option value=\"pcselfhelp\" selected=\"selected\">pcselfhelp</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp\">pcselfhelp</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-ce')]\">\n   <option value=\"pcselfhelp-ce\" selected=\"selected\">pcselfhelp-ce</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-ce\">pcselfhelp-ce</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-ent')]\">\n   <option value=\"pcselfhelp-ent\" selected=\"selected\">pcselfhelp-ent</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-ent\">pcselfhelp-ent</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-fi')]\">\n   <option value=\"pcselfhelp-fi\" selected=\"selected\">pcselfhelp-fi</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-fi\">pcselfhelp-fi</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-in')]\">\n   <option value=\"pcselfhelp-in\" selected=\"selected\">pcselfhelp-in</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-in\">pcselfhelp-in</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-ne')]\">\n   <option value=\"pcselfhelp-ne\" selected=\"selected\">pcselfhelp-ne</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-ne\">pcselfhelp-ne</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-nw')]\">\n   <option value=\"pcselfhelp-nw\" selected=\"selected\">pcselfhelp-nw</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-nw\">pcselfhelp-nw</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-se')]\">\n   <option value=\"pcselfhelp-se\" selected=\"selected\">pcselfhelp-se</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-se\">pcselfhelp-se</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-so')]\">\n   <option value=\"pcselfhelp-so\" selected=\"selected\">pcselfhelp-so</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-so\">pcselfhelp-so</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pcselfhelp-sw')]\">\n   <option value=\"pcselfhelp-sw\" selected=\"selected\">pcselfhelp-sw</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pcselfhelp-sw\">pcselfhelp-sw</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='pppmuui')]\">\n   <option value=\"pppmuui\" selected=\"selected\">pppmuui</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"pppmuui\">pppmuui</option>\n  </xsl:otherwise>\n </xsl:choose>\n <xsl:choose>\n  <xsl:when test=\"PARAM[(@name='site') and (@value='smb')]\">\n   <option value=\"smb\" selected=\"selected\">smb</option>\n  </xsl:when>\n  <xsl:otherwise>\n   <option value=\"smb\">smb</option>\n  </xsl:otherwise>\n </xsl:choose>\n</select>\n\n    </td>\n  </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n  Search box input form (Types: std_top, std_bottom, home, swr)\n     ********************************************************************** -->\n<xsl:template name=\"search_box\">\n  <xsl:param name=\"type\"/>\n\n  <xsl:choose>\n  <xsl:when test=\"$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))\">\n  <xsl:text disable-output-escaping=\"yes\">&lt;form id=\"suggestion_form\" name=\"gs\" method=\"GET\" action=\"search\" onsubmit=\"return (this.q.value == '') ? false : true;\"&gt;</xsl:text>\n  </xsl:when>\n  <xsl:otherwise>\n  <xsl:text disable-output-escaping=\"yes\">&lt;form class=\"search-box\" name=\"gs\" method=\"GET\" action=\"search\" onsubmit=\"return (this.q.value == '') ? false : true;\"&gt;</xsl:text>\n  </xsl:otherwise>\n  </xsl:choose>\n        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n          <xsl:if test=\"($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))\">\n          <tr><td>\n                <table cellpadding=\"4\" cellspacing=\"0\">\n                  <tr><td>\n                        <xsl:call-template name=\"desktop_tab\"/>\n                  </td></tr>\n                </table>\n          </td></tr>\n          </xsl:if>\n          <xsl:if test=\"($type = 'swr')\">\n          <tr><td>\n                <table cellpadding=\"4\" cellspacing=\"0\">\n                  <tr><td>\n                    There were about <b><xsl:value-of select=\"RES/M\"/></b> results for <b><xsl:value-of select=\"$space_normalized_query\"/></b>.\n                      <br/>\n                    Use the search box below to search within these results.\n                  </td></tr>\n                </table>\n          </td></tr>\n          </xsl:if>\n          <tr><td>\n          <table cellpadding=\"0\" cellspacing=\"0\">\n        <tr>\n          <td valign=\"middle\">\n          <font size=\"-1\">\n            <xsl:choose>\n              <xsl:when test=\"($type = 'swr')\">\n                <input type=\"text\" name=\"as_q\" size=\"{$search_box_size}\" maxlength=\"256\" value=\"\"/>\n                <input type=\"hidden\" name=\"q\" value=\"{$qval}\"/>\n              </xsl:when>\n              <xsl:when test=\"$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))\">\n                <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n                <tr><td>\n                <input type=\"text\" name=\"q\" size=\"{$search_box_size}\" maxlength=\"256\" value=\"{$space_normalized_query}\" autocomplete=\"off\" onkeyup=\"ss_handleKey(event)\"/>\n                </td></tr>\n                <tr><td>\n                <table cellpadding=\"0\" cellspacing=\"0\" class=\"ss-gac-m\" style=\"width: 365px; visibility: hidden;\" id=\"search_suggest\"></table>\n                </td></tr>\n                </table>\n              </xsl:when>\n              <xsl:otherwise>\n                <input type=\"text\" name=\"q\" size=\"{$search_box_size}\" maxlength=\"256\" value=\"{$space_normalized_query}\"/>\n              </xsl:otherwise>\n            </xsl:choose>\n          </font>\n          </td>\n          <xsl:call-template name=\"collection_menu\"/>\n          <td valign=\"middle\">\n          <font size=\"-1\">\n            <xsl:call-template name=\"nbsp\"/>\n              <xsl:choose>\n              <xsl:when test=\"$choose_search_button = 'image'\">\n                        <input type=\"image\" name=\"btnG\" src=\"{$search_button_image_url}\"\n                       valign=\"bottom\" width=\"60\" height=\"26\"\n                       border=\"0\" value=\"{$search_button_text}\"/>\n              </xsl:when>\n              <xsl:otherwise>\n                <input type=\"submit\" name=\"btnG\" value=\"{$search_button_text}\"/>\n              </xsl:otherwise>\n              </xsl:choose>\n          </font>\n          </td>\n                  <td nowrap=\"1\">\n                        <font size=\"-2\">\n                        <xsl:if test=\"(/GSP/RES/M > 0) and ($show_swr_link != '0') and ($type = 'std_bottom')\">\n                                <xsl:call-template name=\"nbsp\"/>\n                                <xsl:call-template name=\"nbsp\"/>\n                                <a ctype=\"advanced_swr\" href=\"{$swr_search_url}\">\n                                        <xsl:value-of select=\"$swr_search_anchor_text\"/>\n                                </a>\n                                <br/>\n                        </xsl:if>\n                        <xsl:if test=\"$show_result_page_adv_link != '0'\">\n                                <xsl:call-template name=\"nbsp\"/>\n                                <xsl:call-template name=\"nbsp\"/>\n                                <a ctype=\"advanced\" href=\"{$adv_search_url}\">\n                                        <xsl:value-of select=\"$adv_search_anchor_text\"/>\n                                </a>\n                                <br/>\n                        </xsl:if>\n                        <xsl:if test=\"$show_result_page_help_link != '0'\">\n                                <xsl:call-template name=\"nbsp\"/>\n                                <xsl:call-template name=\"nbsp\"/>\n                                <a ctype=\"help\" href=\"{$help_url}\">\n                                        <xsl:value-of select=\"$search_help_anchor_text\"/>\n                                </a>\n                        </xsl:if>\n                        <br/>\n                        </font>\n                  </td>\n        </tr>\n        <xsl:if test=\"$show_secure_radio != '0'\">\n        <tr>\n          <td colspan=\"2\">\n          <font size=\"-1\">Search:\n            <xsl:choose>\n              <xsl:when test=\"$access='p'\">\n                <label><input type=\"radio\" name=\"access\" value=\"p\" checked=\"checked\" />public content</label>\n              </xsl:when>\n              <xsl:otherwise>\n                <label><input type=\"radio\" name=\"access\" value=\"p\"/>public content</label>\n              </xsl:otherwise>\n            </xsl:choose>\n            <xsl:choose>\n              <xsl:when test=\"$access='a'\">\n                <label><input type=\"radio\" name=\"access\" value=\"a\" checked=\"checked\" />public and secure content</label>\n              </xsl:when>\n              <xsl:otherwise>\n                <label><input type=\"radio\" name=\"access\" value=\"a\"/>public and secure content</label>\n              </xsl:otherwise>\n            </xsl:choose>\n          </font>\n          </td>\n        </tr>\n        </xsl:if>\n      </table>\n  </td></tr>\n</table>\n    <xsl:text>\n    </xsl:text>\n    <xsl:call-template name=\"form_params\"/>\n  <xsl:text disable-output-escaping=\"yes\">&lt;/form&gt;</xsl:text>\n</xsl:template>\n\n\n<!-- **********************************************************************\n  Bottom search box (do not customized)\n     ********************************************************************** -->\n<xsl:template name=\"bottom_search_box\">\n    <br clear=\"all\"/>\n    <br/>\n    <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <tr>\n        <td bgcolor=\"{$sep_bar_border_color}\"><img width=\"1\" height=\"1\" alt=\"\"/></td>\n      </tr>\n    </table>\n    <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"{$sep_bar_bg_color}\">\n      <tr>\n        <td nowrap=\"1\" bgcolor=\"{$sep_bar_bg_color}\" align=\"center\">\n        <br/>\n          <xsl:call-template name=\"search_box\">\n            <xsl:with-param name=\"type\" select=\"'std_bottom'\"/>\n          </xsl:call-template>\n        <br/>\n        </td>\n      </tr>\n    </table>\n    <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <tr>\n        <td bgcolor=\"{$sep_bar_border_color}\"><img width=\"1\" height=\"1\" alt=\"\"/></td>\n      </tr>\n    </table>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Sort-by criteria: sort by date/relevance\n     ********************************************************************** -->\n<xsl:template name=\"sort_by\">\n  <xsl:variable name=\"sort_by_url\"><xsl:for-each\n    select=\"/GSP/PARAM[(@name != 'sort') and\n                       (@name != 'start') and\n                       (@name != 'epoch' or $is_test_search != '') and\n                       not(starts-with(@name, 'metabased_'))]\">\n      <xsl:choose>\n        <xsl:when test=\"@name = 'only_apps' and $show_apps_segmented_ui = '1'\">\n          <xsl:value-of select=\"'exclude_apps=1'\" />\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:value-of select=\"@name\"/><xsl:text>=</xsl:text>\n          <xsl:value-of select=\"@original_value\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n      <xsl:if test=\"position() != last()\">\n        <xsl:text disable-output-escaping=\"yes\">&amp;</xsl:text>\n      </xsl:if>\n    </xsl:for-each>\n  </xsl:variable>\n\n  <xsl:variable name=\"sort_by_relevance_url\">\n    <xsl:value-of select=\"$sort_by_url\"\n      />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>\n\n  <xsl:variable name=\"sort_by_date_url\">\n    <xsl:value-of select=\"$sort_by_url\"\n      />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>\n\n  <table><tr valign='top'><td>\n  <span class=\"s\">\n  <xsl:choose>\n    <xsl:when test=\"/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]\">\n      <font color=\"{$global_text_color}\">\n      <xsl:text>Sort by date / </xsl:text>\n      </font>\n      <a ctype=\"sort\" href=\"search?{$sort_by_relevance_url}\">Sort by relevance</a>\n    </xsl:when>\n    <xsl:when test=\"/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]\">\n      <font color=\"{$global_text_color}\">\n      <xsl:text>Sort by date / </xsl:text>\n      </font>\n      <a ctype=\"sort\" href=\"search?{$sort_by_relevance_url}\">Sort by relevance</a>\n    </xsl:when>\n    <xsl:otherwise>\n      <a ctype=\"sort\" href=\"search?{$sort_by_date_url}\">Sort by date</a>\n      <font color=\"{$global_text_color}\">\n      <xsl:text> / Sort by relevance</xsl:text>\n      </font>\n    </xsl:otherwise>\n  </xsl:choose>\n  </span>\n  </td></tr></table>\n</xsl:template>\n\n<xsl:template name=\"cluster_results\">\n  <div id='clustering'>\n    <h3>narrow your search</h3>\n\n    <span id='cluster_status'>\n      <span id='cluster_message' style=\"display:none\">loading...</span>\n      <noscript>\n        javascript must be enabled for narrowing.\n      </noscript>\n    </span>\n\n    <xsl:choose>\n      <xsl:when test=\"$res_cluster_position = 'top'\">\n        <table>\n          <tr>\n            <td id='cluster_label0'></td>\n            <td id='cluster_label2'></td>\n            <td id='cluster_label4'></td>\n            <td id='cluster_label6'></td>\n            <td id='cluster_label8'></td>\n          </tr>\n          <tr>\n            <td id='cluster_label1'></td>\n            <td id='cluster_label3'></td>\n            <td id='cluster_label5'></td>\n            <td id='cluster_label7'></td>\n            <td id='cluster_label9'></td>\n          </tr>\n        </table>\n      </xsl:when>\n      <xsl:when test=\"$res_cluster_position = 'right'\">\n        <ul>\n          <li id='cluster_label0'></li>\n          <li id='cluster_label1'></li>\n          <li id='cluster_label2'></li>\n          <li id='cluster_label3'></li>\n          <li id='cluster_label4'></li>\n          <li id='cluster_label5'></li>\n          <li id='cluster_label6'></li>\n          <li id='cluster_label7'></li>\n          <li id='cluster_label8'></li>\n          <li id='cluster_label9'></li>\n        </ul>\n      </xsl:when>\n    </xsl:choose>\n  </div>\n</xsl:template>\n\n<!-- Generates search results navigation bar to be placed at the top. -->\n<xsl:template name=\"gen_top_navigation\">\n  <xsl:if test=\"RES\">\n    <table width=\"100%\">\n      <tr>\n        <xsl:if test=\"$show_top_navigation != '0'\">\n          <td align=\"left\">\n            <xsl:call-template name=\"google_navigation\">\n              <xsl:with-param name=\"prev\" select=\"RES/NB/PU\"/>\n              <xsl:with-param name=\"next\" select=\"RES/NB/NU\"/>\n              <xsl:with-param name=\"view_begin\" select=\"RES/@SN\"/>\n              <xsl:with-param name=\"view_end\" select=\"RES/@EN\"/>\n              <xsl:with-param name=\"guess\" select=\"RES/M\"/>\n              <xsl:with-param name=\"navigation_style\" select=\"'top'\"/>\n            </xsl:call-template>\n          </td>\n        </xsl:if>\n        <xsl:if test=\"$show_sort_by != '0'\">\n          <td align=\"right\">\n            <xsl:call-template name=\"sort_by\"/>\n          </td>\n        </xsl:if>\n      </tr>\n    </table>\n  </xsl:if>\n</xsl:template>\n\n<!-- Generates search results navigation bar to be placed at the bottom. -->\n<xsl:template name=\"gen_bottom_navigation\">\n  <xsl:if test=\"RES\">\n    <xsl:variable name=\"nav_style\">\n      <xsl:choose>\n        <xsl:when test=\"($access='s') or ($access='a')\">simple</xsl:when>\n        <xsl:otherwise>\n          <xsl:value-of select=\"$choose_bottom_navigation\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:variable>\n\n    <xsl:call-template name=\"google_navigation\">\n      <xsl:with-param name=\"prev\" select=\"RES/NB/PU\"/>\n      <xsl:with-param name=\"next\" select=\"RES/NB/NU\"/>\n      <xsl:with-param name=\"view_begin\" select=\"RES/@SN\"/>\n      <xsl:with-param name=\"view_end\" select=\"RES/@EN\"/>\n      <xsl:with-param name=\"guess\" select=\"RES/M\"/>\n      <xsl:with-param name=\"navigation_style\" select=\"$nav_style\"/>\n    </xsl:call-template>\n  </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n Output all results\n     ********************************************************************** -->\n<xsl:template name=\"results\">\n  <xsl:param name=\"query\"/>\n  <xsl:param name=\"time\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"$render_dynamic_navigation = '1'\">\n      <xsl:call-template name=\"dynamic_navigation_results\">\n        <xsl:with-param name=\"query\" select=\"$query\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <!-- *** Add top navigation/sort-by bar *** -->\n      <xsl:if test=\"$show_top_navigation != '0' or $show_sort_by != '0'\">\n        <!-- there might be onebox results but no RES  -->\n        <xsl:if test=\"RES or $show_sidebar = '1'\">\n          <div id=\"top-navigation\">\n            <xsl:call-template name=\"gen_top_navigation\" />\n          </div>\n        </xsl:if>\n      </xsl:if>\n\n      <!-- *** Handle OneBox results, if any ***-->\n      <xsl:if test=\"$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0\">\n        <xsl:call-template name=\"onebox\"/>\n      </xsl:if>\n\n      <!-- *** handle spelling suggestions, if any *** -->\n      <xsl:if test=\"$show_spelling != '0'\">\n        <xsl:call-template name=\"spelling\"/>\n      </xsl:if>\n\n      <!-- *** handle synonyms, if any *** -->\n      <xsl:if test=\"$show_synonyms != '0'\">\n        <xsl:call-template name=\"synonyms\"/>\n      </xsl:if>\n\n      <!-- *** output google desktop results (if enabled and any available) *** -->\n      <xsl:if test=\"$egds_show_desktop_results != '0'\">\n          <xsl:call-template name=\"desktop_results\"/>\n      </xsl:if>\n\n      <!-- *** output results details *** -->\n      <xsl:if test=\"$show_res_clusters = '1'\">\n        <xsl:call-template name=\"cluster_results\"/>\n      </xsl:if>\n\n      <!-- main results -->\n      <xsl:call-template name=\"main_results\">\n        <xsl:with-param name=\"query\" select=\"$query\"/>\n      </xsl:call-template>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<xsl:template name=\"dynamic_navigation_results\">\n  <xsl:param name=\"query\"/>\n\n  <!-- show sort-by -->\n  <xsl:if test=\"$show_sort_by != '0' or $show_spelling != '0' or $show_synonyms != '0'\">\n    <xsl:if test=\"RES\"> <!-- there might be onebox results but no RES  -->\n      <table width=\"100%\">\n      <tr>\n        <xsl:if test=\"$show_spelling != '0' or $show_synonyms != '0'\">\n          <td align=\"left\">\n            <xsl:choose>\n              <!-- *** handle spelling suggestions, if any *** -->\n              <xsl:when test=\"$show_spelling != '0'\">\n                <xsl:call-template name=\"spelling\"/>\n              </xsl:when>\n              <!-- *** handle synonyms, if any *** -->\n              <xsl:otherwise>\n                <xsl:call-template name=\"synonyms\"/>\n              </xsl:otherwise>\n            </xsl:choose>\n          </td>\n        </xsl:if>\n\n        <xsl:if test=\"$show_sort_by != '0'\">\n          <td align=\"right\">\n            <xsl:call-template name=\"sort_by\"/>\n          </td>\n        </xsl:if>\n      </tr>\n      </table>\n    </xsl:if>\n  </xsl:if>\n\n  <xsl:if test=\"$show_spelling != '0' and $show_synonyms != '0'\">\n    <xsl:call-template name=\"synonyms\"/>\n  </xsl:if>\n\n  <xsl:variable name=\"dn_tokens\"\n    select=\"tokenize(/GSP/PARAM[@name='dnavs']/@original_value, '\\+')\"/>\n  <xsl:variable name=\"partial_count\" select=\"/GSP/RES/PARM/PC\"/>\n\n  <xsl:variable name=\"div_pos\">\n    <xsl:choose>\n      <xsl:when test=\"$show_sort_by != '0'\">\n        <xsl:text>position: relative;</xsl:text>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:text>position: relative; margin-top: 10px;</xsl:text>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:variable>\n\n  <div id=\"main\" style=\"{$div_pos}\">\n    <div id=\"main_res\">\n      <xsl:call-template name=\"main_results\">\n        <xsl:with-param name=\"query\" select=\"$query\"/>\n        <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n      </xsl:call-template>\n    </div>\n    <div id=\"dyn_nav\">\n      <div class=\"dn-hdr\">\n        <span style=\"padding-left: 6px;\">\n          <b>Navigate</b>\n        </span>\n      </div>\n      <div style=\"height: 100%\">\n        <xsl:apply-templates select=\"/GSP/RES/PARM/PMT\">\n          <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n          <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n        </xsl:apply-templates>\n      </div>\n    </div>\n  </div>\n</xsl:template>\n\n<xsl:template match=\"PMT\">\n  <xsl:param name=\"dn_tokens\"/>\n  <xsl:param name=\"partial_count\"/>\n\n  <xsl:variable name=\"name\"><xsl:value-of select=\"normalize-space(@NM)\"/></xsl:variable>\n  <xsl:variable name=\"pmt_name\"><xsl:call-template\n      name=\"term-escape\"><xsl:with-param name=\"val\" select=\"@NM\"/></xsl:call-template>\n  </xsl:variable>\n  <ul class=\"dn-attr\">\n    <li class=\"dn-attr-h\"><xsl:value-of select=\"@DN\"/></li>\n    <xsl:choose>\n      <xsl:when test=\"@IR = 1\">\n        <xsl:apply-templates select=\"PV\">\n          <xsl:with-param name=\"pmt_name\" select=\"$pmt_name\"/>\n          <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n          <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n        </xsl:apply-templates>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:apply-templates select=\"PV[position() &lt; $dyn_nav_max_rows + 1]\">\n          <xsl:with-param name=\"pmt_name\" select=\"$pmt_name\"/>\n          <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n          <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n        </xsl:apply-templates>\n\n        <xsl:if test=\"count(*[@C != '0']) &gt; $dyn_nav_max_rows\">\n          <label style=\"display: none;\" id=\"pos_{$name}\">1</label>\n          <xsl:call-template name=\"pv_hidden\">\n            <xsl:with-param name=\"pmt_name\" select=\"$pmt_name\"/>\n            <xsl:with-param name=\"name\" select=\"$name\"/>\n            <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n            <xsl:with-param name=\"pos\" select=\"1\"/>\n            <xsl:with-param name=\"start\" select=\"$dyn_nav_max_rows\"/>\n            <xsl:with-param name=\"end\" select=\"$dyn_nav_max_rows + 10\"/>\n            <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n          </xsl:call-template>\n\n          <li>\n            <a id=\"more_{$name}\" class=\"dn-link\" style=\"margin-right: 10px; outline-style: none;\"\n              onclick=\"dnToggle('{$name}', true); return false;\" href=\"javascript:;\">\n              <span class=\"dn-more-img dn-mimg\"></span>\n              <span>More</span>\n            </a>\n            <a id=\"less_{$name}\" class=\"dn-link dn-hidden\" style=\"outline-style: none;\"\n              onclick=\"dnToggle('{$name}', false); return false;\" href=\"javascript:;\">\n              <span class=\"dn-more-img dn-limg\"></span>\n              <span>Less</span>\n            </a>\n          </li>\n        </xsl:if>\n      </xsl:otherwise>\n    </xsl:choose>\n  </ul>\n</xsl:template>\n\n<xsl:template name=\"pv_hidden\">\n  <xsl:param name=\"pmt_name\"/>\n  <xsl:param name=\"name\"/>\n  <xsl:param name=\"dn_tokens\"/>\n  <xsl:param name=\"pos\"/>\n  <xsl:param name=\"start\"/>\n  <xsl:param name=\"end\"/>\n  <xsl:param name=\"partial_count\"/>\n\n  <li id=\"{$name}_{$pos}\" class=\"dn-hidden\">\n    <ul class=\"dn-attr-hidden\">\n      <xsl:apply-templates select=\"PV[position() &gt; $start and position() &lt;= $end]\">\n        <xsl:with-param name=\"pmt_name\" select=\"$pmt_name\"/>\n        <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n        <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n      </xsl:apply-templates>\n    </ul>\n  </li>\n  <xsl:choose>\n    <xsl:when test=\"PV[position() &gt; $end]\">\n      <xsl:call-template name=\"pv_hidden\">\n        <xsl:with-param name=\"pmt_name\" select=\"$pmt_name\"/>\n        <xsl:with-param name=\"name\" select=\"$name\"/>\n        <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n        <xsl:with-param name=\"pos\" select=\"$pos + 1\"/>\n        <xsl:with-param name=\"start\" select=\"$end\"/>\n        <xsl:with-param name=\"end\" select=\"2 * $end\"/>\n        <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <label style=\"display: none;\" id=\"pos_{$name}_max\"><xsl:value-of\n          select=\"$pos\"/></label>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<xsl:template match=\"PV\">\n  <xsl:param name=\"pmt_name\"/>\n  <xsl:param name=\"dn_tokens\"/>\n  <xsl:param name=\"partial_count\"/>\n\n  <xsl:if test=\"@C != 0\">\n    <xsl:apply-templates select=\".\" mode=\"construct\">\n      <xsl:with-param name=\"dn_tokens\" select=\"$dn_tokens\"/>\n      <xsl:with-param name=\"partial_count\" select=\"$partial_count\"/>\n      <xsl:with-param name=\"current_token\">\n        <xsl:choose>\n          <xsl:when test=\"../@IR = '1'\"><xsl:variable\n            name=\"stripped_l\" select=\"normalize-space(@L)\"/><xsl:variable\n            name=\"stripped_h\" select=\"normalize-space(@H)\"/>inmeta:<xsl:value-of\n            select=\"$pmt_name\"/>:<xsl:choose><xsl:when test=\"../@T = 3\"><xsl:if\n            test=\"$stripped_l != ''\">$<xsl:value-of select=\"$stripped_l\"/></xsl:if>..<xsl:if\n            test=\"$stripped_h != ''\">$<xsl:value-of\n            select=\"$stripped_h\"/></xsl:if></xsl:when><xsl:otherwise><xsl:value-of\n            select=\"$stripped_l\"/>..<xsl:value-of select=\"$stripped_h\"/></xsl:otherwise></xsl:choose>\n          </xsl:when>\n          <xsl:otherwise>inmeta:<xsl:value-of select=\"$pmt_name\"/>%3D<xsl:call-template\n              name=\"term-escape\"><xsl:with-param name=\"val\" select=\"@V\"/></xsl:call-template>\n          </xsl:otherwise>\n        </xsl:choose>\n      </xsl:with-param>\n    </xsl:apply-templates>\n  </xsl:if>\n</xsl:template>\n\n<xsl:template match=\"PV\" mode=\"construct\">\n  <xsl:param name=\"dn_tokens\"/>\n  <xsl:param name=\"current_token\"/>\n  <xsl:param name=\"partial_count\"/>\n\n  <xsl:variable name=\"dispval\">\n    <xsl:apply-templates select=\".\" mode=\"display_value\"/>\n  </xsl:variable>\n\n  <xsl:variable name=\"dispcount\">\n    <xsl:text> (</xsl:text><xsl:if\n       test=\"$partial_count=1\"><xsl:text>&gt; </xsl:text></xsl:if>\n      <xsl:value-of select=\"@C\"/><xsl:text>)</xsl:text>\n  </xsl:variable>\n\n  <xsl:variable name=\"is_selected\" select=\"index-of($dn_tokens, $current_token)\"/>\n  <li>\n    <xsl:choose>\n      <xsl:when test=\"exists($is_selected)\">\n        <xsl:variable name=\"other_tokens\">\n          <xsl:value-of select=\"string-join(remove($dn_tokens, $is_selected[position()=1]), '+')\"/>\n        </xsl:variable>\n\n        <xsl:variable name=\"cancel_url\">\n          <xsl:value-of select=\"$dn_search_url\"/>&amp;q=<xsl:value-of\n            select=\"$original_q\"/><xsl:if test=\"$other_tokens != ''\">+<xsl:value-of\n            select=\"$other_tokens\"/>&amp;dnavs=<xsl:value-of select=\"$other_tokens\"/></xsl:if>\n        </xsl:variable>\n\n        <a class=\"dn-img dn-r-img\" href=\"/search?{$cancel_url}\"\n            title=\"Clear\"></a>\n        <span class=\"dn-overflow dn-inline-block\" style=\"width: 86%;\">\n          <xsl:if test=\"../@IR != 1\">\n            <xsl:attribute name=\"title\"><xsl:value-of select=\"$dispval\"\n                disable-output-escaping=\"yes\"/></xsl:attribute>\n          </xsl:if>\n          <xsl:value-of select=\"concat($dispval, $dispcount)\"\n              disable-output-escaping=\"yes\"/>\n        </span>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:variable name=\"pmts_var\">dnavs=<xsl:if test=\"/GSP/PARAM[@name='dnavs']\"><xsl:value-of\n            select=\"/GSP/PARAM[@name='dnavs']/@original_value\"/>+</xsl:if><xsl:value-of\n            select=\"$current_token\"/>\n        </xsl:variable>\n        <xsl:variable name=\"qurl\"><xsl:value-of select=\"$dn_search_url\"/>&amp;q=<xsl:value-of\n            select=\"/GSP/PARAM[@name='q']/@original_value\"/>+<xsl:value-of\n            select=\"$current_token\"/>&amp;<xsl:value-of select=\"$pmts_var\"/>\n        </xsl:variable>\n        <a class=\"dn-attr-v dn-overflow dn-block\" style=\"width: 99%;\"\n            href=\"/search?{$qurl}\">\n          <xsl:if test=\"../@IR != 1\">\n            <xsl:attribute name=\"title\"><xsl:value-of select=\"$dispval\"\n                disable-output-escaping=\"no\"/></xsl:attribute>\n          </xsl:if>\n          <xsl:value-of select=\"$dispval\" disable-output-escaping=\"yes\"/>\n          <span style=\"color: #777;\"><xsl:value-of select=\"$dispcount\"\n              disable-output-escaping=\"yes\"/></span>\n        </a>\n      </xsl:otherwise>\n    </xsl:choose>\n  </li>\n</xsl:template>\n\n<xsl:template match=\"PV\" mode=\"display_value\">\n  <xsl:choose>\n    <xsl:when test=\"../@IR = 1\">\n      <xsl:variable name=\"disp_l\">\n        <xsl:call-template name=\"pmt_range_display_val\">\n          <xsl:with-param name=\"val\" select=\"@L\"/>\n          <xsl:with-param name=\"type\" select=\"../@T\"/>\n        </xsl:call-template>\n      </xsl:variable>\n      <xsl:variable name=\"disp_h\">\n        <xsl:call-template name=\"pmt_range_display_val\">\n          <xsl:with-param name=\"val\" select=\"@H\"/>\n          <xsl:with-param name=\"type\" select=\"../@T\"/>\n        </xsl:call-template>\n      </xsl:variable>\n      <xsl:choose>\n        <xsl:when test=\"$disp_l = ''\">\n          <xsl:value-of select=\"$disp_h\"/><xsl:text> </xsl:text>\n          <xsl:choose>\n            <xsl:when test=\"../@T = 4\">or earlier</xsl:when>\n            <xsl:otherwise>or less</xsl:otherwise>\n          </xsl:choose>\n        </xsl:when>\n        <xsl:when test=\"$disp_h = ''\">\n          <xsl:value-of select=\"$disp_l\"/><xsl:text> </xsl:text>\n          <xsl:choose>\n            <xsl:when test=\"../@T = 4\">or later</xsl:when>\n            <xsl:otherwise>or more</xsl:otherwise>\n          </xsl:choose>\n        </xsl:when>\n        <xsl:otherwise><xsl:value-of\n          select=\"$disp_l\"/><xsl:text> </xsl:text><xsl:call-template\n          name=\"endash\"/><xsl:text> </xsl:text><xsl:value-of select=\"$disp_h\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"@V\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<xsl:variable name=\"hex\">0123456789ABCDEF</xsl:variable>\n<xsl:template name=\"term-escape\">\n  <xsl:param name=\"val\"/>\n  <xsl:variable name=\"first-char\" select=\"substring($val, 1, 1)\"/>\n  <xsl:variable name=\"code\"\n    select=\"string-to-codepoints($first-char)[position()=1]\"/>\n  <xsl:choose>\n    <xsl:when test=\"not(($code >= 48 and $code &lt;= 57) or\n      ($code >= 65 and $code &lt;= 90) or ($code = 95) or\n      ($code >= 97 and $code &lt;= 122))\">\n      <xsl:variable name=\"hex-digit1\"\n        select=\"substring($hex, floor($code div 16) + 1, 1)\"/>\n      <xsl:variable name=\"hex-digit2\"\n        select=\"substring($hex, $code mod 16 + 1, 1)\"/>\n      <xsl:choose>\n        <xsl:when test=\"$code > 128\">\n          <xsl:value-of select=\"encode-for-uri($first-char)\"/>\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:value-of select=\"concat('%25', $hex-digit1 ,$hex-digit2)\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"$first-char\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n  <xsl:if test=\"string-length($val) > 1\">\n    <xsl:call-template name=\"term-escape\">\n      <xsl:with-param name=\"val\" select=\"substring($val, 2)\"/>\n    </xsl:call-template>\n  </xsl:if>\n</xsl:template>\n\n<xsl:template name=\"pmt_range_display_val\">\n  <xsl:param name=\"val\"/>\n  <xsl:param name=\"type\"/>\n  <xsl:choose>\n    <xsl:when test=\"$val != '' and ($type = 2 or $type = 3)\">\n      <xsl:value-of select=\"format-number($val, '#.##')\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"$val\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<xsl:template name=\"main_results\">\n  <xsl:param name=\"query\"/>\n  <xsl:param name=\"dn_tokens\"/>\n\n  <xsl:if test=\"$render_dynamic_navigation = '1'\">\n    <div class=\"dn-bar\">\n      <xsl:variable name=\"all_results_url\"><xsl:value-of\n          select=\"$dn_search_url\"/>&amp;q=<xsl:value-of select=\"$original_q\"/>\n      </xsl:variable>\n\n      <!-- Add next/prev navigation -->\n      <xsl:if test=\"$show_top_navigation != '0' and /GSP/RES\">\n        <span class=\"dn-bar-rt\">\n          <xsl:call-template name=\"google_navigation\">\n            <xsl:with-param name=\"prev\" select=\"/GSP/RES/NB/PU\"/>\n            <xsl:with-param name=\"next\" select=\"/GSP/RES/NB/NU\"/>\n            <xsl:with-param name=\"view_begin\" select=\"/GSP/RES/@SN\"/>\n            <xsl:with-param name=\"view_end\" select=\"/GSP/RES/@EN\"/>\n            <xsl:with-param name=\"guess\" select=\"/GSP/RES/M\"/>\n            <xsl:with-param name=\"navigation_style\" select=\"'top'\"/>\n            <xsl:with-param name=\"dynamic_nav_bar\" select=\"'1'\"/>\n          </xsl:call-template>\n        </span>\n      </xsl:if>\n\n      <a class=\"dn-link\" style=\"text-decoration: underline; color: #000;\"\n        href=\"/search?{$all_results_url}\">All results</a>\n\n      <xsl:if test=\"exists($dn_tokens)\">\n        <xsl:call-template name=\"rsaquo\"/>\n        <xsl:variable name=\"root_node\" select=\"/GSP\"/>\n        <xsl:for-each select=\"$dn_tokens\">\n          <xsl:variable name=\"other_pmts_tokens\"\n            select=\"string-join(remove($dn_tokens, position()), '+')\"/>\n\n          <xsl:variable name=\"cancel_url\">\n            <xsl:value-of select=\"$all_results_url\"/>\n            <xsl:if test=\"$other_pmts_tokens != ''\">+<xsl:value-of\n                select=\"$other_pmts_tokens\"/>&amp;dnavs=<xsl:value-of select=\"$other_pmts_tokens\"/>\n            </xsl:if>\n          </xsl:variable>\n\n          <a class=\"dn-link cancel-url dn-bar-link\" href=\"/search?{$cancel_url}\"\n              title=\"Clear\">\n            <xsl:variable name=\"range_val\" select=\"substring-after(., ':')\"/>\n            <xsl:choose>\n              <xsl:when test=\"contains(., '..')\">\n                <xsl:for-each select=\"$root_node/RES/PARM/PMT\">\n                  <xsl:variable name=\"escaped_name\"><xsl:call-template name=\"term-escape\">\n                    <xsl:with-param name=\"val\" select=\"@NM\"/>\n                  </xsl:call-template></xsl:variable>\n                  <xsl:if test=\"$escaped_name=substring-before($range_val, ':')\">\n                    <span class=\"dn-bar-v\"><xsl:value-of select=\"@DN\"/>:</span><xsl:call-template\n                      name=\"nbsp\"/><xsl:choose>\n                      <xsl:when test=\"@T = '3'\">\n                        <xsl:for-each select=\"PV\">\n                          <xsl:variable name=\"check_val\"><xsl:if\n                            test=\"normalize-space(@L) != ''\">$<xsl:value-of\n                            select=\"normalize-space(@L)\"/></xsl:if>..<xsl:if\n                            test=\"normalize-space(@H) != ''\">$<xsl:value-of\n                              select=\"normalize-space(@H)\"/></xsl:if>\n                          </xsl:variable>\n                          <xsl:if test=\"$check_val=substring-after($range_val, ':')\">\n                            <xsl:apply-templates select=\"current()\" mode=\"display_value\"/>\n                          </xsl:if>\n                        </xsl:for-each>\n                      </xsl:when>\n                      <xsl:otherwise>\n                        <xsl:apply-templates select=\"PV[concat(normalize-space(@L), '..',\n                          normalize-space(@H))=substring-after($range_val, ':')]\" mode=\"display_value\"/>\n                      </xsl:otherwise>\n                    </xsl:choose>\n                  </xsl:if>\n                </xsl:for-each>\n              </xsl:when>\n              <xsl:otherwise>\n                <xsl:for-each select=\"$root_node/RES/PARM/PMT\">\n                  <xsl:variable name=\"escaped_name\"><xsl:call-template name=\"term-escape\">\n                    <xsl:with-param name=\"val\" select=\"@NM\"/>\n                  </xsl:call-template></xsl:variable>\n                  <xsl:if test=\"$escaped_name=substring-before($range_val, '%3D')\">\n                    <span class=\"dn-bar-v\"><xsl:value-of select=\"./@DN\"/>:</span><xsl:call-template\n                      name=\"nbsp\"/><xsl:for-each select=\"./PV\"><xsl:variable\n                        name=\"pv_val\"><xsl:call-template name=\"term-escape\">\n                          <xsl:with-param name=\"val\" select=\"./@V\"/>\n                        </xsl:call-template></xsl:variable>\n                        <xsl:if test=\"$pv_val=substring-after($range_val, '%3D')\">\n                          <xsl:apply-templates select=\".\" mode=\"display_value\"/>\n                        </xsl:if>\n                    </xsl:for-each>\n                  </xsl:if>\n                </xsl:for-each>\n              </xsl:otherwise>\n            </xsl:choose>\n          </a>\n\n          <xsl:if test=\"position() != last()\">\n            <xsl:call-template name=\"rsaquo\"/>\n          </xsl:if>\n        </xsl:for-each>\n      </xsl:if>\n    </div>\n\n    <!-- *** Handle OneBox results, if any ***-->\n    <xsl:if test=\"$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0\">\n      <xsl:call-template name=\"onebox\"/>\n    </xsl:if>\n\n    <!-- *** output google desktop results (if enabled and any available) *** -->\n    <xsl:if test=\"$egds_show_desktop_results != '0'\">\n      <xsl:call-template name=\"desktop_results\"/>\n    </xsl:if>\n  </xsl:if>\n\n  <xsl:choose>\n    <xsl:when test=\"$show_sidebar = '1'\">\n      <table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n        <tr>\n          <!-- Display organic results on the left side. -->\n          <td id=\"left-side-container\" width=\"55%\" valign=\"top\">\n            <xsl:call-template name=\"render_main_results\">\n              <xsl:with-param name=\"query\" select=\"$query\"/>\n            </xsl:call-template>\n          </td>\n\n          <!-- Display sidebar containing the enabled sidebar elements. -->\n          <td id=\"sidebar-container\" class=\"sb-r\" valign=\"top\">\n            <div id=\"sidebar\">\n              <!-- People Search sidebar element. -->\n              <xsl:if test=\"$show_people_search = '1'\">\n              <div id=\"ps-results-container\">\n                <div id=\"loading-ps-results\" class=\"sb-r-ld-msg-c\" style=\"display: none;\">\n                  <span class=\"sb-r-lbl\">Loading People search results...</span>\n                </div>\n                <div id=\"ps-results-msg\" class=\"sb-r-lbl\" style=\"display: none;\" >People</div>\n                <div id=\"ps-results-section\" class=\"sb-r-res\" style=\"display:none;\">\n                </div>\n              </div>\n              </xsl:if>\n\n              <!-- Google Apps results sidebar element. -->\n              <xsl:if test=\"$show_apps_segmented_ui = '1'\">\n              <div id=\"apps-results-container\">\n                <div id=\"loading-app-results\" class=\"sb-r-ld-msg-c\" style=\"display: none;\">\n                  <span class=\"sb-r-lbl\">Loading Google Apps results...</span>\n                </div>\n                <div style=\"display: none;\" id=\"apps-results-msg\" class=\"sb-r-lbl\"></div>\n                <div id=\"apps-results-section\" class=\"sb-r-res\" style=\"display: none;\">\n                </div>\n                <iframe scrolling=\"no\" id=\"apps-results-iframe\" frameborder=\"0\"\n                    style=\"display: none;\">\n                </iframe>\n              </div>\n              </xsl:if>\n\n              <!-- Google Site Search sidebar element. -->\n              <xsl:if test=\"$show_gss_results = '1'\">\n              <div id=\"gss-results-container\">\n                <div id=\"loading-gss-results\" class=\"sb-r-ld-msg-c\" style=\"display: none;\">\n                  <span class=\"sb-r-lbl\">Loading Google Site Search results...</span>\n                </div>\n                <div id=\"gss-results-msg\" class=\"sb-r-lbl\" style=\"display: none;\" >Google Site Search</div>\n                <div id=\"gss-results-section\" class=\"sb-r-res\" style=\"display:none\">\n                </div>\n                <input style=\"display:none\" id=\"gss-hidden-input\" />\n              </div>\n              </xsl:if>\n\n              <!-- Twitter sidebar element. -->\n              <xsl:if test=\"$show_twitter_results = '1'\">\n              <div id=\"twitter-results-container\">\n                <div id=\"loading-twitter-results\" class=\"sb-r-ld-msg-c\" style=\"display: none;\">\n                  <span class=\"sb-r-lbl\">Loading Twitter results...</span>\n                </div>\n                <div id=\"twitter-results-msg\" class=\"sb-r-lbl\" style=\"display: none;\" >Twitter</div>\n                <div id=\"twitter-results-section\" class=\"sb-r-res\" style=\"display:none\">\n                </div>\n              </div>\n              </xsl:if>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:call-template name=\"render_main_results\">\n        <xsl:with-param name=\"query\" select=\"$query\"/>\n      </xsl:call-template>\n    </xsl:otherwise>\n  </xsl:choose>\n\n  <!-- *** Filter note (if needed) *** -->\n  <xsl:if test=\"(RES/FI) and (not(RES/NB/NU))\">\n    <p>\n      <i>\n      In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select=\"RES/@EN\"/> already displayed.<br/>If you like, you can <a href=\"{$filter_url}0\">repeat the search with the omitted results included</a>.\n      </i>\n    </p>\n  </xsl:if>\n\n  <!-- *** Add bottom navigation *** -->\n  <div id=\"bottom-navigation\">\n    <xsl:call-template name=\"gen_bottom_navigation\" />\n  </div>\n\n  <!-- *** Bottom search box *** -->\n  <div id=\"bottom-search-box\">\n    <xsl:if test=\"$show_bottom_search_box != '0' and RES\">\n      <xsl:call-template name=\"bottom_search_box\"/>\n    </xsl:if>\n  </div>\n\n  <!-- *** Load the JSAPI library if displaying GSS results is enabled. -->\n  <xsl:if test=\"$show_gss_results = '1'\">\n    <script src=\"https://www.google.com/jsapi\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\">\n      var GSS_JS_API_LOADED = false;\n      /**\n       * If you want to use a different Site Search theme you can specify the\n       * same through {style: THEME_CONSTANT} property passed as the third\n       * parameter to google.load call below. For example:\n       * google.load('search', '1', {style: google.loader.themes.ESPRESSO})\n       * You can refer API documentation here:\n       * http://code.google.com/apis/ajaxsearch/documentation/customsearch/#_themes\n       * Optionally, you can override the default stylesheet via custom CSS or\n       * customize existing themes via \"Look and Feel\" option in the control\n       * panel.\n       */\n      google.load('search', '1');\n      google.setOnLoadCallback(function(){GSS_JS_API_LOADED = true;});\n    </script>\n  </xsl:if>\n\n  <!-- *** Load the Twitter JS library, if enabled *** -->\n  <xsl:if test=\"$show_twitter_results = '1'\">\n    <script src=\"twitter.js\" type=\"text/javascript\"></script>\n  </xsl:if>\n</xsl:template>\n\n<xsl:template name=\"render_main_results\">\n  <xsl:param name=\"query\"/>\n  <xsl:variable name=\"main_results_class\">\n    <xsl:if test=\"$render_dynamic_navigation = '1'\">main-results</xsl:if>\n  </xsl:variable>\n\n  <div class=\"{$main_results_class}\">\n    <!-- for keymatch results -->\n    <xsl:if test=\"$show_keymatch != '0'\">\n      <xsl:apply-templates select=\"/GSP/GM\"/>\n    </xsl:if>\n\n    <xsl:apply-templates select=\"RES/R\">\n      <xsl:with-param name=\"query\" select=\"$query\"/>\n    </xsl:apply-templates>\n  </div>\n</xsl:template>\n\n<!-- **********************************************************************\n Stopwords suggestions in result page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"stopwords\">\n  <xsl:variable name=\"stopwords_suggestions1\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\" select=\"'/help/basics.html#stopwords'\"/>\n      <xsl:with-param name=\"replace\" select=\"'user_help.html#stop'\"/>\n      <xsl:with-param name=\"string\" select=\"/GSP/CT\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:variable name=\"stopwords_suggestions\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\" select=\"'/help/basics.html'\"/>\n      <xsl:with-param name=\"replace\" select=\"'user_help.html'\"/>\n      <xsl:with-param name=\"string\" select=\"$stopwords_suggestions1\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:if test=\"/GSP/CT\">\n    <font size=\"-1\" color=\"gray\">\n      <xsl:value-of disable-output-escaping=\"yes\"\n        select=\"$stopwords_suggestions\"/>\n    </font>\n  </xsl:if>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Spelling suggestions in result page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"spelling\">\n  <xsl:if test=\"/GSP/Spelling/Suggestion\">\n    <p><span class=\"p\"><font color=\"{$spelling_text_color}\">\n         <xsl:value-of select=\"$spelling_text\"/>\n         <xsl:call-template name=\"nbsp\"/>\n       </font></span>\n    <xsl:variable name=\"apps_param\">\n      <xsl:choose>\n        <xsl:when test=\"/GSP/PARAM[@name='exclude_apps']\">\n          <xsl:text disable-output-escaping='yes'>&amp;exclude_apps=</xsl:text>\n          <xsl:value-of select=\"/GSP/PARAM[@name='exclude_apps']/@original_value\" />\n        </xsl:when>\n        <xsl:when test=\"/GSP/PARAM[@name='only_apps']\">\n          <xsl:text disable-output-escaping='yes'>&amp;only_apps=</xsl:text>\n          <xsl:value-of select=\"/GSP/PARAM[@name='only_apps']/@original_value\" />\n        </xsl:when>\n      </xsl:choose>\n    </xsl:variable>\n    <a ctype=\"spell\"\n       href=\"search?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$base_url}{$apps_param}\">\n      <xsl:value-of disable-output-escaping=\"yes\" select=\"/GSP/Spelling/Suggestion[1]\"/>\n    </a>\n    </p>\n  </xsl:if>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Synonym suggestions in result page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"synonyms\">\n  <xsl:if test=\"/GSP/Synonyms/OneSynonym\">\n    <p><span class=\"p\"><font color=\"{$synonyms_text_color}\">\n         <xsl:value-of select=\"$synonyms_text\"/>\n         <xsl:call-template name=\"nbsp\"/>\n       </font></span>\n    <xsl:for-each select=\"/GSP/Synonyms/OneSynonym\">\n      <a ctype=\"synonym\" href=\"search?q={@q}&amp;{$synonym_url}\">\n        <xsl:value-of disable-output-escaping=\"yes\" select=\".\"/>\n      </a><xsl:text> </xsl:text>\n    </xsl:for-each>\n    </p>\n  </xsl:if>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Truncation functions (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"truncate_url\">\n  <xsl:param name=\"t_url\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"string-length($t_url) &lt; $truncate_result_url_length\">\n      <xsl:value-of select=\"$t_url\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:variable name=\"first\" select=\"substring-before($t_url, '/')\"/>\n      <xsl:variable name=\"last\">\n              <xsl:call-template name=\"truncate_find_last_token\">\n                <xsl:with-param name=\"t_url\" select=\"$t_url\"/>\n              </xsl:call-template>\n      </xsl:variable>\n      <xsl:variable name=\"path_limit\" select=\"$truncate_result_url_length - (string-length($first) + string-length($last) + 1)\"/>\n\n      <xsl:choose>\n              <xsl:when test=\"$path_limit &lt;= 0\">\n                <xsl:value-of select=\"concat(substring($t_url, 1, $truncate_result_url_length), '...')\"/>\n              </xsl:when>\n              <xsl:otherwise>\n                <xsl:variable name=\"chopped_path\">\n                  <xsl:call-template name=\"truncate_chop_path\">\n                    <xsl:with-param name=\"path\" select=\"substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))\"/>\n                    <xsl:with-param name=\"path_limit\" select=\"$path_limit\"/>\n                  </xsl:call-template>\n                </xsl:variable>\n                <xsl:value-of select=\"concat($first, '/.../', $chopped_path, $last)\"/>\n              </xsl:otherwise>\n      </xsl:choose>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</xsl:template>\n\n<xsl:template name=\"truncate_find_last_token\">\n  <xsl:param name=\"t_url\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"contains($t_url, '/')\">\n      <xsl:call-template name=\"truncate_find_last_token\">\n            <xsl:with-param name=\"t_url\" select=\"substring-after($t_url, '/')\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n            <xsl:value-of select=\"$t_url\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</xsl:template>\n\n<xsl:template name=\"truncate_chop_path\">\n  <xsl:param name=\"path\"/>\n  <xsl:param name=\"path_limit\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"string-length($path) &lt;= $path_limit\">\n      <xsl:value-of select=\"$path\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:call-template name=\"truncate_chop_path\">\n        <xsl:with-param name=\"path\" select=\"substring-after($path, '/')\"/>\n        <xsl:with-param name=\"path_limit\" select=\"$path_limit\"/>\n      </xsl:call-template>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</xsl:template>\n\n\n<!-- **********************************************************************\n  Google Apps (do not customize)\n     ********************************************************************** -->\n<xsl:variable\n  name=\"sites_icon\"\n  select=\"'https://www.google.com/sites/images/sites_favicon.ico'\"/>\n<xsl:variable\n  name=\"docs_icon\"\n  select=\"'https://docs.google.com/images/doclist/icon_doc.gif'\"/>\n<xsl:variable\n  name=\"spreadsheets_icon\"\n  select=\"'https://docs.google.com/images/doclist/icon_spread.gif'\"/>\n<xsl:variable\n  name=\"presentations_icon\"\n  select=\"'https://docs.google.com/images/doclist/icon_pres.gif'\"/>\n<xsl:variable\n  name=\"pdf_icon\"\n  select=\"'https://docs.google.com/images/doclist/icon_6_pdf.gif'\"/>\n<xsl:variable\n  name=\"drawing_icon\"\n  select=\"'https://docs.google.com/images/doclist/icon_6_drawing.png'\"/>\n<xsl:variable\n  name=\"email_icon\"\n  select=\"'https://mail.google.com/mail/images/favicon.ico'\"/>\n\n<!-- **********************************************************************\n  A single result (do not customize)\n     ********************************************************************** -->\n<xsl:template match=\"R\">\n  <xsl:param name=\"query\"/>\n\n  <xsl:variable name=\"protocol\"     select=\"substring-before(U, '://')\"/>\n  <xsl:variable name=\"temp_url\"     select=\"substring-after(U, '://')\"/>\n  <xsl:variable name=\"display_url1\" select=\"substring-after(UD, '://')\"/>\n  <xsl:variable name=\"escaped_url\"  select=\"substring-after(UE, '://')\"/>\n\n  <xsl:variable name=\"display_url2\">\n    <xsl:choose>\n      <xsl:when test=\"$display_url1\">\n        <xsl:value-of select=\"$display_url1\"/>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select=\"$temp_url\"/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:variable>\n\n  <xsl:variable name=\"display_url\">\n    <xsl:choose>\n      <xsl:when test=\"$protocol='unc'\">\n        <xsl:call-template name=\"convert_unc\">\n          <xsl:with-param name=\"string\" select=\"$display_url2\"/>\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select=\"$display_url2\"/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:variable>\n\n  <xsl:variable name=\"stripped_url\">\n    <xsl:choose>\n      <xsl:when test=\"$truncate_result_urls != '0'\">\n                <xsl:call-template name=\"truncate_url\">\n                  <xsl:with-param name=\"t_url\" select=\"$display_url\"/>\n                </xsl:call-template>\n      </xsl:when>\n      <xsl:otherwise>\n            <xsl:value-of select=\"$display_url\"/>\n          </xsl:otherwise>\n        </xsl:choose>\n  </xsl:variable>\n\n  <xsl:variable name=\"crowded_url\" select=\"HN/@U\"/>\n  <xsl:variable name=\"crowded_display_url1\" select=\"HN\"/>\n  <xsl:variable name=\"crowded_display_url\">\n    <xsl:choose>\n      <xsl:when test=\"$protocol='unc'\">\n        <xsl:call-template name=\"convert_unc\">\n          <xsl:with-param name=\"string\" select=\"substring-after($crowded_display_url1,'://')\"/>\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select=\"$crowded_display_url1\"/>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:variable>\n\n  <xsl:variable name=\"lower\" select=\"'abcdefghijklmnopqrstuvwxyz'\"/>\n  <xsl:variable name=\"upper\" select=\"'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\"/>\n\n  <xsl:variable name=\"url_indexed\" select=\"not(starts-with($temp_url, 'noindex!/'))\"/>\n\n  <!-- *** Indent as required (only supports 2 levels) *** -->\n  <xsl:if test=\"@L='2'\">\n    <xsl:text disable-output-escaping=\"yes\">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>\n  </xsl:if>\n\n  <!-- *** Result Header *** -->\n  <p class=\"g\">\n\n  <xsl:variable name=\"apps_domain\">\n    <xsl:if test=\"starts-with($stripped_url, 'sites.google.com/a/') or\n                  starts-with($stripped_url, 'docs.google.com/a/') or\n                  starts-with($stripped_url, 'spreadsheets.google.com/a/')\">\n      <xsl:value-of\n        select=\"substring-before(substring-after($stripped_url, '/a/'), '/')\"/>\n    </xsl:if>\n  </xsl:variable>\n\n  <!-- *** Google Sites icon *** -->\n  <xsl:if test=\"starts-with($stripped_url, 'sites.google.com/')\">\n    <img src=\"{$sites_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** Google Docs icon *** -->\n  <xsl:if test=\"starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?')) or\n                RF[@NAME='type']/@VALUE='document'\">\n    <img src=\"{$docs_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** Google Spreadsheets icon *** -->\n  <xsl:if test=\"starts-with($stripped_url, 'spreadsheets.google.com/') or\n                 RF[@NAME='type']/@VALUE='spreadsheet'\">\n    <img src=\"{$spreadsheets_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** Google Presentations icon *** -->\n  <!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->\n  <xsl:if test=\"starts-with($stripped_url,\n                            concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?')) or\n                starts-with($stripped_url,\n                            concat('docs.google.com/a/', $apps_domain, '/PresentationView?')) or\n                RF[@NAME='type']/@VALUE='presentation'\">\n    <img src=\"{$presentations_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** Google PDF viewer icon *** -->\n  <xsl:if test=\"RF[@NAME='type']/@VALUE='pdf'\">\n    <img src=\"{$pdf_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** Google Drawing icon *** -->\n  <xsl:if test=\"RF[@NAME='type']/@VALUE='drawing'\">\n    <img src=\"{$drawing_icon}\" alt=\"\" height=\"16\" width=\"16\"/><xsl:call-template name=\"nbsp\"/>\n  </xsl:if>\n\n  <!-- *** GMail icon *** -->\n  <xsl:if test=\"starts-with($stripped_url, 'mail.google.com') or\n                RF[@NAME='type']/@VALUE='mail'\">\n    <img src=\"{$email_icon}\" alt=\"\" height=\"16\" width=\"16\"/>&#xA0;\n  </xsl:if>\n\n  <!-- *** Result Title (including PDF tag and hyperlink) *** -->\n  <xsl:if test=\"$show_res_title != '0'\">\n    <font size=\"-2\"><b>\n    <xsl:choose>\n      <xsl:when test=\"@MIME='text/html' or @MIME='' or not(@MIME)\"></xsl:when>\n      <xsl:when test=\"@MIME='text/plain'\">[TEXT]</xsl:when>\n      <xsl:when test=\"@MIME='application/rtf'\">[RTF]</xsl:when>\n      <xsl:when test=\"@MIME='application/pdf'\">[PDF]</xsl:when>\n      <xsl:when test=\"@MIME='application/postscript'\">[PS]</xsl:when>\n      <xsl:when test=\"@MIME='application/vnd.ms-powerpoint'\">[MS POWERPOINT]</xsl:when>\n      <xsl:when test=\"@MIME='application/vnd.ms-excel'\">[MS EXCEL]</xsl:when>\n      <xsl:when test=\"@MIME='application/msword'\">[MS WORD]</xsl:when>\n      <xsl:otherwise>\n        <xsl:variable name=\"extension\">\n          <xsl:call-template name=\"last_substring_after\">\n            <xsl:with-param name=\"string\" select=\"substring-after(\n                                                  $temp_url,\n                                                  '/')\"/>\n            <xsl:with-param name=\"separator\" select=\"'.'\"/>\n            <xsl:with-param name=\"fallback\" select=\"'UNKNOWN'\"/>\n          </xsl:call-template>\n        </xsl:variable>\n        [<xsl:value-of select=\"translate($extension,$lower,$upper)\"/>]\n      </xsl:otherwise>\n    </xsl:choose>\n    </b></font>\n    <xsl:text> </xsl:text>\n\n    <xsl:variable name=\"link\"\n     select=\"$url_indexed and not(starts-with(U, $googleconnector_protocol))\"/>\n\n    <xsl:if test=\"$link\">\n\n      <xsl:text disable-output-escaping='yes'>&lt;a \n            ctype=\"c\"\n      </xsl:text>\n            rank=&quot;<xsl:value-of select=\"position()\"/>&quot;\n      <xsl:text disable-output-escaping='yes'>\n            href=\"</xsl:text>\n\n      <xsl:choose>\n        <xsl:when test=\"starts-with(U, $dbconnector_protocol)\">\n          <xsl:variable name=\"cache_encoding\">\n            <xsl:choose>\n              <xsl:when test=\"'' != HAS/C/@ENC\"><xsl:value-of select=\"HAS/C/@ENC\"/></xsl:when>\n              <xsl:otherwise>UTF-8</xsl:otherwise>\n            </xsl:choose>\n            </xsl:variable>search?q=cache:<xsl:value-of select=\"HAS/C/@CID\"/>:<xsl:value-of select=\"$stripped_url\"/>+<xsl:value-of select=\"$stripped_search_query\"/>&amp;<xsl:value-of select=\"$base_url\"/>&amp;oe=<xsl:value-of select=\"$cache_encoding\"/>\n        </xsl:when>\n\n        <xsl:when test=\"starts-with(U, $db_url_protocol)\">\n          <xsl:value-of disable-output-escaping='yes'\n                        select=\"concat('db/', $temp_url)\"/>\n        </xsl:when>\n        <!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->\n        <xsl:when test=\"$protocol='nfs' or $protocol='smb'\">\n          <xsl:value-of disable-output-escaping='yes'\n                        select=\"concat($protocol,'/',$temp_url)\"/>\n        </xsl:when>\n        <xsl:when test=\"$protocol='unc'\">\n          <xsl:value-of disable-output-escaping='yes' select=\"concat('file://', $display_url2)\"/>\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:value-of disable-output-escaping='yes' select=\"U\"/>\n        </xsl:otherwise>\n      </xsl:choose>\n      <xsl:text disable-output-escaping='yes'>\"&gt;</xsl:text>\n    </xsl:if>\n    <span class=\"l\">\n    <xsl:choose>\n      <xsl:when test=\"T\">\n        <xsl:call-template name=\"reformat_keyword\">\n          <xsl:with-param name=\"orig_string\" select=\"T\"/>\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:otherwise><xsl:value-of select=\"$stripped_url\"/></xsl:otherwise>\n    </xsl:choose>\n    </span>\n    <xsl:if test=\"$link\">\n        <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>\n    </xsl:if>\n  </xsl:if>\n\n\n  <!-- *** Snippet Box *** -->\n  <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n    <tr>\n      <td class=\"s\">\n        <xsl:if test=\"$show_res_snippet != '0' and string-length(S) and\n                      $only_apps != '1'\">\n          <xsl:call-template name=\"reformat_keyword\">\n            <xsl:with-param name=\"orig_string\" select=\"S\"/>\n          </xsl:call-template>\n        </xsl:if>\n\n        <!-- *** Meta tags *** -->\n        <xsl:if test=\"$show_meta_tags != '0' and $only_apps != '1'\">\n          <xsl:apply-templates select=\"MT\"/>\n        </xsl:if>\n\n        <xsl:if test=\"$only_apps != '1' and\n                      ($show_res_snippet != '0' and string-length(S)) or\n                      ($show_meta_tags != '0' and MT[(@N != '') or (@V != '')])\">\n        <br/>\n        </xsl:if>\n\n        <!-- *** URL *** -->\n        <xsl:if test=\"$only_apps != '1' or\n                      ($only_apps = '1' and $show_apps_segmented_ui != '1')\">\n        <font color=\"{$res_url_color}\" size=\"{$res_url_size}\">\n          <xsl:choose>\n            <xsl:when test=\"not($url_indexed)\">\n              <xsl:if test=\"($show_res_size!='0') or\n                            ($show_res_date!='0') or\n                            ($show_res_cache!='0')\">\n                <xsl:text>Not Indexed:</xsl:text>\n                <xsl:value-of select=\"$stripped_url\"/>\n              </xsl:if>\n            </xsl:when>\n            <xsl:otherwise>\n              <xsl:if test=\"$show_res_url != '0'\">\n                <xsl:value-of select=\"$stripped_url\"/>\n              </xsl:if>\n            </xsl:otherwise>\n          </xsl:choose>\n        </font>\n        </xsl:if>\n\n        <!-- *** Miscellaneous (- size - date - cache) *** -->\n        <xsl:if test=\"$url_indexed\">\n          <xsl:apply-templates select=\"HAS/C\">\n                        <xsl:with-param name=\"stripped_url\" select=\"$stripped_url\"/>\n                        <xsl:with-param name=\"escaped_url\" select=\"$escaped_url\"/>\n                        <xsl:with-param name=\"query\" select=\"$query\"/>\n                        <xsl:with-param name=\"mime\" select=\"@MIME\"/>\n                        <xsl:with-param name=\"date\" select=\"FS[@NAME='date']/@VALUE\"/>\n          </xsl:apply-templates>\n        </xsl:if>\n\n        <!-- *** Link to more links from this site *** -->\n        <xsl:if test=\"HN\">\n          <br/>\n          [\n          <a ctype=\"sitesearch\" class=\"f\" href=\"search?as_sitesearch={$crowded_url}&amp;{\n            $search_url}\">More results from <xsl:value-of select=\"$crowded_display_url\"/></a>\n          ]\n\n        <!-- *** Link to aggregated results from database source *** -->\n        <xsl:if test=\"starts-with($crowded_url, $db_url_protocol)\">\n        [\n        <a ctype=\"db\" class=\"f\" href=\"dbaggr?sitesearch={$crowded_url}&amp;{\n          $search_url}&amp;filter=0\">View all data</a>\n            ]\n          </xsl:if>\n        </xsl:if>\n\n\n        <!-- *** Result Footer *** -->\n      </td>\n    </tr>\n  </table>\n  </p>\n\n  <!-- *** End indenting as required (only supports 2 levels) *** -->\n  <xsl:if test=\"@L='2'\">\n    <xsl:text disable-output-escaping=\"yes\">&lt;/blockquote&gt;</xsl:text>\n  </xsl:if>\n\n</xsl:template>\n\n<!-- **********************************************************************\n  Meta tag values within a result (do not customize)\n     ********************************************************************** -->\n<xsl:template match=\"MT\">\n  <br/>\n  <span class=\"f\"><xsl:value-of select=\"@N\"/>: </span><xsl:value-of select=\"@V\"/>\n</xsl:template>\n\n<!-- **********************************************************************\n  A single keymatch result (do not customize)\n     ********************************************************************** -->\n<xsl:template match=\"GM\">\n  <p>\n    <table cellpadding=\"4\" cellspacing=\"0\" border=\"0\" height=\"40\" width=\"100%\">\n      <tr>\n        <td nowrap=\"0\" bgcolor=\"{$keymatch_bg_color}\" height=\"40\">\n          <a ctype=\"keymatch\" href=\"{GL}\">\n            <xsl:value-of select=\"GD\"/>\n          </a>\n          <br/>\n          <font size=\"-1\" color=\"{$res_url_color}\">\n            <span class=\"a\">\n               <xsl:value-of select=\"GL\"/>\n            </span>\n          </font>\n        </td>\n        <td bgcolor=\"{$keymatch_bg_color}\" height=\"40\"\n          align=\"right\" valign=\"top\">\n          <b>\n          <font size=\"-1\" color=\"{$keymatch_text_color}\">\n            <xsl:value-of select=\"$keymatch_text\"/>\n          </font>\n          </b>\n        </td>\n      </tr>\n    </table>\n  </p>\n</xsl:template>\n\n\n<!-- **********************************************************************\n  Variables for reformatting keyword-match display (do not customize)\n     ********************************************************************** -->\n<xsl:variable name=\"keyword_orig_start\" select=\"'&lt;b&gt;'\"/>\n<xsl:variable name=\"keyword_orig_end\" select=\"'&lt;/b&gt;'\"/>\n\n<xsl:variable name=\"keyword_reformat_start\">\n  <xsl:if test=\"$res_keyword_format\">\n    <xsl:text>&lt;</xsl:text>\n    <xsl:value-of select=\"$res_keyword_format\"/>\n    <xsl:text>&gt;</xsl:text>\n  </xsl:if>\n  <xsl:if test=\"($res_keyword_size) or ($res_keyword_color)\">\n  <xsl:text>&lt;font</xsl:text>\n  <xsl:if test=\"$res_keyword_size\">\n    <xsl:text> size=\"</xsl:text>\n    <xsl:value-of select=\"$res_keyword_size\"/>\n    <xsl:text>\"</xsl:text>\n  </xsl:if>\n  <xsl:if test=\"$res_keyword_color\">\n    <xsl:text> color=\"</xsl:text>\n    <xsl:value-of select=\"$res_keyword_color\"/>\n    <xsl:text>\"</xsl:text>\n  </xsl:if>\n  <xsl:text>&gt;</xsl:text>\n  </xsl:if>\n</xsl:variable>\n\n<xsl:variable name=\"keyword_reformat_end\">\n  <xsl:if test=\"($res_keyword_size) or ($res_keyword_color)\">\n    <xsl:text>&lt;/font&gt;</xsl:text>\n  </xsl:if>\n  <xsl:if test=\"$res_keyword_format\">\n    <xsl:text>&lt;/</xsl:text>\n    <xsl:value-of select=\"$res_keyword_format\"/>\n    <xsl:text>&gt;</xsl:text>\n  </xsl:if>\n</xsl:variable>\n\n<!-- **********************************************************************\n  Reformat the keyword match display in a title/snippet string\n     (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"reformat_keyword\">\n  <xsl:param name=\"orig_string\"/>\n\n  <xsl:variable name=\"reformatted_1\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\" select=\"$keyword_orig_start\"/>\n      <xsl:with-param name=\"replace\" select=\"$keyword_reformat_start\"/>\n      <xsl:with-param name=\"string\" select=\"$orig_string\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:variable name=\"reformatted_2\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\" select=\"$keyword_orig_end\"/>\n      <xsl:with-param name=\"replace\" select=\"$keyword_reformat_end\"/>\n      <xsl:with-param name=\"string\" select=\"$reformatted_1\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:value-of disable-output-escaping='yes' select=\"$reformatted_2\"/>\n\n</xsl:template>\n\n\n<!-- **********************************************************************\n  Helper templates for generating a result item (do not customize)\n     ********************************************************************** -->\n\n<!-- *** Miscellaneous: - size - date - cache *** -->\n<xsl:template match=\"C\">\n    <xsl:param name=\"stripped_url\"/>\n    <xsl:param name=\"escaped_url\"/>\n    <xsl:param name=\"query\"/>\n    <xsl:param name=\"mime\"/>\n    <xsl:param name=\"date\"/>\n\n    <xsl:variable name=\"docid\"><xsl:value-of select=\"@CID\"/></xsl:variable>\n\n    <xsl:if test=\"$show_res_size != '0'\">\n    <xsl:if test=\"not(@SZ='')\">\n        <font color=\"{$res_url_color}\" size=\"{$res_url_size}\">\n          <xsl:text> - </xsl:text>\n          <xsl:value-of select=\"@SZ\"/>\n        </font>\n    </xsl:if>\n    </xsl:if>\n\n    <xsl:if test=\"$show_res_date != '0'\">\n    <xsl:if test=\"($date != '')\">\n        <font color=\"{$res_url_color}\" size=\"{$res_url_size}\">\n        <xsl:text> - </xsl:text>\n        <xsl:value-of select=\"$date\"/>\n        </font>\n    </xsl:if>\n    </xsl:if>\n\n    <xsl:if test=\"$show_res_cache != '0'\">\n        <font color=\"{$res_url_color}\" size=\"{$res_url_size}\">\n        <xsl:text> - </xsl:text>\n        </font>\n        <xsl:variable name=\"cache_encoding\">\n          <xsl:choose>\n            <xsl:when test=\"'' != @ENC\"><xsl:value-of select=\"@ENC\"/></xsl:when>\n            <xsl:otherwise>UTF-8</xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n        <a ctype=\"cache\" class=\"f\" href=\"search?q=cache:{$docid}:{$escaped_url}+{\n                           $stripped_search_query}&amp;{$base_url}&amp;oe={\n                           $cache_encoding}\">\n          <xsl:choose>\n            <xsl:when test=\"not($mime)\">Cached</xsl:when>\n            <xsl:when test=\"$mime='text/html'\">Cached</xsl:when>\n            <xsl:when test=\"$mime='text/plain'\">Cached</xsl:when>\n            <xsl:otherwise>Text Version</xsl:otherwise>\n          </xsl:choose>\n        </a>\n    </xsl:if>\n\n</xsl:template>\n\n\n<!-- **********************************************************************\n Google navigation bar in result page (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"google_navigation\">\n    <xsl:param name=\"prev\"/>\n    <xsl:param name=\"next\"/>\n    <xsl:param name=\"view_begin\"/>\n    <xsl:param name=\"view_end\"/>\n    <xsl:param name=\"guess\"/>\n    <xsl:param name=\"navigation_style\"/>\n    <xsl:param name=\"dynamic_nav_bar\"/>\n\n  <xsl:variable name=\"fontclass\">\n    <xsl:choose>\n      <xsl:when test=\"$navigation_style = 'top'\n          and $dynamic_nav_bar = '1'\">dn-bar-nav</xsl:when>\n      <xsl:when test=\"$navigation_style = 'top'\">s</xsl:when>\n      <xsl:otherwise>b</xsl:otherwise>\n    </xsl:choose>\n  </xsl:variable>\n\n  <!-- *** Test to see if we should even show navigation *** -->\n  <xsl:if test=\"($prev) or ($next)\">\n\n  <!-- *** Start Google result navigation bar *** -->\n\n    <xsl:if test=\"$navigation_style != 'top'\">\n      <xsl:text disable-output-escaping=\"yes\">&lt;center&gt;\n        &lt;div class=&quot;n&quot;&gt;</xsl:text>\n    </xsl:if>\n\n    <table border=\"0\" cellpadding=\"0\" width=\"1%\" cellspacing=\"0\">\n      <tr align=\"center\" valign=\"top\">\n        <xsl:if test=\"$navigation_style != 'top'\">\n        <td valign=\"bottom\" nowrap=\"1\">\n          <font size=\"-1\">\n            Result Page<xsl:call-template name=\"nbsp\"/>\n          </font>\n        </td>\n        </xsl:if>\n\n\n  <!-- *** Show previous navigation, if available *** -->\n        <xsl:choose>\n          <xsl:when test=\"$prev\">\n            <td nowrap=\"1\">\n\n              <span class=\"{$fontclass}\">\n              <a ctype=\"nav.prev\" href=\"search?{$search_url}&amp;start={$view_begin -\n                      $num_results - 1}\">\n                <xsl:if test=\"$navigation_style = 'google'\">\n\n                  <img src=\"/nav_previous.gif\" width=\"68\" height=\"26\"\n                    alt=\"Previous\" border=\"0\"/>\n                  <br/>\n                 </xsl:if>\n                <xsl:if test=\"$navigation_style = 'top'\">\n                  <xsl:text>&lt;</xsl:text><xsl:call-template name=\"nbsp\"/>\n                </xsl:if>\n                <xsl:text>Previous</xsl:text>\n              </a>\n              </span>\n              <xsl:if test=\"$navigation_style != 'google'\">\n                  <xsl:call-template name=\"nbsp\"/>\n              </xsl:if>\n            </td>\n          </xsl:when>\n          <xsl:otherwise>\n            <td nowrap=\"1\">\n              <xsl:if test=\"$navigation_style = 'google'\">\n                <img src=\"/nav_first.png\" width=\"18\" height=\"26\"\n                  alt=\"First\" border=\"0\"/>\n                <br/>\n              </xsl:if>\n            </td>\n          </xsl:otherwise>\n        </xsl:choose>\n\n        <xsl:if test=\"($navigation_style = 'google') or\n                      ($navigation_style = 'link')\">\n  <!-- *** Google result set navigation *** -->\n        <xsl:variable name=\"mod_end\">\n          <xsl:choose>\n            <xsl:when test=\"$next\"><xsl:value-of select=\"$guess\"/></xsl:when>\n            <xsl:otherwise><xsl:value-of select=\"$view_end\"/></xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n\n        <xsl:call-template name=\"result_nav\">\n          <xsl:with-param name=\"start\" select=\"0\"/>\n          <xsl:with-param name=\"end\" select=\"$mod_end\"/>\n          <xsl:with-param name=\"current_view\" select=\"($view_begin)-1\"/>\n          <xsl:with-param name=\"navigation_style\" select=\"$navigation_style\"/>\n        </xsl:call-template>\n        </xsl:if>\n\n  <!-- *** Show next navigation, if available *** -->\n        <xsl:choose>\n          <xsl:when test=\"$next\">\n            <td nowrap=\"1\">\n              <xsl:if test=\"$navigation_style != 'google'\">\n                  <xsl:call-template name=\"nbsp\"/>\n              </xsl:if>\n              <span class=\"{$fontclass}\">\n              <a ctype=\"nav.next\" href=\"search?{$search_url}&amp;start={$view_begin +\n                $num_results - 1}\">\n                <xsl:if test=\"$navigation_style = 'google'\">\n\n                  <img src=\"/nav_next.png\" width=\"100\" height=\"26\"\n\n                    alt=\"Next\" border=\"0\"/>\n                  <br/>\n                </xsl:if>\n                <xsl:text>Next</xsl:text>\n                <xsl:if test=\"$navigation_style = 'top'\">\n                  <xsl:call-template name=\"nbsp\"/><xsl:text>&gt;</xsl:text>\n                </xsl:if>\n              </a>\n              </span>\n            </td>\n          </xsl:when>\n          <xsl:otherwise>\n            <td nowrap=\"1\">\n              <xsl:if test=\"$navigation_style != 'google'\">\n                <xsl:call-template name=\"nbsp\"/>\n              </xsl:if>\n              <xsl:if test=\"$navigation_style = 'google'\">\n                <img src=\"/nav_last.png\" width=\"46\" height=\"26\"\n\n                  alt=\"Last\" border=\"0\"/>\n                <br/>\n              </xsl:if>\n            </td>\n          </xsl:otherwise>\n        </xsl:choose>\n\n  <!-- *** End Google result bar *** -->\n      </tr>\n    </table>\n\n    <xsl:if test=\"$navigation_style != 'top'\">\n      <xsl:text disable-output-escaping=\"yes\">&lt;/div&gt;\n        &lt;/center&gt;</xsl:text>\n    </xsl:if>\n  </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n Helper templates for generating Google result navigation (do not customize)\n   only shows 10 sets up or down from current view\n     ********************************************************************** -->\n<xsl:template name=\"result_nav\">\n  <xsl:param name=\"start\" select=\"'0'\"/>\n  <xsl:param name=\"end\"/>\n  <xsl:param name=\"current_view\"/>\n  <xsl:param name=\"navigation_style\"/>\n\n  <!-- *** Choose how to show this result set *** -->\n  <xsl:choose>\n    <xsl:when test=\"($start)&lt;(($current_view)-(10*($num_results)))\">\n    </xsl:when>\n    <xsl:when test=\"(($current_view)&gt;=($start)) and\n                    (($current_view)&lt;(($start)+($num_results)))\">\n      <td>\n        <xsl:if test=\"$navigation_style = 'google'\">\n          <img src=\"/nav_current.gif\" width=\"16\" height=\"26\" alt=\"Current\"/>\n          <br/>\n        </xsl:if>\n        <xsl:if test=\"$navigation_style = 'link'\">\n          <xsl:call-template name=\"nbsp\"/>\n        </xsl:if>\n        <span class=\"i\"><xsl:value-of\n          select=\"(($start)div($num_results))+1\"/></span>\n        <xsl:if test=\"$navigation_style = 'link'\">\n          <xsl:call-template name=\"nbsp\"/>\n        </xsl:if>\n      </td>\n    </xsl:when>\n    <xsl:otherwise>\n      <td>\n        <xsl:if test=\"$navigation_style = 'link'\">\n            <xsl:call-template name=\"nbsp\"/>\n        </xsl:if>\n        <a ctype=\"nav.page\" href=\"search?{$search_url}&amp;start={$start}\">\n        <xsl:if test=\"$navigation_style = 'google'\">\n          <img src=\"/nav_page.gif\" width=\"16\" height=\"26\" alt=\"Navigation\"\n               border=\"0\"/>\n          <br/>\n        </xsl:if>\n        <xsl:value-of select=\"(($start)div($num_results))+1\"/>\n        </a>\n        <xsl:if test=\"$navigation_style = 'link'\">\n           <xsl:call-template name=\"nbsp\"/>\n        </xsl:if>\n      </td>\n    </xsl:otherwise>\n  </xsl:choose>\n\n  <!-- *** Recursively iterate through result sets to display *** -->\n  <xsl:if test=\"((($start)+($num_results))&lt;($end)) and\n                ((($start)+($num_results))&lt;(($current_view)+\n                (10*($num_results))))\">\n    <xsl:call-template name=\"result_nav\">\n      <xsl:with-param name=\"start\" select=\"$start+$num_results\"/>\n      <xsl:with-param name=\"end\" select=\"$end\"/>\n      <xsl:with-param name=\"current_view\" select=\"$current_view\"/>\n      <xsl:with-param name=\"navigation_style\" select=\"$navigation_style\"/>\n    </xsl:call-template>\n  </xsl:if>\n\n</xsl:template>\n\n\n<!-- **********************************************************************\n Top separation bar (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"top_sep_bar\">\n  <xsl:param name=\"text\"/>\n  <xsl:param name=\"show_info\"/>\n  <xsl:param name=\"time\"/>\n\n\n    <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n      <tr>\n        <td bgcolor=\"{$sep_bar_border_color}\"><img width=\"1\" height=\"1\" alt=\"\"/></td>\n      </tr>\n    </table>\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" bgcolor=\"{$sep_bar_bg_color}\">\n      <tr>\n        <td nowrap=\"1\" width=\"1%\" bgcolor=\"{$sep_bar_bg_color}\">\n           <font size=\"+1\">\n                   <xsl:call-template name=\"nbsp\"/><b><xsl:value-of select=\"$text\"/></b>\n           </font>\n         </td>\n        <td nowrap=\"1\" align=\"right\" bgcolor=\"{$sep_bar_bg_color}\">\n          <xsl:if test=\"$show_info != 0\">\n            <font size=\"-1\">\n            <xsl:if test=\"count(/GSP/RES/R)>0 \">\n              <xsl:choose>\n                <xsl:when test=\"$access = 's' or $access = 'a'\">\n                  Results <b><xsl:value-of select=\"RES/@SN\"/></b> - <b><xsl:value-of select=\"RES/@EN\"/></b> for <b><xsl:value-of select=\"$space_normalized_query\"/></b>.\n                </xsl:when>\n                <xsl:otherwise>\n                  Results <b><xsl:value-of select=\"RES/@SN\"/></b> - <b><xsl:value-of select=\"RES/@EN\"/></b> of about <b><xsl:value-of select=\"RES/M\"/></b> for <b><xsl:value-of select=\"$space_normalized_query\"/></b>.\n                </xsl:otherwise>\n              </xsl:choose>\n            </xsl:if>\n              Search took <b><xsl:value-of select=\"round($time * 100.0) div 100.0\"/></b> seconds.\n            </font>\n          </xsl:if>\n        </td>\n      </tr>\n    </table>\n    <hr class=\"z\"/>\n    <xsl:if test=\"$choose_sep_bar = 'line'\">\n      <hr size=\"1\" color=\"gray\"/>\n    </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n Analytics script (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"analytics\">\n <xsl:if test=\"string-length($analytics_account) != 0\">\n   <script type=\"text/javascript\" src=\"{$analytics_script_url}\"></script>\n   <script type=\"text/javascript\">\n     var pageTracker = _gat._getTracker(\"<xsl:value-of select='$analytics_account'/>\");\n     pageTracker._trackPageview();\n   </script>\n </xsl:if>\n</xsl:template>\n\n<!-- **********************************************************************\n Utility function for constructing copyright text (do not customize)\n     ********************************************************************** -->\n<xsl:template name=\"copyright\">\n  <center>\n    <br/><br/>\n    <p>\n    <font face=\"arial,sans-serif\" size=\"-1\" color=\"#2f2f2f\">\n      Powered by Google Search Appliance</font>\n    </p>\n  </center>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Utility functions for generating html entities\n     ********************************************************************** -->\n<xsl:template name=\"nbsp\">\n  <xsl:text disable-output-escaping=\"yes\">&amp;nbsp;</xsl:text>\n</xsl:template>\n<xsl:template name=\"nbsp3\">\n  <xsl:call-template name=\"nbsp\"/>\n  <xsl:call-template name=\"nbsp\"/>\n  <xsl:call-template name=\"nbsp\"/>\n</xsl:template>\n<xsl:template name=\"nbsp4\">\n  <xsl:call-template name=\"nbsp3\"/>\n  <xsl:call-template name=\"nbsp\"/>\n</xsl:template>\n<xsl:template name=\"quot\">\n  <xsl:text disable-output-escaping=\"yes\">&amp;quot;</xsl:text>\n</xsl:template>\n<xsl:template name=\"rsaquo\">\n  <dfn><xsl:text disable-output-escaping=\"yes\">&amp;#8250;</xsl:text></dfn>\n</xsl:template>\n<xsl:template name=\"endash\">\n  <xsl:text disable-output-escaping=\"yes\">&amp;#8211;</xsl:text>\n</xsl:template>\n<xsl:template name=\"copy\">\n  <xsl:text disable-output-escaping=\"yes\">&amp;copy;</xsl:text>\n</xsl:template>\n\n<!-- **********************************************************************\n Utility functions for generating head elements so that the XSLT processor\n won't add a meta tag to the output, since it may specify the wrong\n encoding (utf8) in the meta tag.\n     ********************************************************************** -->\n<xsl:template name=\"plainHeadStart\">\n  <xsl:text disable-output-escaping=\"yes\">&lt;head&gt;</xsl:text>\n  <meta name=\"robots\" content=\"NOINDEX,NOFOLLOW\"/>\n  <xsl:text>\n  </xsl:text>\n</xsl:template>\n<xsl:template name=\"plainHeadEnd\">\n  <xsl:text disable-output-escaping=\"yes\">&lt;/head&gt;</xsl:text>\n  <xsl:text>\n  </xsl:text>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Utility functions for generating head elements with a meta tag to the output\n specifying the character set as requested\n     ********************************************************************** -->\n<xsl:template name=\"langHeadStart\">\n  <xsl:text disable-output-escaping=\"yes\">&lt;head&gt;</xsl:text>\n  <meta name=\"robots\" content=\"NOINDEX,NOFOLLOW\"/>\n  <xsl:choose>\n    <xsl:when test=\"PARAM[(@name='oe') and (@value='utf8')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='oe') and (@value!='')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset={PARAM[@name='oe']/@value}\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_zh-CN')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=GB2312\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_zh-TW')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=Big5\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_cs')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-2\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_da')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_nl')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_en')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_et')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_fi')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_fr')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_de')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_el')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-7\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_iw')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-8-I\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_hu')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-2\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_is')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_it')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ja')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=Shift_JIS\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ko')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=EUC-KR\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_lv')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_lt')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_no')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_pl')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-2\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_pt')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ro')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-2\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_ru')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=windows-1251\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_es')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:when test=\"PARAM[(@name='lr') and (@value='lang_sv')]\">\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\"/>\n    </xsl:when>\n    <xsl:otherwise>\n      <meta http-equiv=\"content-type\" content=\"text/html; charset=\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n  <xsl:text>\n  </xsl:text>\n</xsl:template>\n\n<xsl:template name=\"langHeadEnd\">\n  <xsl:text disable-output-escaping=\"yes\">&lt;/head&gt;</xsl:text>\n  <xsl:text>\n  </xsl:text>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Utility functions (do not customize)\n     ********************************************************************** -->\n\n<!-- *** Find the substring after the last occurence of a separator *** -->\n<xsl:template name=\"last_substring_after\">\n\n  <xsl:param name=\"string\"/>\n  <xsl:param name=\"separator\"/>\n  <xsl:param name=\"fallback\"/>\n\n  <xsl:variable name=\"newString\"\n    select=\"substring-after($string, $separator)\"/>\n\n  <xsl:choose>\n    <xsl:when test=\"$newString!=''\">\n      <xsl:call-template name=\"last_substring_after\">\n        <xsl:with-param name=\"string\" select=\"$newString\"/>\n        <xsl:with-param name=\"separator\" select=\"$separator\"/>\n        <xsl:with-param name=\"fallback\" select=\"$newString\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"$fallback\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n\n</xsl:template>\n\n<!-- *** Find and replace *** -->\n<xsl:template name=\"replace_string\">\n  <xsl:param name=\"find\"/>\n  <xsl:param name=\"replace\"/>\n  <xsl:param name=\"string\"/>\n  <xsl:choose>\n    <xsl:when test=\"contains($string, $find)\">\n      <xsl:value-of select=\"substring-before($string, $find)\"/>\n      <xsl:value-of select=\"$replace\"/>\n      <xsl:call-template name=\"replace_string\">\n        <xsl:with-param name=\"find\" select=\"$find\"/>\n        <xsl:with-param name=\"replace\" select=\"$replace\"/>\n        <xsl:with-param name=\"string\"\n          select=\"substring-after($string, $find)\"/>\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"$string\"/>\n    </xsl:otherwise>\n  </xsl:choose>\n</xsl:template>\n\n<!-- *** Decode hex encoding *** -->\n<xsl:template name=\"decode_hex\">\n  <xsl:param name=\"encoded\" />\n\n  <xsl:variable name=\"hex\" select=\"'0123456789ABCDEF'\" />\n  <xsl:variable name=\"ascii\"> !\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>\n\n  <xsl:choose>\n    <xsl:when test=\"contains($encoded,'%')\">\n      <xsl:value-of select=\"substring-before($encoded,'%')\" />\n      <xsl:variable name=\"hexpair\" select=\"translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')\" />\n      <xsl:variable name=\"decimal\" select=\"(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))\" />\n      <xsl:choose>\n        <xsl:when test=\"$decimal &lt; 127 and $decimal &gt; 31\">\n          <xsl:value-of select=\"substring($ascii,$decimal - 31,1)\" />\n        </xsl:when>\n        <xsl:when test=\"$decimal &gt; 159\">\n          <xsl:text disable-output-escaping=\"yes\">%</xsl:text>\n          <xsl:value-of select=\"$hexpair\" />\n        </xsl:when>\n        <xsl:otherwise>?</xsl:otherwise>\n      </xsl:choose>\n      <xsl:call-template name=\"decode_hex\">\n        <xsl:with-param name=\"encoded\" select=\"substring(substring-after($encoded,'%'),3)\" />\n      </xsl:call-template>\n    </xsl:when>\n    <xsl:otherwise>\n      <xsl:value-of select=\"$encoded\" />\n    </xsl:otherwise>\n  </xsl:choose>\n\n</xsl:template>\n\n<!-- *** Convert UNC *** -->\n<xsl:template name=\"convert_unc\">\n  <xsl:param name=\"string\"/>\n  <xsl:variable name=\"slash\">/</xsl:variable>\n  <xsl:variable name=\"backslash\">\\</xsl:variable>\n  <xsl:variable name=\"escaped_ampersand\">&amp;amp;</xsl:variable>\n  <xsl:variable name=\"unescaped_ampersand\">&amp;</xsl:variable>\n\n  <xsl:variable name=\"converted_1\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\"    select=\"$slash\"/>\n      <xsl:with-param name=\"replace\" select=\"$backslash\"/>\n      <xsl:with-param name=\"string\"  select=\"$string\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:variable name=\"converted_2\">\n    <xsl:call-template name=\"decode_hex\">\n      <xsl:with-param name=\"encoded\" select=\"$converted_1\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:variable name=\"converted_3\">\n    <xsl:call-template name=\"replace_string\">\n      <xsl:with-param name=\"find\"    select=\"$escaped_ampersand\"/>\n      <xsl:with-param name=\"replace\" select=\"$unescaped_ampersand\"/>\n      <xsl:with-param name=\"string\"  select=\"$converted_2\"/>\n    </xsl:call-template>\n  </xsl:variable>\n\n  <xsl:value-of disable-output-escaping='yes' select=\"concat($backslash,$backslash,$converted_3)\"/>\n\n</xsl:template>\n\n<!-- **********************************************************************\n Display error messages\n     ********************************************************************** -->\n<xsl:template name=\"error_page\">\n  <xsl:param name=\"errorMessage\"/>\n  <xsl:param name=\"errorDescription\"/>\n\n  <html>\n    <xsl:call-template name=\"plainHeadStart\"/>\n      <title><xsl:value-of select=\"$error_page_title\"/></title>\n            <xsl:call-template name=\"style\"/>\n    <xsl:call-template name=\"plainHeadEnd\"/>\n    <body dir=\"ltr\">\n      <xsl:call-template name=\"personalization\"/>\n      <xsl:call-template name=\"analytics\"/>\n\n            <xsl:call-template name=\"my_page_header\"/>\n\n            <xsl:if test=\"$show_logo != '0'\">\n                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n                  <tr>\n                          <td rowspan=\"3\" valign=\"top\">\n                          <xsl:call-template name=\"logo\"/>\n                          <xsl:call-template name=\"nbsp3\"/>\n                        </td>\n                  </tr>\n                </table>\n            </xsl:if>\n\n      <xsl:call-template name=\"top_sep_bar\">\n        <xsl:with-param name=\"text\" select=\"$sep_bar_error_text\"/>\n                <xsl:with-param name=\"show_info\" select=\"0\"/>\n        <xsl:with-param name=\"time\" select=\"0\"/>\n      </xsl:call-template>\n\n      <p>\n      <table width=\"99%\" border=\"0\" cellpadding=\"2\" cellspacing=\"0\">\n        <tr>\n          <td><font color=\"#990000\" size=\"+1\">Message:</font></td>\n          <td><font color=\"#990000\" size=\"+1\"><xsl:value-of select=\"$errorMessage\"/></font></td>\n        </tr>\n        <tr>\n          <td><font color=\"#990000\">Description:</font></td>\n          <td><font color=\"#990000\"><xsl:value-of select=\"$errorDescription\"/></font></td>\n        </tr>\n        <tr>\n          <td><font color=\"#990000\">Details:</font></td>\n          <td><font color=\"#990000\"><xsl:copy-of select=\"/\"/></font></td>\n        </tr>\n      </table>\n      </p>\n\n          <hr/>\n          <xsl:call-template name=\"copyright\"/>\n          <xsl:call-template name=\"my_page_footer\"/>\n\n    </body>\n  </html>\n</xsl:template>\n\n\n<!-- **********************************************************************\n Google Desktop for Enterprise integration templates\n     ********************************************************************** -->\n<xsl:template name=\"desktop_tab\">\n\n  <!-- *** Show the Google tabs *** -->\n\n  <font size=\"-1\">\n    <a class=\"q\" onClick=\"return window.qs?qs(this):1\" ctype=\"desk.web\" href=\"http://www.google.com/search?q={$qval}\">Web</a>\n  </font>\n\n  <xsl:call-template name=\"nbsp4\"/>\n\n  <font size=\"-1\">\n    <a class=\"q\" onClick=\"return window.qs?qs(this):1\" ctype=\"desk.images\"  href=\"http://images.google.com/images?q={$qval}\">Images</a>\n  </font>\n\n  <xsl:call-template name=\"nbsp4\"/>\n\n  <font size=\"-1\">\n    <a class=\"q\" onClick=\"return window.qs?qs(this):1\" ctype=\"desk.groups\" href=\"http://groups.google.com/groups?q={$qval}\">Groups</a>\n  </font>\n\n  <xsl:call-template name=\"nbsp4\"/>\n\n  <font size=\"-1\">\n    <a class=\"q\" onClick=\"return window.qs?qs(this):1\" ctype=\"desk.news\"  href=\"http://news.google.com/news?q={$qval}\">News</a>\n  </font>\n\n  <xsl:call-template name=\"nbsp4\"/>\n\n  <font size=\"-1\">\n    <a class=\"q\" onClick=\"return window.qs?qs(this):1\" ctype=\"desk.local\"  href=\"http://local.google.com/local?q={$qval}\">Local</a>\n  </font>\n\n  <xsl:call-template name=\"nbsp4\"/>\n\n  <!-- *** Show the desktop and web tabs *** -->\n\n  <xsl:if test=\"CUSTOM/HOME\">\n    <xsl:comment>trh2</xsl:comment>\n  </xsl:if>\n  <xsl:if test=\"Q\">\n    <xsl:comment>trl2</xsl:comment>\n  </xsl:if>\n\n  <!-- *** Show the appliance tab *** -->\n  <font size=\"-1\"><b><xsl:value-of select=\"$egds_appliance_tab_label\"/></b></font>\n\n</xsl:template>\n\n<xsl:template name=\"desktop_results\">\n  <xsl:comment>tro2</xsl:comment>\n</xsl:template>\n\n<!-- **********************************************************************\n  OneBox results (if any)\n     ********************************************************************** -->\n<xsl:template name=\"onebox\">\n  <xsl:for-each select=\"/GSP/ENTOBRESULTS\">\n    <xsl:apply-templates/>\n  </xsl:for-each>\n</xsl:template>\n\n<!-- **********************************************************************\n Swallow unmatched elements\n     ********************************************************************** -->\n<xsl:template match=\"@*|node()\"/>\n</xsl:stylesheet>\n\n\n<!-- *** END OF STYLESHEET *** -->\n\n\n",
			"'google'",
			"variable name=\"nav_style",
			"variable name=\"navigation_style",
			"navigation_style",
			"google_navigation",
			"search_button_text",
			"&lt;form",
			"&gt;form",
			"<form",
			"#c",
			"show_search_tabs",
			"desktop_tab",
			"Images",
			"choose_sep_bar",
			"value=\"\\\\\\\\",
			"sitesearch",
			"meta",
			"srch-meta",
			"srch-title",
			"file",
			"DuplicatesLinkText",
			"duplicates",
			"^\\.([^ ]+).*\\n",
			"\\n",
			"^([A-Za-z]*)",
			"^\\..*",
			"^\\.([a-zA-Z]*).*Common$",
			"Contact",
			"http://737icv.web.boeing.com",
			"http://737icv.web.boeing.com\n",
			"/$",
			"^\\d+:\\s*(.*)",
			": ",
			"\n",
			"9993",
			"\n",
			"order allow",
			"online",
			"’"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"h4",
			"h5",
			"{%",
			"h5",
			"brown",
			"\\1",
			"",
			"Integer",
			"{color:#0060bb}\\1{color}",
			"\\\\\\\\ \\\\\\\\",
			"\\\\\\\\\\\\\\\\",
			"\\\\\\\\",
			"{color:#0060bb}\\1{color}",
			"<html class=\"html\">",
			"<body class=\"body\"",
			"value=\"path:\\\\",
			"a",
			"\\1;",
			";",
			"",
			"\\1",
			"",
			"<a href=\"\\1\">\\1</a>",
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pre-compiled/less/custom.less",
					"settings":
					{
						"buffer_size": 2255,
						"regions":
						{
						},
						"selection":
						[
							[
								2089,
								2089
							]
						],
						"settings":
						{
							"syntax": "Packages/LESS/LESS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1172.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/base.html",
					"settings":
					{
						"buffer_size": 2989,
						"regions":
						{
						},
						"selection":
						[
							[
								1846,
								1846
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 549.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/home.html",
					"settings":
					{
						"buffer_size": 1762,
						"regions":
						{
						},
						"selection":
						[
							[
								1502,
								1488
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/default.html",
					"settings":
					{
						"buffer_size": 359,
						"regions":
						{
						},
						"selection":
						[
							[
								230,
								230
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "content/about.mkd",
					"settings":
					{
						"buffer_size": 2884,
						"regions":
						{
						},
						"selection":
						[
							[
								1572,
								1572
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "content/forms.mkd",
					"settings":
					{
						"buffer_size": 1306,
						"regions":
						{
						},
						"selection":
						[
							[
								71,
								71
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "templates/contact.html",
					"settings":
					{
						"buffer_size": 150,
						"regions":
						{
						},
						"selection":
						[
							[
								150,
								150
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "content/services.mkd",
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								985,
								985
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 8,
					"file": "pre-compiled/less/responsive-custom.less",
					"settings":
					{
						"buffer_size": 303,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"syntax": "Packages/LESS/LESS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "content/contact.mkd",
					"settings":
					{
						"buffer_size": 802,
						"regions":
						{
						},
						"selection":
						[
							[
								638,
								638
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "pre-compiled/less/variables.less",
					"settings":
					{
						"buffer_size": 9423,
						"regions":
						{
						},
						"selection":
						[
							[
								4984,
								4986
							]
						],
						"settings":
						{
							"syntax": "Packages/LESS/LESS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "pre-compiled/js/scripts.js",
					"settings":
					{
						"buffer_size": 152,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								152
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 178.0,
	"status_bar_visible": true
}
